
rtcproject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800200  000010a6  0000113a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  00800222  00800222  0000115c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000115c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000011b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  000011f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001df5  00000000  00000000  00001358  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001056  00000000  00000000  0000314d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001017  00000000  00000000  000041a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002b4  00000000  00000000  000051bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000090a  00000000  00000000  00005470  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001164  00000000  00000000  00005d7a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  00006ede  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
       6:	00 00       	nop
       8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
       a:	00 00       	nop
       c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
       e:	00 00       	nop
      10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
      12:	00 00       	nop
      14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
      16:	00 00       	nop
      18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
      1e:	00 00       	nop
      20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
      22:	00 00       	nop
      24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
      26:	00 00       	nop
      28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
      2e:	00 00       	nop
      30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
      32:	00 00       	nop
      34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
      36:	00 00       	nop
      38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
      3e:	00 00       	nop
      40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
      42:	00 00       	nop
      44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
      46:	00 00       	nop
      48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
      4e:	00 00       	nop
      50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
      52:	00 00       	nop
      54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
      56:	00 00       	nop
      58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
      5e:	00 00       	nop
      60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
      62:	00 00       	nop
      64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
      66:	00 00       	nop
      68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
      6e:	00 00       	nop
      70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
      72:	00 00       	nop
      74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
      76:	00 00       	nop
      78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
      7e:	00 00       	nop
      80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
      82:	00 00       	nop
      84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
      86:	00 00       	nop
      88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
      8e:	00 00       	nop
      90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
      92:	00 00       	nop
      94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
      96:	00 00       	nop
      98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
      be:	00 00       	nop
      c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
      da:	00 00       	nop
      dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
      de:	00 00       	nop
      e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e6 ea       	ldi	r30, 0xA6	; 166
      fc:	f0 e1       	ldi	r31, 0x10	; 16
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a2 32       	cpi	r26, 0x22	; 34
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a2 e2       	ldi	r26, 0x22	; 34
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a0 33       	cpi	r26, 0x30	; 48
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	80 d3       	rcall	.+1792   	; 0x820 <main>
     120:	c0 c7       	rjmp	.+3968   	; 0x10a2 <_exit>

00000122 <__bad_interrupt>:
     122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <GPIO_setupPinDirection>:
     124:	68 30       	cpi	r22, 0x08	; 8
     126:	08 f0       	brcs	.+2      	; 0x12a <GPIO_setupPinDirection+0x6>
     128:	3b c1       	rjmp	.+630    	; 0x3a0 <GPIO_setupPinDirection+0x27c>
     12a:	8b 30       	cpi	r24, 0x0B	; 11
     12c:	08 f0       	brcs	.+2      	; 0x130 <GPIO_setupPinDirection+0xc>
     12e:	38 c1       	rjmp	.+624    	; 0x3a0 <GPIO_setupPinDirection+0x27c>
     130:	81 11       	cpse	r24, r1
     132:	19 c0       	rjmp	.+50     	; 0x166 <GPIO_setupPinDirection+0x42>
     134:	41 30       	cpi	r20, 0x01	; 1
     136:	59 f4       	brne	.+22     	; 0x14e <GPIO_setupPinDirection+0x2a>
     138:	21 b1       	in	r18, 0x01	; 1
     13a:	81 e0       	ldi	r24, 0x01	; 1
     13c:	90 e0       	ldi	r25, 0x00	; 0
     13e:	02 c0       	rjmp	.+4      	; 0x144 <GPIO_setupPinDirection+0x20>
     140:	88 0f       	add	r24, r24
     142:	99 1f       	adc	r25, r25
     144:	6a 95       	dec	r22
     146:	e2 f7       	brpl	.-8      	; 0x140 <GPIO_setupPinDirection+0x1c>
     148:	82 2b       	or	r24, r18
     14a:	81 b9       	out	0x01, r24	; 1
     14c:	08 95       	ret
     14e:	21 b1       	in	r18, 0x01	; 1
     150:	81 e0       	ldi	r24, 0x01	; 1
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	02 c0       	rjmp	.+4      	; 0x15a <GPIO_setupPinDirection+0x36>
     156:	88 0f       	add	r24, r24
     158:	99 1f       	adc	r25, r25
     15a:	6a 95       	dec	r22
     15c:	e2 f7       	brpl	.-8      	; 0x156 <GPIO_setupPinDirection+0x32>
     15e:	80 95       	com	r24
     160:	82 23       	and	r24, r18
     162:	81 b9       	out	0x01, r24	; 1
     164:	08 95       	ret
     166:	81 30       	cpi	r24, 0x01	; 1
     168:	c9 f4       	brne	.+50     	; 0x19c <GPIO_setupPinDirection+0x78>
     16a:	41 30       	cpi	r20, 0x01	; 1
     16c:	59 f4       	brne	.+22     	; 0x184 <GPIO_setupPinDirection+0x60>
     16e:	24 b1       	in	r18, 0x04	; 4
     170:	81 e0       	ldi	r24, 0x01	; 1
     172:	90 e0       	ldi	r25, 0x00	; 0
     174:	02 c0       	rjmp	.+4      	; 0x17a <GPIO_setupPinDirection+0x56>
     176:	88 0f       	add	r24, r24
     178:	99 1f       	adc	r25, r25
     17a:	6a 95       	dec	r22
     17c:	e2 f7       	brpl	.-8      	; 0x176 <GPIO_setupPinDirection+0x52>
     17e:	82 2b       	or	r24, r18
     180:	84 b9       	out	0x04, r24	; 4
     182:	08 95       	ret
     184:	24 b1       	in	r18, 0x04	; 4
     186:	81 e0       	ldi	r24, 0x01	; 1
     188:	90 e0       	ldi	r25, 0x00	; 0
     18a:	02 c0       	rjmp	.+4      	; 0x190 <GPIO_setupPinDirection+0x6c>
     18c:	88 0f       	add	r24, r24
     18e:	99 1f       	adc	r25, r25
     190:	6a 95       	dec	r22
     192:	e2 f7       	brpl	.-8      	; 0x18c <GPIO_setupPinDirection+0x68>
     194:	80 95       	com	r24
     196:	82 23       	and	r24, r18
     198:	84 b9       	out	0x04, r24	; 4
     19a:	08 95       	ret
     19c:	82 30       	cpi	r24, 0x02	; 2
     19e:	c9 f4       	brne	.+50     	; 0x1d2 <GPIO_setupPinDirection+0xae>
     1a0:	41 30       	cpi	r20, 0x01	; 1
     1a2:	59 f4       	brne	.+22     	; 0x1ba <GPIO_setupPinDirection+0x96>
     1a4:	27 b1       	in	r18, 0x07	; 7
     1a6:	81 e0       	ldi	r24, 0x01	; 1
     1a8:	90 e0       	ldi	r25, 0x00	; 0
     1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <GPIO_setupPinDirection+0x8c>
     1ac:	88 0f       	add	r24, r24
     1ae:	99 1f       	adc	r25, r25
     1b0:	6a 95       	dec	r22
     1b2:	e2 f7       	brpl	.-8      	; 0x1ac <GPIO_setupPinDirection+0x88>
     1b4:	82 2b       	or	r24, r18
     1b6:	87 b9       	out	0x07, r24	; 7
     1b8:	08 95       	ret
     1ba:	27 b1       	in	r18, 0x07	; 7
     1bc:	81 e0       	ldi	r24, 0x01	; 1
     1be:	90 e0       	ldi	r25, 0x00	; 0
     1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <GPIO_setupPinDirection+0xa2>
     1c2:	88 0f       	add	r24, r24
     1c4:	99 1f       	adc	r25, r25
     1c6:	6a 95       	dec	r22
     1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <GPIO_setupPinDirection+0x9e>
     1ca:	80 95       	com	r24
     1cc:	82 23       	and	r24, r18
     1ce:	87 b9       	out	0x07, r24	; 7
     1d0:	08 95       	ret
     1d2:	83 30       	cpi	r24, 0x03	; 3
     1d4:	c9 f4       	brne	.+50     	; 0x208 <GPIO_setupPinDirection+0xe4>
     1d6:	41 30       	cpi	r20, 0x01	; 1
     1d8:	59 f4       	brne	.+22     	; 0x1f0 <GPIO_setupPinDirection+0xcc>
     1da:	2a b1       	in	r18, 0x0a	; 10
     1dc:	81 e0       	ldi	r24, 0x01	; 1
     1de:	90 e0       	ldi	r25, 0x00	; 0
     1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <GPIO_setupPinDirection+0xc2>
     1e2:	88 0f       	add	r24, r24
     1e4:	99 1f       	adc	r25, r25
     1e6:	6a 95       	dec	r22
     1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <GPIO_setupPinDirection+0xbe>
     1ea:	82 2b       	or	r24, r18
     1ec:	8a b9       	out	0x0a, r24	; 10
     1ee:	08 95       	ret
     1f0:	2a b1       	in	r18, 0x0a	; 10
     1f2:	81 e0       	ldi	r24, 0x01	; 1
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	02 c0       	rjmp	.+4      	; 0x1fc <GPIO_setupPinDirection+0xd8>
     1f8:	88 0f       	add	r24, r24
     1fa:	99 1f       	adc	r25, r25
     1fc:	6a 95       	dec	r22
     1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <GPIO_setupPinDirection+0xd4>
     200:	80 95       	com	r24
     202:	82 23       	and	r24, r18
     204:	8a b9       	out	0x0a, r24	; 10
     206:	08 95       	ret
     208:	84 30       	cpi	r24, 0x04	; 4
     20a:	c9 f4       	brne	.+50     	; 0x23e <GPIO_setupPinDirection+0x11a>
     20c:	41 30       	cpi	r20, 0x01	; 1
     20e:	59 f4       	brne	.+22     	; 0x226 <GPIO_setupPinDirection+0x102>
     210:	2d b1       	in	r18, 0x0d	; 13
     212:	81 e0       	ldi	r24, 0x01	; 1
     214:	90 e0       	ldi	r25, 0x00	; 0
     216:	02 c0       	rjmp	.+4      	; 0x21c <GPIO_setupPinDirection+0xf8>
     218:	88 0f       	add	r24, r24
     21a:	99 1f       	adc	r25, r25
     21c:	6a 95       	dec	r22
     21e:	e2 f7       	brpl	.-8      	; 0x218 <GPIO_setupPinDirection+0xf4>
     220:	82 2b       	or	r24, r18
     222:	8d b9       	out	0x0d, r24	; 13
     224:	08 95       	ret
     226:	2d b1       	in	r18, 0x0d	; 13
     228:	81 e0       	ldi	r24, 0x01	; 1
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	02 c0       	rjmp	.+4      	; 0x232 <GPIO_setupPinDirection+0x10e>
     22e:	88 0f       	add	r24, r24
     230:	99 1f       	adc	r25, r25
     232:	6a 95       	dec	r22
     234:	e2 f7       	brpl	.-8      	; 0x22e <GPIO_setupPinDirection+0x10a>
     236:	80 95       	com	r24
     238:	82 23       	and	r24, r18
     23a:	8d b9       	out	0x0d, r24	; 13
     23c:	08 95       	ret
     23e:	85 30       	cpi	r24, 0x05	; 5
     240:	c9 f4       	brne	.+50     	; 0x274 <GPIO_setupPinDirection+0x150>
     242:	41 30       	cpi	r20, 0x01	; 1
     244:	59 f4       	brne	.+22     	; 0x25c <GPIO_setupPinDirection+0x138>
     246:	20 b3       	in	r18, 0x10	; 16
     248:	81 e0       	ldi	r24, 0x01	; 1
     24a:	90 e0       	ldi	r25, 0x00	; 0
     24c:	02 c0       	rjmp	.+4      	; 0x252 <GPIO_setupPinDirection+0x12e>
     24e:	88 0f       	add	r24, r24
     250:	99 1f       	adc	r25, r25
     252:	6a 95       	dec	r22
     254:	e2 f7       	brpl	.-8      	; 0x24e <GPIO_setupPinDirection+0x12a>
     256:	82 2b       	or	r24, r18
     258:	80 bb       	out	0x10, r24	; 16
     25a:	08 95       	ret
     25c:	20 b3       	in	r18, 0x10	; 16
     25e:	81 e0       	ldi	r24, 0x01	; 1
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	02 c0       	rjmp	.+4      	; 0x268 <GPIO_setupPinDirection+0x144>
     264:	88 0f       	add	r24, r24
     266:	99 1f       	adc	r25, r25
     268:	6a 95       	dec	r22
     26a:	e2 f7       	brpl	.-8      	; 0x264 <GPIO_setupPinDirection+0x140>
     26c:	80 95       	com	r24
     26e:	82 23       	and	r24, r18
     270:	80 bb       	out	0x10, r24	; 16
     272:	08 95       	ret
     274:	86 30       	cpi	r24, 0x06	; 6
     276:	c9 f4       	brne	.+50     	; 0x2aa <GPIO_setupPinDirection+0x186>
     278:	41 30       	cpi	r20, 0x01	; 1
     27a:	59 f4       	brne	.+22     	; 0x292 <GPIO_setupPinDirection+0x16e>
     27c:	23 b3       	in	r18, 0x13	; 19
     27e:	81 e0       	ldi	r24, 0x01	; 1
     280:	90 e0       	ldi	r25, 0x00	; 0
     282:	02 c0       	rjmp	.+4      	; 0x288 <GPIO_setupPinDirection+0x164>
     284:	88 0f       	add	r24, r24
     286:	99 1f       	adc	r25, r25
     288:	6a 95       	dec	r22
     28a:	e2 f7       	brpl	.-8      	; 0x284 <GPIO_setupPinDirection+0x160>
     28c:	82 2b       	or	r24, r18
     28e:	83 bb       	out	0x13, r24	; 19
     290:	08 95       	ret
     292:	23 b3       	in	r18, 0x13	; 19
     294:	81 e0       	ldi	r24, 0x01	; 1
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	02 c0       	rjmp	.+4      	; 0x29e <GPIO_setupPinDirection+0x17a>
     29a:	88 0f       	add	r24, r24
     29c:	99 1f       	adc	r25, r25
     29e:	6a 95       	dec	r22
     2a0:	e2 f7       	brpl	.-8      	; 0x29a <GPIO_setupPinDirection+0x176>
     2a2:	80 95       	com	r24
     2a4:	82 23       	and	r24, r18
     2a6:	83 bb       	out	0x13, r24	; 19
     2a8:	08 95       	ret
     2aa:	87 30       	cpi	r24, 0x07	; 7
     2ac:	e9 f4       	brne	.+58     	; 0x2e8 <GPIO_setupPinDirection+0x1c4>
     2ae:	41 30       	cpi	r20, 0x01	; 1
     2b0:	69 f4       	brne	.+26     	; 0x2cc <GPIO_setupPinDirection+0x1a8>
     2b2:	e1 e0       	ldi	r30, 0x01	; 1
     2b4:	f1 e0       	ldi	r31, 0x01	; 1
     2b6:	20 81       	ld	r18, Z
     2b8:	81 e0       	ldi	r24, 0x01	; 1
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	02 c0       	rjmp	.+4      	; 0x2c2 <GPIO_setupPinDirection+0x19e>
     2be:	88 0f       	add	r24, r24
     2c0:	99 1f       	adc	r25, r25
     2c2:	6a 95       	dec	r22
     2c4:	e2 f7       	brpl	.-8      	; 0x2be <GPIO_setupPinDirection+0x19a>
     2c6:	82 2b       	or	r24, r18
     2c8:	80 83       	st	Z, r24
     2ca:	08 95       	ret
     2cc:	e1 e0       	ldi	r30, 0x01	; 1
     2ce:	f1 e0       	ldi	r31, 0x01	; 1
     2d0:	20 81       	ld	r18, Z
     2d2:	81 e0       	ldi	r24, 0x01	; 1
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	02 c0       	rjmp	.+4      	; 0x2dc <GPIO_setupPinDirection+0x1b8>
     2d8:	88 0f       	add	r24, r24
     2da:	99 1f       	adc	r25, r25
     2dc:	6a 95       	dec	r22
     2de:	e2 f7       	brpl	.-8      	; 0x2d8 <GPIO_setupPinDirection+0x1b4>
     2e0:	80 95       	com	r24
     2e2:	82 23       	and	r24, r18
     2e4:	80 83       	st	Z, r24
     2e6:	08 95       	ret
     2e8:	88 30       	cpi	r24, 0x08	; 8
     2ea:	e9 f4       	brne	.+58     	; 0x326 <GPIO_setupPinDirection+0x202>
     2ec:	41 30       	cpi	r20, 0x01	; 1
     2ee:	69 f4       	brne	.+26     	; 0x30a <GPIO_setupPinDirection+0x1e6>
     2f0:	e4 e0       	ldi	r30, 0x04	; 4
     2f2:	f1 e0       	ldi	r31, 0x01	; 1
     2f4:	20 81       	ld	r18, Z
     2f6:	81 e0       	ldi	r24, 0x01	; 1
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	02 c0       	rjmp	.+4      	; 0x300 <GPIO_setupPinDirection+0x1dc>
     2fc:	88 0f       	add	r24, r24
     2fe:	99 1f       	adc	r25, r25
     300:	6a 95       	dec	r22
     302:	e2 f7       	brpl	.-8      	; 0x2fc <GPIO_setupPinDirection+0x1d8>
     304:	82 2b       	or	r24, r18
     306:	80 83       	st	Z, r24
     308:	08 95       	ret
     30a:	e4 e0       	ldi	r30, 0x04	; 4
     30c:	f1 e0       	ldi	r31, 0x01	; 1
     30e:	20 81       	ld	r18, Z
     310:	81 e0       	ldi	r24, 0x01	; 1
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	02 c0       	rjmp	.+4      	; 0x31a <GPIO_setupPinDirection+0x1f6>
     316:	88 0f       	add	r24, r24
     318:	99 1f       	adc	r25, r25
     31a:	6a 95       	dec	r22
     31c:	e2 f7       	brpl	.-8      	; 0x316 <GPIO_setupPinDirection+0x1f2>
     31e:	80 95       	com	r24
     320:	82 23       	and	r24, r18
     322:	80 83       	st	Z, r24
     324:	08 95       	ret
     326:	89 30       	cpi	r24, 0x09	; 9
     328:	e9 f4       	brne	.+58     	; 0x364 <GPIO_setupPinDirection+0x240>
     32a:	41 30       	cpi	r20, 0x01	; 1
     32c:	69 f4       	brne	.+26     	; 0x348 <GPIO_setupPinDirection+0x224>
     32e:	e7 e0       	ldi	r30, 0x07	; 7
     330:	f1 e0       	ldi	r31, 0x01	; 1
     332:	20 81       	ld	r18, Z
     334:	81 e0       	ldi	r24, 0x01	; 1
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	02 c0       	rjmp	.+4      	; 0x33e <GPIO_setupPinDirection+0x21a>
     33a:	88 0f       	add	r24, r24
     33c:	99 1f       	adc	r25, r25
     33e:	6a 95       	dec	r22
     340:	e2 f7       	brpl	.-8      	; 0x33a <GPIO_setupPinDirection+0x216>
     342:	82 2b       	or	r24, r18
     344:	80 83       	st	Z, r24
     346:	08 95       	ret
     348:	e7 e0       	ldi	r30, 0x07	; 7
     34a:	f1 e0       	ldi	r31, 0x01	; 1
     34c:	20 81       	ld	r18, Z
     34e:	81 e0       	ldi	r24, 0x01	; 1
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	02 c0       	rjmp	.+4      	; 0x358 <GPIO_setupPinDirection+0x234>
     354:	88 0f       	add	r24, r24
     356:	99 1f       	adc	r25, r25
     358:	6a 95       	dec	r22
     35a:	e2 f7       	brpl	.-8      	; 0x354 <GPIO_setupPinDirection+0x230>
     35c:	80 95       	com	r24
     35e:	82 23       	and	r24, r18
     360:	80 83       	st	Z, r24
     362:	08 95       	ret
     364:	8a 30       	cpi	r24, 0x0A	; 10
     366:	e1 f4       	brne	.+56     	; 0x3a0 <GPIO_setupPinDirection+0x27c>
     368:	41 30       	cpi	r20, 0x01	; 1
     36a:	69 f4       	brne	.+26     	; 0x386 <GPIO_setupPinDirection+0x262>
     36c:	ea e0       	ldi	r30, 0x0A	; 10
     36e:	f1 e0       	ldi	r31, 0x01	; 1
     370:	20 81       	ld	r18, Z
     372:	81 e0       	ldi	r24, 0x01	; 1
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	02 c0       	rjmp	.+4      	; 0x37c <GPIO_setupPinDirection+0x258>
     378:	88 0f       	add	r24, r24
     37a:	99 1f       	adc	r25, r25
     37c:	6a 95       	dec	r22
     37e:	e2 f7       	brpl	.-8      	; 0x378 <GPIO_setupPinDirection+0x254>
     380:	82 2b       	or	r24, r18
     382:	80 83       	st	Z, r24
     384:	08 95       	ret
     386:	ea e0       	ldi	r30, 0x0A	; 10
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	20 81       	ld	r18, Z
     38c:	81 e0       	ldi	r24, 0x01	; 1
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	02 c0       	rjmp	.+4      	; 0x396 <GPIO_setupPinDirection+0x272>
     392:	88 0f       	add	r24, r24
     394:	99 1f       	adc	r25, r25
     396:	6a 95       	dec	r22
     398:	e2 f7       	brpl	.-8      	; 0x392 <GPIO_setupPinDirection+0x26e>
     39a:	80 95       	com	r24
     39c:	82 23       	and	r24, r18
     39e:	80 83       	st	Z, r24
     3a0:	08 95       	ret

000003a2 <GPIO_writePin>:
     3a2:	68 30       	cpi	r22, 0x08	; 8
     3a4:	08 f0       	brcs	.+2      	; 0x3a8 <GPIO_writePin+0x6>
     3a6:	3b c1       	rjmp	.+630    	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
     3a8:	8b 30       	cpi	r24, 0x0B	; 11
     3aa:	08 f0       	brcs	.+2      	; 0x3ae <GPIO_writePin+0xc>
     3ac:	38 c1       	rjmp	.+624    	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
     3ae:	81 11       	cpse	r24, r1
     3b0:	19 c0       	rjmp	.+50     	; 0x3e4 <GPIO_writePin+0x42>
     3b2:	41 30       	cpi	r20, 0x01	; 1
     3b4:	59 f4       	brne	.+22     	; 0x3cc <GPIO_writePin+0x2a>
     3b6:	22 b1       	in	r18, 0x02	; 2
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <GPIO_writePin+0x20>
     3be:	88 0f       	add	r24, r24
     3c0:	99 1f       	adc	r25, r25
     3c2:	6a 95       	dec	r22
     3c4:	e2 f7       	brpl	.-8      	; 0x3be <GPIO_writePin+0x1c>
     3c6:	82 2b       	or	r24, r18
     3c8:	82 b9       	out	0x02, r24	; 2
     3ca:	08 95       	ret
     3cc:	22 b1       	in	r18, 0x02	; 2
     3ce:	81 e0       	ldi	r24, 0x01	; 1
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	02 c0       	rjmp	.+4      	; 0x3d8 <GPIO_writePin+0x36>
     3d4:	88 0f       	add	r24, r24
     3d6:	99 1f       	adc	r25, r25
     3d8:	6a 95       	dec	r22
     3da:	e2 f7       	brpl	.-8      	; 0x3d4 <GPIO_writePin+0x32>
     3dc:	80 95       	com	r24
     3de:	82 23       	and	r24, r18
     3e0:	82 b9       	out	0x02, r24	; 2
     3e2:	08 95       	ret
     3e4:	81 30       	cpi	r24, 0x01	; 1
     3e6:	c9 f4       	brne	.+50     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     3e8:	41 30       	cpi	r20, 0x01	; 1
     3ea:	59 f4       	brne	.+22     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     3ec:	25 b1       	in	r18, 0x05	; 5
     3ee:	81 e0       	ldi	r24, 0x01	; 1
     3f0:	90 e0       	ldi	r25, 0x00	; 0
     3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <GPIO_writePin+0x56>
     3f4:	88 0f       	add	r24, r24
     3f6:	99 1f       	adc	r25, r25
     3f8:	6a 95       	dec	r22
     3fa:	e2 f7       	brpl	.-8      	; 0x3f4 <GPIO_writePin+0x52>
     3fc:	82 2b       	or	r24, r18
     3fe:	85 b9       	out	0x05, r24	; 5
     400:	08 95       	ret
     402:	25 b1       	in	r18, 0x05	; 5
     404:	81 e0       	ldi	r24, 0x01	; 1
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	02 c0       	rjmp	.+4      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     40a:	88 0f       	add	r24, r24
     40c:	99 1f       	adc	r25, r25
     40e:	6a 95       	dec	r22
     410:	e2 f7       	brpl	.-8      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     412:	80 95       	com	r24
     414:	82 23       	and	r24, r18
     416:	85 b9       	out	0x05, r24	; 5
     418:	08 95       	ret
     41a:	82 30       	cpi	r24, 0x02	; 2
     41c:	c9 f4       	brne	.+50     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     41e:	41 30       	cpi	r20, 0x01	; 1
     420:	59 f4       	brne	.+22     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
     422:	28 b1       	in	r18, 0x08	; 8
     424:	81 e0       	ldi	r24, 0x01	; 1
     426:	90 e0       	ldi	r25, 0x00	; 0
     428:	02 c0       	rjmp	.+4      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     42a:	88 0f       	add	r24, r24
     42c:	99 1f       	adc	r25, r25
     42e:	6a 95       	dec	r22
     430:	e2 f7       	brpl	.-8      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
     432:	82 2b       	or	r24, r18
     434:	88 b9       	out	0x08, r24	; 8
     436:	08 95       	ret
     438:	28 b1       	in	r18, 0x08	; 8
     43a:	81 e0       	ldi	r24, 0x01	; 1
     43c:	90 e0       	ldi	r25, 0x00	; 0
     43e:	02 c0       	rjmp	.+4      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     440:	88 0f       	add	r24, r24
     442:	99 1f       	adc	r25, r25
     444:	6a 95       	dec	r22
     446:	e2 f7       	brpl	.-8      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     448:	80 95       	com	r24
     44a:	82 23       	and	r24, r18
     44c:	88 b9       	out	0x08, r24	; 8
     44e:	08 95       	ret
     450:	83 30       	cpi	r24, 0x03	; 3
     452:	c9 f4       	brne	.+50     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
     454:	41 30       	cpi	r20, 0x01	; 1
     456:	59 f4       	brne	.+22     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
     458:	2b b1       	in	r18, 0x0b	; 11
     45a:	81 e0       	ldi	r24, 0x01	; 1
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	02 c0       	rjmp	.+4      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     460:	88 0f       	add	r24, r24
     462:	99 1f       	adc	r25, r25
     464:	6a 95       	dec	r22
     466:	e2 f7       	brpl	.-8      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
     468:	82 2b       	or	r24, r18
     46a:	8b b9       	out	0x0b, r24	; 11
     46c:	08 95       	ret
     46e:	2b b1       	in	r18, 0x0b	; 11
     470:	81 e0       	ldi	r24, 0x01	; 1
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	02 c0       	rjmp	.+4      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
     476:	88 0f       	add	r24, r24
     478:	99 1f       	adc	r25, r25
     47a:	6a 95       	dec	r22
     47c:	e2 f7       	brpl	.-8      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     47e:	80 95       	com	r24
     480:	82 23       	and	r24, r18
     482:	8b b9       	out	0x0b, r24	; 11
     484:	08 95       	ret
     486:	84 30       	cpi	r24, 0x04	; 4
     488:	c9 f4       	brne	.+50     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
     48a:	41 30       	cpi	r20, 0x01	; 1
     48c:	59 f4       	brne	.+22     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     48e:	2e b1       	in	r18, 0x0e	; 14
     490:	81 e0       	ldi	r24, 0x01	; 1
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	02 c0       	rjmp	.+4      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
     496:	88 0f       	add	r24, r24
     498:	99 1f       	adc	r25, r25
     49a:	6a 95       	dec	r22
     49c:	e2 f7       	brpl	.-8      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
     49e:	82 2b       	or	r24, r18
     4a0:	8e b9       	out	0x0e, r24	; 14
     4a2:	08 95       	ret
     4a4:	2e b1       	in	r18, 0x0e	; 14
     4a6:	81 e0       	ldi	r24, 0x01	; 1
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	02 c0       	rjmp	.+4      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
     4ac:	88 0f       	add	r24, r24
     4ae:	99 1f       	adc	r25, r25
     4b0:	6a 95       	dec	r22
     4b2:	e2 f7       	brpl	.-8      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
     4b4:	80 95       	com	r24
     4b6:	82 23       	and	r24, r18
     4b8:	8e b9       	out	0x0e, r24	; 14
     4ba:	08 95       	ret
     4bc:	85 30       	cpi	r24, 0x05	; 5
     4be:	c9 f4       	brne	.+50     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
     4c0:	41 30       	cpi	r20, 0x01	; 1
     4c2:	59 f4       	brne	.+22     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
     4c4:	21 b3       	in	r18, 0x11	; 17
     4c6:	81 e0       	ldi	r24, 0x01	; 1
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	02 c0       	rjmp	.+4      	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
     4cc:	88 0f       	add	r24, r24
     4ce:	99 1f       	adc	r25, r25
     4d0:	6a 95       	dec	r22
     4d2:	e2 f7       	brpl	.-8      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
     4d4:	82 2b       	or	r24, r18
     4d6:	81 bb       	out	0x11, r24	; 17
     4d8:	08 95       	ret
     4da:	21 b3       	in	r18, 0x11	; 17
     4dc:	81 e0       	ldi	r24, 0x01	; 1
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	02 c0       	rjmp	.+4      	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
     4e2:	88 0f       	add	r24, r24
     4e4:	99 1f       	adc	r25, r25
     4e6:	6a 95       	dec	r22
     4e8:	e2 f7       	brpl	.-8      	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     4ea:	80 95       	com	r24
     4ec:	82 23       	and	r24, r18
     4ee:	81 bb       	out	0x11, r24	; 17
     4f0:	08 95       	ret
     4f2:	86 30       	cpi	r24, 0x06	; 6
     4f4:	c9 f4       	brne	.+50     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
     4f6:	41 30       	cpi	r20, 0x01	; 1
     4f8:	59 f4       	brne	.+22     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
     4fa:	24 b3       	in	r18, 0x14	; 20
     4fc:	81 e0       	ldi	r24, 0x01	; 1
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	02 c0       	rjmp	.+4      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
     502:	88 0f       	add	r24, r24
     504:	99 1f       	adc	r25, r25
     506:	6a 95       	dec	r22
     508:	e2 f7       	brpl	.-8      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
     50a:	82 2b       	or	r24, r18
     50c:	84 bb       	out	0x14, r24	; 20
     50e:	08 95       	ret
     510:	24 b3       	in	r18, 0x14	; 20
     512:	81 e0       	ldi	r24, 0x01	; 1
     514:	90 e0       	ldi	r25, 0x00	; 0
     516:	02 c0       	rjmp	.+4      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
     518:	88 0f       	add	r24, r24
     51a:	99 1f       	adc	r25, r25
     51c:	6a 95       	dec	r22
     51e:	e2 f7       	brpl	.-8      	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
     520:	80 95       	com	r24
     522:	82 23       	and	r24, r18
     524:	84 bb       	out	0x14, r24	; 20
     526:	08 95       	ret
     528:	87 30       	cpi	r24, 0x07	; 7
     52a:	e9 f4       	brne	.+58     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
     52c:	41 30       	cpi	r20, 0x01	; 1
     52e:	69 f4       	brne	.+26     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
     530:	e2 e0       	ldi	r30, 0x02	; 2
     532:	f1 e0       	ldi	r31, 0x01	; 1
     534:	20 81       	ld	r18, Z
     536:	81 e0       	ldi	r24, 0x01	; 1
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	02 c0       	rjmp	.+4      	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
     53c:	88 0f       	add	r24, r24
     53e:	99 1f       	adc	r25, r25
     540:	6a 95       	dec	r22
     542:	e2 f7       	brpl	.-8      	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
     544:	82 2b       	or	r24, r18
     546:	80 83       	st	Z, r24
     548:	08 95       	ret
     54a:	e2 e0       	ldi	r30, 0x02	; 2
     54c:	f1 e0       	ldi	r31, 0x01	; 1
     54e:	20 81       	ld	r18, Z
     550:	81 e0       	ldi	r24, 0x01	; 1
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	02 c0       	rjmp	.+4      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
     556:	88 0f       	add	r24, r24
     558:	99 1f       	adc	r25, r25
     55a:	6a 95       	dec	r22
     55c:	e2 f7       	brpl	.-8      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
     55e:	80 95       	com	r24
     560:	82 23       	and	r24, r18
     562:	80 83       	st	Z, r24
     564:	08 95       	ret
     566:	88 30       	cpi	r24, 0x08	; 8
     568:	e9 f4       	brne	.+58     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
     56a:	41 30       	cpi	r20, 0x01	; 1
     56c:	69 f4       	brne	.+26     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
     56e:	e5 e0       	ldi	r30, 0x05	; 5
     570:	f1 e0       	ldi	r31, 0x01	; 1
     572:	20 81       	ld	r18, Z
     574:	81 e0       	ldi	r24, 0x01	; 1
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	02 c0       	rjmp	.+4      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
     57a:	88 0f       	add	r24, r24
     57c:	99 1f       	adc	r25, r25
     57e:	6a 95       	dec	r22
     580:	e2 f7       	brpl	.-8      	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
     582:	82 2b       	or	r24, r18
     584:	80 83       	st	Z, r24
     586:	08 95       	ret
     588:	eb e0       	ldi	r30, 0x0B	; 11
     58a:	f1 e0       	ldi	r31, 0x01	; 1
     58c:	20 81       	ld	r18, Z
     58e:	81 e0       	ldi	r24, 0x01	; 1
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	02 c0       	rjmp	.+4      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
     594:	88 0f       	add	r24, r24
     596:	99 1f       	adc	r25, r25
     598:	6a 95       	dec	r22
     59a:	e2 f7       	brpl	.-8      	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
     59c:	80 95       	com	r24
     59e:	82 23       	and	r24, r18
     5a0:	80 83       	st	Z, r24
     5a2:	08 95       	ret
     5a4:	89 30       	cpi	r24, 0x09	; 9
     5a6:	e9 f4       	brne	.+58     	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
     5a8:	41 30       	cpi	r20, 0x01	; 1
     5aa:	69 f4       	brne	.+26     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
     5ac:	e8 e0       	ldi	r30, 0x08	; 8
     5ae:	f1 e0       	ldi	r31, 0x01	; 1
     5b0:	20 81       	ld	r18, Z
     5b2:	81 e0       	ldi	r24, 0x01	; 1
     5b4:	90 e0       	ldi	r25, 0x00	; 0
     5b6:	02 c0       	rjmp	.+4      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
     5b8:	88 0f       	add	r24, r24
     5ba:	99 1f       	adc	r25, r25
     5bc:	6a 95       	dec	r22
     5be:	e2 f7       	brpl	.-8      	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
     5c0:	82 2b       	or	r24, r18
     5c2:	80 83       	st	Z, r24
     5c4:	08 95       	ret
     5c6:	e8 e0       	ldi	r30, 0x08	; 8
     5c8:	f1 e0       	ldi	r31, 0x01	; 1
     5ca:	20 81       	ld	r18, Z
     5cc:	81 e0       	ldi	r24, 0x01	; 1
     5ce:	90 e0       	ldi	r25, 0x00	; 0
     5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
     5d2:	88 0f       	add	r24, r24
     5d4:	99 1f       	adc	r25, r25
     5d6:	6a 95       	dec	r22
     5d8:	e2 f7       	brpl	.-8      	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
     5da:	80 95       	com	r24
     5dc:	82 23       	and	r24, r18
     5de:	80 83       	st	Z, r24
     5e0:	08 95       	ret
     5e2:	8a 30       	cpi	r24, 0x0A	; 10
     5e4:	e1 f4       	brne	.+56     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
     5e6:	41 30       	cpi	r20, 0x01	; 1
     5e8:	69 f4       	brne	.+26     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
     5ea:	eb e0       	ldi	r30, 0x0B	; 11
     5ec:	f1 e0       	ldi	r31, 0x01	; 1
     5ee:	20 81       	ld	r18, Z
     5f0:	81 e0       	ldi	r24, 0x01	; 1
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	02 c0       	rjmp	.+4      	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
     5f6:	88 0f       	add	r24, r24
     5f8:	99 1f       	adc	r25, r25
     5fa:	6a 95       	dec	r22
     5fc:	e2 f7       	brpl	.-8      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
     5fe:	82 2b       	or	r24, r18
     600:	80 83       	st	Z, r24
     602:	08 95       	ret
     604:	eb e0       	ldi	r30, 0x0B	; 11
     606:	f1 e0       	ldi	r31, 0x01	; 1
     608:	20 81       	ld	r18, Z
     60a:	81 e0       	ldi	r24, 0x01	; 1
     60c:	90 e0       	ldi	r25, 0x00	; 0
     60e:	02 c0       	rjmp	.+4      	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
     610:	88 0f       	add	r24, r24
     612:	99 1f       	adc	r25, r25
     614:	6a 95       	dec	r22
     616:	e2 f7       	brpl	.-8      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
     618:	80 95       	com	r24
     61a:	82 23       	and	r24, r18
     61c:	80 83       	st	Z, r24
     61e:	08 95       	ret

00000620 <GPIO_setupPortDirection>:
     620:	8b 30       	cpi	r24, 0x0B	; 11
     622:	78 f5       	brcc	.+94     	; 0x682 <GPIO_setupPortDirection+0x62>
     624:	81 11       	cpse	r24, r1
     626:	02 c0       	rjmp	.+4      	; 0x62c <GPIO_setupPortDirection+0xc>
     628:	61 b9       	out	0x01, r22	; 1
     62a:	08 95       	ret
     62c:	81 30       	cpi	r24, 0x01	; 1
     62e:	11 f4       	brne	.+4      	; 0x634 <GPIO_setupPortDirection+0x14>
     630:	64 b9       	out	0x04, r22	; 4
     632:	08 95       	ret
     634:	82 30       	cpi	r24, 0x02	; 2
     636:	11 f4       	brne	.+4      	; 0x63c <GPIO_setupPortDirection+0x1c>
     638:	67 b9       	out	0x07, r22	; 7
     63a:	08 95       	ret
     63c:	83 30       	cpi	r24, 0x03	; 3
     63e:	11 f4       	brne	.+4      	; 0x644 <GPIO_setupPortDirection+0x24>
     640:	6a b9       	out	0x0a, r22	; 10
     642:	08 95       	ret
     644:	84 30       	cpi	r24, 0x04	; 4
     646:	11 f4       	brne	.+4      	; 0x64c <GPIO_setupPortDirection+0x2c>
     648:	6d b9       	out	0x0d, r22	; 13
     64a:	08 95       	ret
     64c:	85 30       	cpi	r24, 0x05	; 5
     64e:	11 f4       	brne	.+4      	; 0x654 <GPIO_setupPortDirection+0x34>
     650:	60 bb       	out	0x10, r22	; 16
     652:	08 95       	ret
     654:	86 30       	cpi	r24, 0x06	; 6
     656:	11 f4       	brne	.+4      	; 0x65c <GPIO_setupPortDirection+0x3c>
     658:	63 bb       	out	0x13, r22	; 19
     65a:	08 95       	ret
     65c:	87 30       	cpi	r24, 0x07	; 7
     65e:	19 f4       	brne	.+6      	; 0x666 <GPIO_setupPortDirection+0x46>
     660:	60 93 01 01 	sts	0x0101, r22	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
     664:	08 95       	ret
     666:	88 30       	cpi	r24, 0x08	; 8
     668:	19 f4       	brne	.+6      	; 0x670 <GPIO_setupPortDirection+0x50>
     66a:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
     66e:	08 95       	ret
     670:	89 30       	cpi	r24, 0x09	; 9
     672:	19 f4       	brne	.+6      	; 0x67a <GPIO_setupPortDirection+0x5a>
     674:	60 93 07 01 	sts	0x0107, r22	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
     678:	08 95       	ret
     67a:	8a 30       	cpi	r24, 0x0A	; 10
     67c:	11 f4       	brne	.+4      	; 0x682 <GPIO_setupPortDirection+0x62>
     67e:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
     682:	08 95       	ret

00000684 <GPIO_writePort>:
     684:	8b 30       	cpi	r24, 0x0B	; 11
     686:	78 f5       	brcc	.+94     	; 0x6e6 <GPIO_writePort+0x62>
     688:	81 11       	cpse	r24, r1
     68a:	02 c0       	rjmp	.+4      	; 0x690 <GPIO_writePort+0xc>
     68c:	62 b9       	out	0x02, r22	; 2
     68e:	08 95       	ret
     690:	81 30       	cpi	r24, 0x01	; 1
     692:	11 f4       	brne	.+4      	; 0x698 <GPIO_writePort+0x14>
     694:	65 b9       	out	0x05, r22	; 5
     696:	08 95       	ret
     698:	82 30       	cpi	r24, 0x02	; 2
     69a:	11 f4       	brne	.+4      	; 0x6a0 <GPIO_writePort+0x1c>
     69c:	68 b9       	out	0x08, r22	; 8
     69e:	08 95       	ret
     6a0:	83 30       	cpi	r24, 0x03	; 3
     6a2:	11 f4       	brne	.+4      	; 0x6a8 <GPIO_writePort+0x24>
     6a4:	6b b9       	out	0x0b, r22	; 11
     6a6:	08 95       	ret
     6a8:	84 30       	cpi	r24, 0x04	; 4
     6aa:	11 f4       	brne	.+4      	; 0x6b0 <GPIO_writePort+0x2c>
     6ac:	6e b9       	out	0x0e, r22	; 14
     6ae:	08 95       	ret
     6b0:	85 30       	cpi	r24, 0x05	; 5
     6b2:	11 f4       	brne	.+4      	; 0x6b8 <GPIO_writePort+0x34>
     6b4:	61 bb       	out	0x11, r22	; 17
     6b6:	08 95       	ret
     6b8:	86 30       	cpi	r24, 0x06	; 6
     6ba:	11 f4       	brne	.+4      	; 0x6c0 <GPIO_writePort+0x3c>
     6bc:	64 bb       	out	0x14, r22	; 20
     6be:	08 95       	ret
     6c0:	87 30       	cpi	r24, 0x07	; 7
     6c2:	19 f4       	brne	.+6      	; 0x6ca <GPIO_writePort+0x46>
     6c4:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
     6c8:	08 95       	ret
     6ca:	88 30       	cpi	r24, 0x08	; 8
     6cc:	19 f4       	brne	.+6      	; 0x6d4 <GPIO_writePort+0x50>
     6ce:	60 93 05 01 	sts	0x0105, r22	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
     6d2:	08 95       	ret
     6d4:	89 30       	cpi	r24, 0x09	; 9
     6d6:	19 f4       	brne	.+6      	; 0x6de <GPIO_writePort+0x5a>
     6d8:	60 93 08 01 	sts	0x0108, r22	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
     6dc:	08 95       	ret
     6de:	8a 30       	cpi	r24, 0x0A	; 10
     6e0:	11 f4       	brne	.+4      	; 0x6e6 <GPIO_writePort+0x62>
     6e2:	60 93 0b 01 	sts	0x010B, r22	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
     6e6:	08 95       	ret

000006e8 <LCD_sendCommand>:
     6e8:	cf 93       	push	r28
     6ea:	c8 2f       	mov	r28, r24
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	64 e0       	ldi	r22, 0x04	; 4
     6f0:	81 e0       	ldi	r24, 0x01	; 1
     6f2:	57 de       	rcall	.-850    	; 0x3a2 <GPIO_writePin>
     6f4:	40 e0       	ldi	r20, 0x00	; 0
     6f6:	65 e0       	ldi	r22, 0x05	; 5
     6f8:	81 e0       	ldi	r24, 0x01	; 1
     6fa:	53 de       	rcall	.-858    	; 0x3a2 <GPIO_writePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6fc:	89 ef       	ldi	r24, 0xF9	; 249
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	01 97       	sbiw	r24, 0x01	; 1
     702:	f1 f7       	brne	.-4      	; 0x700 <LCD_sendCommand+0x18>
     704:	00 c0       	rjmp	.+0      	; 0x706 <LCD_sendCommand+0x1e>
     706:	00 00       	nop
     708:	41 e0       	ldi	r20, 0x01	; 1
     70a:	66 e0       	ldi	r22, 0x06	; 6
     70c:	81 e0       	ldi	r24, 0x01	; 1
     70e:	49 de       	rcall	.-878    	; 0x3a2 <GPIO_writePin>
     710:	89 ef       	ldi	r24, 0xF9	; 249
     712:	90 e0       	ldi	r25, 0x00	; 0
     714:	01 97       	sbiw	r24, 0x01	; 1
     716:	f1 f7       	brne	.-4      	; 0x714 <LCD_sendCommand+0x2c>
     718:	00 c0       	rjmp	.+0      	; 0x71a <LCD_sendCommand+0x32>
     71a:	00 00       	nop
     71c:	6c 2f       	mov	r22, r28
     71e:	82 e0       	ldi	r24, 0x02	; 2
     720:	b1 df       	rcall	.-158    	; 0x684 <GPIO_writePort>
     722:	89 ef       	ldi	r24, 0xF9	; 249
     724:	90 e0       	ldi	r25, 0x00	; 0
     726:	01 97       	sbiw	r24, 0x01	; 1
     728:	f1 f7       	brne	.-4      	; 0x726 <LCD_sendCommand+0x3e>
     72a:	00 c0       	rjmp	.+0      	; 0x72c <LCD_sendCommand+0x44>
     72c:	00 00       	nop
     72e:	40 e0       	ldi	r20, 0x00	; 0
     730:	66 e0       	ldi	r22, 0x06	; 6
     732:	81 e0       	ldi	r24, 0x01	; 1
     734:	36 de       	rcall	.-916    	; 0x3a2 <GPIO_writePin>
     736:	89 ef       	ldi	r24, 0xF9	; 249
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	01 97       	sbiw	r24, 0x01	; 1
     73c:	f1 f7       	brne	.-4      	; 0x73a <LCD_sendCommand+0x52>
     73e:	00 c0       	rjmp	.+0      	; 0x740 <LCD_sendCommand+0x58>
     740:	00 00       	nop
     742:	cf 91       	pop	r28
     744:	08 95       	ret

00000746 <LCD_init>:
     746:	41 e0       	ldi	r20, 0x01	; 1
     748:	64 e0       	ldi	r22, 0x04	; 4
     74a:	81 e0       	ldi	r24, 0x01	; 1
     74c:	eb dc       	rcall	.-1578   	; 0x124 <GPIO_setupPinDirection>
     74e:	41 e0       	ldi	r20, 0x01	; 1
     750:	65 e0       	ldi	r22, 0x05	; 5
     752:	81 e0       	ldi	r24, 0x01	; 1
     754:	e7 dc       	rcall	.-1586   	; 0x124 <GPIO_setupPinDirection>
     756:	41 e0       	ldi	r20, 0x01	; 1
     758:	66 e0       	ldi	r22, 0x06	; 6
     75a:	81 e0       	ldi	r24, 0x01	; 1
     75c:	e3 dc       	rcall	.-1594   	; 0x124 <GPIO_setupPinDirection>
     75e:	6f ef       	ldi	r22, 0xFF	; 255
     760:	82 e0       	ldi	r24, 0x02	; 2
     762:	5e df       	rcall	.-324    	; 0x620 <GPIO_setupPortDirection>
     764:	88 e3       	ldi	r24, 0x38	; 56
     766:	c0 df       	rcall	.-128    	; 0x6e8 <LCD_sendCommand>
     768:	8c e0       	ldi	r24, 0x0C	; 12
     76a:	be df       	rcall	.-132    	; 0x6e8 <LCD_sendCommand>
     76c:	81 e0       	ldi	r24, 0x01	; 1
     76e:	bc cf       	rjmp	.-136    	; 0x6e8 <LCD_sendCommand>
     770:	08 95       	ret

00000772 <LCD_displayCharacter>:
     772:	cf 93       	push	r28
     774:	c8 2f       	mov	r28, r24
     776:	41 e0       	ldi	r20, 0x01	; 1
     778:	64 e0       	ldi	r22, 0x04	; 4
     77a:	81 e0       	ldi	r24, 0x01	; 1
     77c:	12 de       	rcall	.-988    	; 0x3a2 <GPIO_writePin>
     77e:	40 e0       	ldi	r20, 0x00	; 0
     780:	65 e0       	ldi	r22, 0x05	; 5
     782:	81 e0       	ldi	r24, 0x01	; 1
     784:	0e de       	rcall	.-996    	; 0x3a2 <GPIO_writePin>
     786:	89 ef       	ldi	r24, 0xF9	; 249
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	01 97       	sbiw	r24, 0x01	; 1
     78c:	f1 f7       	brne	.-4      	; 0x78a <LCD_displayCharacter+0x18>
     78e:	00 c0       	rjmp	.+0      	; 0x790 <LCD_displayCharacter+0x1e>
     790:	00 00       	nop
     792:	41 e0       	ldi	r20, 0x01	; 1
     794:	66 e0       	ldi	r22, 0x06	; 6
     796:	81 e0       	ldi	r24, 0x01	; 1
     798:	04 de       	rcall	.-1016   	; 0x3a2 <GPIO_writePin>
     79a:	89 ef       	ldi	r24, 0xF9	; 249
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	01 97       	sbiw	r24, 0x01	; 1
     7a0:	f1 f7       	brne	.-4      	; 0x79e <LCD_displayCharacter+0x2c>
     7a2:	00 c0       	rjmp	.+0      	; 0x7a4 <LCD_displayCharacter+0x32>
     7a4:	00 00       	nop
     7a6:	6c 2f       	mov	r22, r28
     7a8:	82 e0       	ldi	r24, 0x02	; 2
     7aa:	6c df       	rcall	.-296    	; 0x684 <GPIO_writePort>
     7ac:	89 ef       	ldi	r24, 0xF9	; 249
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	01 97       	sbiw	r24, 0x01	; 1
     7b2:	f1 f7       	brne	.-4      	; 0x7b0 <LCD_displayCharacter+0x3e>
     7b4:	00 c0       	rjmp	.+0      	; 0x7b6 <LCD_displayCharacter+0x44>
     7b6:	00 00       	nop
     7b8:	40 e0       	ldi	r20, 0x00	; 0
     7ba:	66 e0       	ldi	r22, 0x06	; 6
     7bc:	81 e0       	ldi	r24, 0x01	; 1
     7be:	f1 dd       	rcall	.-1054   	; 0x3a2 <GPIO_writePin>
     7c0:	89 ef       	ldi	r24, 0xF9	; 249
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	01 97       	sbiw	r24, 0x01	; 1
     7c6:	f1 f7       	brne	.-4      	; 0x7c4 <LCD_displayCharacter+0x52>
     7c8:	00 c0       	rjmp	.+0      	; 0x7ca <LCD_displayCharacter+0x58>
     7ca:	00 00       	nop
     7cc:	cf 91       	pop	r28
     7ce:	08 95       	ret

000007d0 <LCD_displayString>:
     7d0:	0f 93       	push	r16
     7d2:	1f 93       	push	r17
     7d4:	cf 93       	push	r28
     7d6:	8c 01       	movw	r16, r24
     7d8:	c0 e0       	ldi	r28, 0x00	; 0
     7da:	02 c0       	rjmp	.+4      	; 0x7e0 <LCD_displayString+0x10>
     7dc:	ca df       	rcall	.-108    	; 0x772 <LCD_displayCharacter>
     7de:	cf 5f       	subi	r28, 0xFF	; 255
     7e0:	f8 01       	movw	r30, r16
     7e2:	ec 0f       	add	r30, r28
     7e4:	f1 1d       	adc	r31, r1
     7e6:	80 81       	ld	r24, Z
     7e8:	81 11       	cpse	r24, r1
     7ea:	f8 cf       	rjmp	.-16     	; 0x7dc <LCD_displayString+0xc>
     7ec:	cf 91       	pop	r28
     7ee:	1f 91       	pop	r17
     7f0:	0f 91       	pop	r16
     7f2:	08 95       	ret

000007f4 <LCD_moveCursor>:
     7f4:	81 30       	cpi	r24, 0x01	; 1
     7f6:	31 f0       	breq	.+12     	; 0x804 <LCD_moveCursor+0x10>
     7f8:	70 f0       	brcs	.+28     	; 0x816 <LCD_moveCursor+0x22>
     7fa:	82 30       	cpi	r24, 0x02	; 2
     7fc:	31 f0       	breq	.+12     	; 0x80a <LCD_moveCursor+0x16>
     7fe:	83 30       	cpi	r24, 0x03	; 3
     800:	39 f0       	breq	.+14     	; 0x810 <LCD_moveCursor+0x1c>
     802:	0a c0       	rjmp	.+20     	; 0x818 <LCD_moveCursor+0x24>
     804:	90 e4       	ldi	r25, 0x40	; 64
     806:	96 0f       	add	r25, r22
     808:	07 c0       	rjmp	.+14     	; 0x818 <LCD_moveCursor+0x24>
     80a:	90 e1       	ldi	r25, 0x10	; 16
     80c:	96 0f       	add	r25, r22
     80e:	04 c0       	rjmp	.+8      	; 0x818 <LCD_moveCursor+0x24>
     810:	90 e5       	ldi	r25, 0x50	; 80
     812:	96 0f       	add	r25, r22
     814:	01 c0       	rjmp	.+2      	; 0x818 <LCD_moveCursor+0x24>
     816:	96 2f       	mov	r25, r22
     818:	89 2f       	mov	r24, r25
     81a:	80 68       	ori	r24, 0x80	; 128
     81c:	65 cf       	rjmp	.-310    	; 0x6e8 <LCD_sendCommand>
     81e:	08 95       	ret

00000820 <main>:
#include "std_types.h"
#include "lcd.h"
#include "RTC1307.h"

int main(void)
{
     820:	cf 93       	push	r28
     822:	df 93       	push	r29
     824:	cd b7       	in	r28, 0x3d	; 61
     826:	de b7       	in	r29, 0x3e	; 62
     828:	64 97       	sbiw	r28, 0x14	; 20
     82a:	0f b6       	in	r0, 0x3f	; 63
     82c:	f8 94       	cli
     82e:	de bf       	out	0x3e, r29	; 62
     830:	0f be       	out	0x3f, r0	; 63
     832:	cd bf       	out	0x3d, r28	; 61
	char buffer[20];
	LCD_init();
     834:	88 df       	rcall	.-240    	; 0x746 <LCD_init>
	TWI_init();
     836:	dd d0       	rcall	.+442    	; 0x9f2 <TWI_init>
	TWI_start();
     838:	e7 d0       	rcall	.+462    	; 0xa08 <TWI_start>
	
		
    /* Replace with your application code */
    while (1) 
    {
		RTC_Read_Clock(0);							/* Read the clock with second address i.e location is 0 */
     83a:	80 e0       	ldi	r24, 0x00	; 0
     83c:	9a d0       	rcall	.+308    	; 0x972 <RTC_Read_Clock>
     83e:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <hour>
		if (hour & TimeFormat12)
     842:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <hour+0x1>
     846:	86 ff       	sbrs	r24, 6
     848:	41 c0       	rjmp	.+130    	; 0x8cc <main+0xac>
     84a:	20 91 25 02 	lds	r18, 0x0225	; 0x800225 <second+0x1>
		{
			sprintf(buffer, "%02x:%02x:%02x  ", (hour & 0b00011111), minute, second);
     84e:	2f 93       	push	r18
     850:	20 91 24 02 	lds	r18, 0x0224	; 0x800224 <second>
     854:	2f 93       	push	r18
     856:	20 91 27 02 	lds	r18, 0x0227	; 0x800227 <minute+0x1>
     85a:	2f 93       	push	r18
     85c:	20 91 26 02 	lds	r18, 0x0226	; 0x800226 <minute>
     860:	2f 93       	push	r18
     862:	8f 71       	andi	r24, 0x1F	; 31
     864:	99 27       	eor	r25, r25
     866:	9f 93       	push	r25
     868:	8f 93       	push	r24
     86a:	80 e0       	ldi	r24, 0x00	; 0
     86c:	92 e0       	ldi	r25, 0x02	; 2
     86e:	9f 93       	push	r25
     870:	8f 93       	push	r24
     872:	ce 01       	movw	r24, r28
     874:	01 96       	adiw	r24, 0x01	; 1
     876:	9f 93       	push	r25
     878:	8f 93       	push	r24
     87a:	38 d1       	rcall	.+624    	; 0xaec <sprintf>
			if(IsItPM(hour))
     87c:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <hour>
     880:	72 d0       	rcall	.+228    	; 0x966 <IsItPM>
     882:	0f b6       	in	r0, 0x3f	; 63
     884:	f8 94       	cli
     886:	de bf       	out	0x3e, r29	; 62
     888:	0f be       	out	0x3f, r0	; 63
     88a:	cd bf       	out	0x3d, r28	; 61
     88c:	88 23       	and	r24, r24
     88e:	61 f0       	breq	.+24     	; 0x8a8 <main+0x88>
     890:	fe 01       	movw	r30, r28
			strcat(buffer, "PM");
     892:	31 96       	adiw	r30, 0x01	; 1
     894:	01 90       	ld	r0, Z+
     896:	00 20       	and	r0, r0
     898:	e9 f7       	brne	.-6      	; 0x894 <main+0x74>
     89a:	31 97       	sbiw	r30, 0x01	; 1
     89c:	80 e5       	ldi	r24, 0x50	; 80
     89e:	9d e4       	ldi	r25, 0x4D	; 77
     8a0:	91 83       	std	Z+1, r25	; 0x01
     8a2:	80 83       	st	Z, r24
     8a4:	12 82       	std	Z+2, r1	; 0x02
     8a6:	0b c0       	rjmp	.+22     	; 0x8be <main+0x9e>
     8a8:	fe 01       	movw	r30, r28
			else
			strcat(buffer, "AM");
     8aa:	31 96       	adiw	r30, 0x01	; 1
     8ac:	01 90       	ld	r0, Z+
     8ae:	00 20       	and	r0, r0
     8b0:	e9 f7       	brne	.-6      	; 0x8ac <main+0x8c>
     8b2:	31 97       	sbiw	r30, 0x01	; 1
     8b4:	81 e4       	ldi	r24, 0x41	; 65
     8b6:	9d e4       	ldi	r25, 0x4D	; 77
     8b8:	91 83       	std	Z+1, r25	; 0x01
     8ba:	80 83       	st	Z, r24
     8bc:	12 82       	std	Z+2, r1	; 0x02
			LCD_moveCursor(0,0);
     8be:	60 e0       	ldi	r22, 0x00	; 0
     8c0:	80 e0       	ldi	r24, 0x00	; 0
     8c2:	98 df       	rcall	.-208    	; 0x7f4 <LCD_moveCursor>
     8c4:	ce 01       	movw	r24, r28
			LCD_displayString(buffer);
     8c6:	01 96       	adiw	r24, 0x01	; 1
     8c8:	83 df       	rcall	.-250    	; 0x7d0 <LCD_displayString>
     8ca:	24 c0       	rjmp	.+72     	; 0x914 <main+0xf4>
     8cc:	20 91 25 02 	lds	r18, 0x0225	; 0x800225 <second+0x1>
		}
		
		else
		{
			sprintf(buffer, "%02x:%02x:%02x  ", (hour & 0b00011111), minute, second);
     8d0:	2f 93       	push	r18
     8d2:	20 91 24 02 	lds	r18, 0x0224	; 0x800224 <second>
     8d6:	2f 93       	push	r18
     8d8:	20 91 27 02 	lds	r18, 0x0227	; 0x800227 <minute+0x1>
     8dc:	2f 93       	push	r18
     8de:	20 91 26 02 	lds	r18, 0x0226	; 0x800226 <minute>
     8e2:	2f 93       	push	r18
     8e4:	8f 71       	andi	r24, 0x1F	; 31
     8e6:	99 27       	eor	r25, r25
     8e8:	9f 93       	push	r25
     8ea:	8f 93       	push	r24
     8ec:	80 e0       	ldi	r24, 0x00	; 0
     8ee:	92 e0       	ldi	r25, 0x02	; 2
     8f0:	9f 93       	push	r25
     8f2:	8f 93       	push	r24
     8f4:	8e 01       	movw	r16, r28
     8f6:	0f 5f       	subi	r16, 0xFF	; 255
     8f8:	1f 4f       	sbci	r17, 0xFF	; 255
     8fa:	1f 93       	push	r17
     8fc:	0f 93       	push	r16
     8fe:	f6 d0       	rcall	.+492    	; 0xaec <sprintf>
			LCD_moveCursor(0,0);
     900:	60 e0       	ldi	r22, 0x00	; 0
     902:	80 e0       	ldi	r24, 0x00	; 0
     904:	77 df       	rcall	.-274    	; 0x7f4 <LCD_moveCursor>
			LCD_displayString(buffer);
     906:	c8 01       	movw	r24, r16
     908:	63 df       	rcall	.-314    	; 0x7d0 <LCD_displayString>
     90a:	0f b6       	in	r0, 0x3f	; 63
     90c:	f8 94       	cli
     90e:	de bf       	out	0x3e, r29	; 62
     910:	0f be       	out	0x3f, r0	; 63
     912:	cd bf       	out	0x3d, r28	; 61
     914:	83 e0       	ldi	r24, 0x03	; 3
		}
		RTC_Read_Calendar(3);						/* Read the calender with day address i.e location is 3 */
     916:	4a d0       	rcall	.+148    	; 0x9ac <RTC_Read_Calendar>
     918:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <year+0x1>
		sprintf(buffer, "%02x/%02x/%02x ", date, month, year);
     91c:	8f 93       	push	r24
     91e:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <year>
     922:	8f 93       	push	r24
     924:	80 91 23 02 	lds	r24, 0x0223	; 0x800223 <__data_end+0x1>
     928:	8f 93       	push	r24
     92a:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <__data_end>
     92e:	8f 93       	push	r24
     930:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <date+0x1>
     934:	8f 93       	push	r24
     936:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <date>
     93a:	8f 93       	push	r24
     93c:	81 e1       	ldi	r24, 0x11	; 17
     93e:	92 e0       	ldi	r25, 0x02	; 2
     940:	9f 93       	push	r25
     942:	8f 93       	push	r24
     944:	8e 01       	movw	r16, r28
     946:	0f 5f       	subi	r16, 0xFF	; 255
     948:	1f 4f       	sbci	r17, 0xFF	; 255
     94a:	1f 93       	push	r17
     94c:	0f 93       	push	r16
     94e:	ce d0       	rcall	.+412    	; 0xaec <sprintf>
		LCD_moveCursor(1,0);
     950:	60 e0       	ldi	r22, 0x00	; 0
     952:	81 e0       	ldi	r24, 0x01	; 1
     954:	4f df       	rcall	.-354    	; 0x7f4 <LCD_moveCursor>
     956:	c8 01       	movw	r24, r16
		LCD_displayString(buffer);
     958:	3b df       	rcall	.-394    	; 0x7d0 <LCD_displayString>
     95a:	0f b6       	in	r0, 0x3f	; 63
     95c:	f8 94       	cli

    }
     95e:	de bf       	out	0x3e, r29	; 62
     960:	0f be       	out	0x3f, r0	; 63
     962:	cd bf       	out	0x3d, r28	; 61
     964:	6a cf       	rjmp	.-300    	; 0x83a <main+0x1a>

00000966 <IsItPM>:
 */ 
#include "RTC1307.h"

bool IsItPM(char hour_)
{
	if(hour_ & (AMPM))
     966:	85 ff       	sbrs	r24, 5
     968:	02 c0       	rjmp	.+4      	; 0x96e <IsItPM+0x8>
	return 1;
     96a:	81 e0       	ldi	r24, 0x01	; 1
     96c:	08 95       	ret
	else
	return 0;
     96e:	80 e0       	ldi	r24, 0x00	; 0
}
     970:	08 95       	ret

00000972 <RTC_Read_Clock>:

void RTC_Read_Clock(char read_clock_address)
{
     972:	cf 93       	push	r28
     974:	c8 2f       	mov	r28, r24
	I2C_Start(Device_Write_address);				/* Start I2C communication with RTC */
     976:	80 ed       	ldi	r24, 0xD0	; 208
     978:	95 d0       	rcall	.+298    	; 0xaa4 <I2C_Start>
	TWI_writeByte(read_clock_address);					/* Write address to read */
     97a:	8c 2f       	mov	r24, r28
     97c:	51 d0       	rcall	.+162    	; 0xa20 <TWI_writeByte>
	twi_Repeated_Start(Device_Read_address);		/* Repeated start with device read address */
     97e:	81 ed       	ldi	r24, 0xD1	; 209
     980:	6d d0       	rcall	.+218    	; 0xa5c <twi_Repeated_Start>

	second = TWI_readByteWithACK();						/* Read second */
     982:	58 d0       	rcall	.+176    	; 0xa34 <TWI_readByteWithACK>
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <second+0x1>
     98a:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <second>
	minute = TWI_readByteWithACK();						/* Read minute */
     98e:	52 d0       	rcall	.+164    	; 0xa34 <TWI_readByteWithACK>
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <minute+0x1>
     996:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <minute>
	hour = TWI_readByteWithNACK();							/* Read hour with Nack */
     99a:	56 d0       	rcall	.+172    	; 0xa48 <TWI_readByteWithNACK>
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <hour+0x1>
     9a2:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <hour>
	TWI_stop();										/* Stop i2C communication */
     9a6:	38 d0       	rcall	.+112    	; 0xa18 <TWI_stop>
     9a8:	cf 91       	pop	r28
}
     9aa:	08 95       	ret

000009ac <RTC_Read_Calendar>:
     9ac:	cf 93       	push	r28

void RTC_Read_Calendar(char read_calendar_address)
{
     9ae:	c8 2f       	mov	r28, r24
	I2C_Start(Device_Write_address);				/* Start I2C communication with RTC */
     9b0:	80 ed       	ldi	r24, 0xD0	; 208
     9b2:	78 d0       	rcall	.+240    	; 0xaa4 <I2C_Start>
	TWI_writeByte(read_calendar_address);
     9b4:	8c 2f       	mov	r24, r28
     9b6:	34 d0       	rcall	.+104    	; 0xa20 <TWI_writeByte>
	twi_Repeated_Start(Device_Read_address);
     9b8:	81 ed       	ldi	r24, 0xD1	; 209
     9ba:	50 d0       	rcall	.+160    	; 0xa5c <twi_Repeated_Start>

	day = TWI_readByteWithACK();							/* Read day */
     9bc:	3b d0       	rcall	.+118    	; 0xa34 <TWI_readByteWithACK>
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	90 93 2d 02 	sts	0x022D, r25	; 0x80022d <day+0x1>
     9c4:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <day>
	date = TWI_readByteWithACK();							/* Read date */
     9c8:	35 d0       	rcall	.+106    	; 0xa34 <TWI_readByteWithACK>
     9ca:	90 e0       	ldi	r25, 0x00	; 0
     9cc:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <date+0x1>
     9d0:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <date>
	month = TWI_readByteWithACK();							/* Read month */
     9d4:	2f d0       	rcall	.+94     	; 0xa34 <TWI_readByteWithACK>
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <__data_end+0x1>
     9dc:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <__data_end>
	year = TWI_readByteWithNACK();							/* Read the year with Nack */
     9e0:	33 d0       	rcall	.+102    	; 0xa48 <TWI_readByteWithNACK>
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <year+0x1>
     9e8:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <year>
	TWI_stop();										/* Stop i2C communication */
     9ec:	15 d0       	rcall	.+42     	; 0xa18 <TWI_stop>
     9ee:	cf 91       	pop	r28
}
     9f0:	08 95       	ret

000009f2 <TWI_init>:
     9f2:	82 e0       	ldi	r24, 0x02	; 2
{
    uint8 status;
    /* masking to eliminate first 3 bits and get the last 5 bits (status bits) */
    status = TWSR & 0xF8;
    return status;
}
     9f4:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
     9f8:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
     9fc:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7c00ba>
     a00:	84 e0       	ldi	r24, 0x04	; 4
     a02:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     a06:	08 95       	ret

00000a08 <TWI_start>:
     a08:	84 ea       	ldi	r24, 0xA4	; 164
     a0a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     a0e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     a12:	88 23       	and	r24, r24
     a14:	e4 f7       	brge	.-8      	; 0xa0e <TWI_start+0x6>
     a16:	08 95       	ret

00000a18 <TWI_stop>:
     a18:	84 e9       	ldi	r24, 0x94	; 148
     a1a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     a1e:	08 95       	ret

00000a20 <TWI_writeByte>:
     a20:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
     a24:	84 e8       	ldi	r24, 0x84	; 132
     a26:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     a2a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     a2e:	88 23       	and	r24, r24
     a30:	e4 f7       	brge	.-8      	; 0xa2a <TWI_writeByte+0xa>
     a32:	08 95       	ret

00000a34 <TWI_readByteWithACK>:
     a34:	84 ec       	ldi	r24, 0xC4	; 196
     a36:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     a3a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     a3e:	88 23       	and	r24, r24
     a40:	e4 f7       	brge	.-8      	; 0xa3a <TWI_readByteWithACK+0x6>
     a42:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
     a46:	08 95       	ret

00000a48 <TWI_readByteWithNACK>:
     a48:	84 e8       	ldi	r24, 0x84	; 132
     a4a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     a4e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     a52:	88 23       	and	r24, r24
     a54:	e4 f7       	brge	.-8      	; 0xa4e <TWI_readByteWithNACK+0x6>
     a56:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
     a5a:	08 95       	ret

00000a5c <twi_Repeated_Start>:


uint8_t twi_Repeated_Start(char read_address)				/* I2C repeated start function */
{
	uint8_t status;											/* Declare variable */
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
     a5c:	94 ea       	ldi	r25, 0xA4	; 164
     a5e:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
     a62:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     a66:	99 23       	and	r25, r25
     a68:	e4 f7       	brge	.-8      	; 0xa62 <twi_Repeated_Start+0x6>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     a6a:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
     a6e:	98 7f       	andi	r25, 0xF8	; 248
	if (status != 0x10)										/* Check weather repeated start condition transmitted successfully or not? */
     a70:	90 31       	cpi	r25, 0x10	; 16
     a72:	91 f4       	brne	.+36     	; 0xa98 <twi_Repeated_Start+0x3c>
	return 0;												/* If no then return 0 to indicate repeated start condition fail */
	TWDR = read_address;									/* If yes then write SLA+R in TWI data register */
     a74:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
     a78:	84 e8       	ldi	r24, 0x84	; 132
     a7a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
     a7e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     a82:	88 23       	and	r24, r24
     a84:	e4 f7       	brge	.-8      	; 0xa7e <twi_Repeated_Start+0x22>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     a86:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
     a8a:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x40)										/* Check weather SLA+R transmitted & ack received or not? */
     a8c:	80 34       	cpi	r24, 0x40	; 64
     a8e:	31 f0       	breq	.+12     	; 0xa9c <twi_Repeated_Start+0x40>
	return 1;												/* If yes then return 1 to indicate ack received */
	if (status == 0x20)										/* Check weather SLA+R transmitted & nack received or not? */
     a90:	80 32       	cpi	r24, 0x20	; 32
     a92:	31 f4       	brne	.+12     	; 0xaa0 <twi_Repeated_Start+0x44>
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
     a94:	82 e0       	ldi	r24, 0x02	; 2
     a96:	08 95       	ret
	uint8_t status;											/* Declare variable */
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status != 0x10)										/* Check weather repeated start condition transmitted successfully or not? */
	return 0;												/* If no then return 0 to indicate repeated start condition fail */
     a98:	80 e0       	ldi	r24, 0x00	; 0
     a9a:	08 95       	ret
	TWDR = read_address;									/* If yes then write SLA+R in TWI data register */
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x40)										/* Check weather SLA+R transmitted & ack received or not? */
	return 1;												/* If yes then return 1 to indicate ack received */
     a9c:	81 e0       	ldi	r24, 0x01	; 1
     a9e:	08 95       	ret
	if (status == 0x20)										/* Check weather SLA+R transmitted & nack received or not? */
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
     aa0:	83 e0       	ldi	r24, 0x03	; 3
}
     aa2:	08 95       	ret

00000aa4 <I2C_Start>:

uint8_t I2C_Start(char write_address)						/* I2C start function */
{
	uint8_t status;											/* Declare variable */
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
     aa4:	94 ea       	ldi	r25, 0xA4	; 164
     aa6:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
     aaa:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     aae:	99 23       	and	r25, r25
     ab0:	e4 f7       	brge	.-8      	; 0xaaa <I2C_Start+0x6>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     ab2:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
     ab6:	98 7f       	andi	r25, 0xF8	; 248
	if (status != 0x08)										/* Check weather start condition transmitted successfully or not? */
     ab8:	98 30       	cpi	r25, 0x08	; 8
     aba:	91 f4       	brne	.+36     	; 0xae0 <I2C_Start+0x3c>
	return 0;												/* If not then return 0 to indicate start condition fail */
	TWDR = write_address;									/* If yes then write SLA+W in TWI data register */
     abc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
     ac0:	84 e8       	ldi	r24, 0x84	; 132
     ac2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
     ac6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     aca:	88 23       	and	r24, r24
     acc:	e4 f7       	brge	.-8      	; 0xac6 <I2C_Start+0x22>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     ace:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
     ad2:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x18)										/* Check weather SLA+W transmitted & ack received or not? */
     ad4:	88 31       	cpi	r24, 0x18	; 24
     ad6:	31 f0       	breq	.+12     	; 0xae4 <I2C_Start+0x40>
	return 1;												/* If yes then return 1 to indicate ack received i.e. ready to accept data byte */
	if (status == 0x20)										/* Check weather SLA+W transmitted & nack received or not? */
     ad8:	80 32       	cpi	r24, 0x20	; 32
     ada:	31 f4       	brne	.+12     	; 0xae8 <I2C_Start+0x44>
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
     adc:	82 e0       	ldi	r24, 0x02	; 2
     ade:	08 95       	ret
	uint8_t status;											/* Declare variable */
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status != 0x08)										/* Check weather start condition transmitted successfully or not? */
	return 0;												/* If not then return 0 to indicate start condition fail */
     ae0:	80 e0       	ldi	r24, 0x00	; 0
     ae2:	08 95       	ret
	TWDR = write_address;									/* If yes then write SLA+W in TWI data register */
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x18)										/* Check weather SLA+W transmitted & ack received or not? */
	return 1;												/* If yes then return 1 to indicate ack received i.e. ready to accept data byte */
     ae4:	81 e0       	ldi	r24, 0x01	; 1
     ae6:	08 95       	ret
	if (status == 0x20)										/* Check weather SLA+W transmitted & nack received or not? */
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
     ae8:	83 e0       	ldi	r24, 0x03	; 3
     aea:	08 95       	ret

00000aec <sprintf>:
     aec:	0f 93       	push	r16
     aee:	1f 93       	push	r17
     af0:	cf 93       	push	r28
     af2:	df 93       	push	r29
     af4:	cd b7       	in	r28, 0x3d	; 61
     af6:	de b7       	in	r29, 0x3e	; 62
     af8:	2e 97       	sbiw	r28, 0x0e	; 14
     afa:	0f b6       	in	r0, 0x3f	; 63
     afc:	f8 94       	cli
     afe:	de bf       	out	0x3e, r29	; 62
     b00:	0f be       	out	0x3f, r0	; 63
     b02:	cd bf       	out	0x3d, r28	; 61
     b04:	0e 89       	ldd	r16, Y+22	; 0x16
     b06:	1f 89       	ldd	r17, Y+23	; 0x17
     b08:	86 e0       	ldi	r24, 0x06	; 6
     b0a:	8c 83       	std	Y+4, r24	; 0x04
     b0c:	1a 83       	std	Y+2, r17	; 0x02
     b0e:	09 83       	std	Y+1, r16	; 0x01
     b10:	8f ef       	ldi	r24, 0xFF	; 255
     b12:	9f e7       	ldi	r25, 0x7F	; 127
     b14:	9e 83       	std	Y+6, r25	; 0x06
     b16:	8d 83       	std	Y+5, r24	; 0x05
     b18:	ae 01       	movw	r20, r28
     b1a:	46 5e       	subi	r20, 0xE6	; 230
     b1c:	5f 4f       	sbci	r21, 0xFF	; 255
     b1e:	68 8d       	ldd	r22, Y+24	; 0x18
     b20:	79 8d       	ldd	r23, Y+25	; 0x19
     b22:	ce 01       	movw	r24, r28
     b24:	01 96       	adiw	r24, 0x01	; 1
     b26:	10 d0       	rcall	.+32     	; 0xb48 <vfprintf>
     b28:	ef 81       	ldd	r30, Y+7	; 0x07
     b2a:	f8 85       	ldd	r31, Y+8	; 0x08
     b2c:	e0 0f       	add	r30, r16
     b2e:	f1 1f       	adc	r31, r17
     b30:	10 82       	st	Z, r1
     b32:	2e 96       	adiw	r28, 0x0e	; 14
     b34:	0f b6       	in	r0, 0x3f	; 63
     b36:	f8 94       	cli
     b38:	de bf       	out	0x3e, r29	; 62
     b3a:	0f be       	out	0x3f, r0	; 63
     b3c:	cd bf       	out	0x3d, r28	; 61
     b3e:	df 91       	pop	r29
     b40:	cf 91       	pop	r28
     b42:	1f 91       	pop	r17
     b44:	0f 91       	pop	r16
     b46:	08 95       	ret

00000b48 <vfprintf>:
     b48:	2f 92       	push	r2
     b4a:	3f 92       	push	r3
     b4c:	4f 92       	push	r4
     b4e:	5f 92       	push	r5
     b50:	6f 92       	push	r6
     b52:	7f 92       	push	r7
     b54:	8f 92       	push	r8
     b56:	9f 92       	push	r9
     b58:	af 92       	push	r10
     b5a:	bf 92       	push	r11
     b5c:	cf 92       	push	r12
     b5e:	df 92       	push	r13
     b60:	ef 92       	push	r14
     b62:	ff 92       	push	r15
     b64:	0f 93       	push	r16
     b66:	1f 93       	push	r17
     b68:	cf 93       	push	r28
     b6a:	df 93       	push	r29
     b6c:	cd b7       	in	r28, 0x3d	; 61
     b6e:	de b7       	in	r29, 0x3e	; 62
     b70:	2b 97       	sbiw	r28, 0x0b	; 11
     b72:	0f b6       	in	r0, 0x3f	; 63
     b74:	f8 94       	cli
     b76:	de bf       	out	0x3e, r29	; 62
     b78:	0f be       	out	0x3f, r0	; 63
     b7a:	cd bf       	out	0x3d, r28	; 61
     b7c:	6c 01       	movw	r12, r24
     b7e:	7b 01       	movw	r14, r22
     b80:	8a 01       	movw	r16, r20
     b82:	fc 01       	movw	r30, r24
     b84:	17 82       	std	Z+7, r1	; 0x07
     b86:	16 82       	std	Z+6, r1	; 0x06
     b88:	83 81       	ldd	r24, Z+3	; 0x03
     b8a:	81 ff       	sbrs	r24, 1
     b8c:	bf c1       	rjmp	.+894    	; 0xf0c <vfprintf+0x3c4>
     b8e:	ce 01       	movw	r24, r28
     b90:	01 96       	adiw	r24, 0x01	; 1
     b92:	3c 01       	movw	r6, r24
     b94:	f6 01       	movw	r30, r12
     b96:	93 81       	ldd	r25, Z+3	; 0x03
     b98:	f7 01       	movw	r30, r14
     b9a:	93 fd       	sbrc	r25, 3
     b9c:	85 91       	lpm	r24, Z+
     b9e:	93 ff       	sbrs	r25, 3
     ba0:	81 91       	ld	r24, Z+
     ba2:	7f 01       	movw	r14, r30
     ba4:	88 23       	and	r24, r24
     ba6:	09 f4       	brne	.+2      	; 0xbaa <vfprintf+0x62>
     ba8:	ad c1       	rjmp	.+858    	; 0xf04 <vfprintf+0x3bc>
     baa:	85 32       	cpi	r24, 0x25	; 37
     bac:	39 f4       	brne	.+14     	; 0xbbc <vfprintf+0x74>
     bae:	93 fd       	sbrc	r25, 3
     bb0:	85 91       	lpm	r24, Z+
     bb2:	93 ff       	sbrs	r25, 3
     bb4:	81 91       	ld	r24, Z+
     bb6:	7f 01       	movw	r14, r30
     bb8:	85 32       	cpi	r24, 0x25	; 37
     bba:	21 f4       	brne	.+8      	; 0xbc4 <vfprintf+0x7c>
     bbc:	b6 01       	movw	r22, r12
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	d6 d1       	rcall	.+940    	; 0xf6e <fputc>
     bc2:	e8 cf       	rjmp	.-48     	; 0xb94 <vfprintf+0x4c>
     bc4:	91 2c       	mov	r9, r1
     bc6:	21 2c       	mov	r2, r1
     bc8:	31 2c       	mov	r3, r1
     bca:	ff e1       	ldi	r31, 0x1F	; 31
     bcc:	f3 15       	cp	r31, r3
     bce:	d8 f0       	brcs	.+54     	; 0xc06 <vfprintf+0xbe>
     bd0:	8b 32       	cpi	r24, 0x2B	; 43
     bd2:	79 f0       	breq	.+30     	; 0xbf2 <vfprintf+0xaa>
     bd4:	38 f4       	brcc	.+14     	; 0xbe4 <vfprintf+0x9c>
     bd6:	80 32       	cpi	r24, 0x20	; 32
     bd8:	79 f0       	breq	.+30     	; 0xbf8 <vfprintf+0xb0>
     bda:	83 32       	cpi	r24, 0x23	; 35
     bdc:	a1 f4       	brne	.+40     	; 0xc06 <vfprintf+0xbe>
     bde:	23 2d       	mov	r18, r3
     be0:	20 61       	ori	r18, 0x10	; 16
     be2:	1d c0       	rjmp	.+58     	; 0xc1e <vfprintf+0xd6>
     be4:	8d 32       	cpi	r24, 0x2D	; 45
     be6:	61 f0       	breq	.+24     	; 0xc00 <vfprintf+0xb8>
     be8:	80 33       	cpi	r24, 0x30	; 48
     bea:	69 f4       	brne	.+26     	; 0xc06 <vfprintf+0xbe>
     bec:	23 2d       	mov	r18, r3
     bee:	21 60       	ori	r18, 0x01	; 1
     bf0:	16 c0       	rjmp	.+44     	; 0xc1e <vfprintf+0xd6>
     bf2:	83 2d       	mov	r24, r3
     bf4:	82 60       	ori	r24, 0x02	; 2
     bf6:	38 2e       	mov	r3, r24
     bf8:	e3 2d       	mov	r30, r3
     bfa:	e4 60       	ori	r30, 0x04	; 4
     bfc:	3e 2e       	mov	r3, r30
     bfe:	2a c0       	rjmp	.+84     	; 0xc54 <vfprintf+0x10c>
     c00:	f3 2d       	mov	r31, r3
     c02:	f8 60       	ori	r31, 0x08	; 8
     c04:	1d c0       	rjmp	.+58     	; 0xc40 <vfprintf+0xf8>
     c06:	37 fc       	sbrc	r3, 7
     c08:	2d c0       	rjmp	.+90     	; 0xc64 <vfprintf+0x11c>
     c0a:	20 ed       	ldi	r18, 0xD0	; 208
     c0c:	28 0f       	add	r18, r24
     c0e:	2a 30       	cpi	r18, 0x0A	; 10
     c10:	40 f0       	brcs	.+16     	; 0xc22 <vfprintf+0xda>
     c12:	8e 32       	cpi	r24, 0x2E	; 46
     c14:	b9 f4       	brne	.+46     	; 0xc44 <vfprintf+0xfc>
     c16:	36 fc       	sbrc	r3, 6
     c18:	75 c1       	rjmp	.+746    	; 0xf04 <vfprintf+0x3bc>
     c1a:	23 2d       	mov	r18, r3
     c1c:	20 64       	ori	r18, 0x40	; 64
     c1e:	32 2e       	mov	r3, r18
     c20:	19 c0       	rjmp	.+50     	; 0xc54 <vfprintf+0x10c>
     c22:	36 fe       	sbrs	r3, 6
     c24:	06 c0       	rjmp	.+12     	; 0xc32 <vfprintf+0xea>
     c26:	8a e0       	ldi	r24, 0x0A	; 10
     c28:	98 9e       	mul	r9, r24
     c2a:	20 0d       	add	r18, r0
     c2c:	11 24       	eor	r1, r1
     c2e:	92 2e       	mov	r9, r18
     c30:	11 c0       	rjmp	.+34     	; 0xc54 <vfprintf+0x10c>
     c32:	ea e0       	ldi	r30, 0x0A	; 10
     c34:	2e 9e       	mul	r2, r30
     c36:	20 0d       	add	r18, r0
     c38:	11 24       	eor	r1, r1
     c3a:	22 2e       	mov	r2, r18
     c3c:	f3 2d       	mov	r31, r3
     c3e:	f0 62       	ori	r31, 0x20	; 32
     c40:	3f 2e       	mov	r3, r31
     c42:	08 c0       	rjmp	.+16     	; 0xc54 <vfprintf+0x10c>
     c44:	8c 36       	cpi	r24, 0x6C	; 108
     c46:	21 f4       	brne	.+8      	; 0xc50 <vfprintf+0x108>
     c48:	83 2d       	mov	r24, r3
     c4a:	80 68       	ori	r24, 0x80	; 128
     c4c:	38 2e       	mov	r3, r24
     c4e:	02 c0       	rjmp	.+4      	; 0xc54 <vfprintf+0x10c>
     c50:	88 36       	cpi	r24, 0x68	; 104
     c52:	41 f4       	brne	.+16     	; 0xc64 <vfprintf+0x11c>
     c54:	f7 01       	movw	r30, r14
     c56:	93 fd       	sbrc	r25, 3
     c58:	85 91       	lpm	r24, Z+
     c5a:	93 ff       	sbrs	r25, 3
     c5c:	81 91       	ld	r24, Z+
     c5e:	7f 01       	movw	r14, r30
     c60:	81 11       	cpse	r24, r1
     c62:	b3 cf       	rjmp	.-154    	; 0xbca <vfprintf+0x82>
     c64:	98 2f       	mov	r25, r24
     c66:	9f 7d       	andi	r25, 0xDF	; 223
     c68:	95 54       	subi	r25, 0x45	; 69
     c6a:	93 30       	cpi	r25, 0x03	; 3
     c6c:	28 f4       	brcc	.+10     	; 0xc78 <vfprintf+0x130>
     c6e:	0c 5f       	subi	r16, 0xFC	; 252
     c70:	1f 4f       	sbci	r17, 0xFF	; 255
     c72:	9f e3       	ldi	r25, 0x3F	; 63
     c74:	99 83       	std	Y+1, r25	; 0x01
     c76:	0d c0       	rjmp	.+26     	; 0xc92 <vfprintf+0x14a>
     c78:	83 36       	cpi	r24, 0x63	; 99
     c7a:	31 f0       	breq	.+12     	; 0xc88 <vfprintf+0x140>
     c7c:	83 37       	cpi	r24, 0x73	; 115
     c7e:	71 f0       	breq	.+28     	; 0xc9c <vfprintf+0x154>
     c80:	83 35       	cpi	r24, 0x53	; 83
     c82:	09 f0       	breq	.+2      	; 0xc86 <vfprintf+0x13e>
     c84:	55 c0       	rjmp	.+170    	; 0xd30 <vfprintf+0x1e8>
     c86:	20 c0       	rjmp	.+64     	; 0xcc8 <vfprintf+0x180>
     c88:	f8 01       	movw	r30, r16
     c8a:	80 81       	ld	r24, Z
     c8c:	89 83       	std	Y+1, r24	; 0x01
     c8e:	0e 5f       	subi	r16, 0xFE	; 254
     c90:	1f 4f       	sbci	r17, 0xFF	; 255
     c92:	88 24       	eor	r8, r8
     c94:	83 94       	inc	r8
     c96:	91 2c       	mov	r9, r1
     c98:	53 01       	movw	r10, r6
     c9a:	12 c0       	rjmp	.+36     	; 0xcc0 <vfprintf+0x178>
     c9c:	28 01       	movw	r4, r16
     c9e:	f2 e0       	ldi	r31, 0x02	; 2
     ca0:	4f 0e       	add	r4, r31
     ca2:	51 1c       	adc	r5, r1
     ca4:	f8 01       	movw	r30, r16
     ca6:	a0 80       	ld	r10, Z
     ca8:	b1 80       	ldd	r11, Z+1	; 0x01
     caa:	36 fe       	sbrs	r3, 6
     cac:	03 c0       	rjmp	.+6      	; 0xcb4 <vfprintf+0x16c>
     cae:	69 2d       	mov	r22, r9
     cb0:	70 e0       	ldi	r23, 0x00	; 0
     cb2:	02 c0       	rjmp	.+4      	; 0xcb8 <vfprintf+0x170>
     cb4:	6f ef       	ldi	r22, 0xFF	; 255
     cb6:	7f ef       	ldi	r23, 0xFF	; 255
     cb8:	c5 01       	movw	r24, r10
     cba:	4e d1       	rcall	.+668    	; 0xf58 <strnlen>
     cbc:	4c 01       	movw	r8, r24
     cbe:	82 01       	movw	r16, r4
     cc0:	f3 2d       	mov	r31, r3
     cc2:	ff 77       	andi	r31, 0x7F	; 127
     cc4:	3f 2e       	mov	r3, r31
     cc6:	15 c0       	rjmp	.+42     	; 0xcf2 <vfprintf+0x1aa>
     cc8:	28 01       	movw	r4, r16
     cca:	22 e0       	ldi	r18, 0x02	; 2
     ccc:	42 0e       	add	r4, r18
     cce:	51 1c       	adc	r5, r1
     cd0:	f8 01       	movw	r30, r16
     cd2:	a0 80       	ld	r10, Z
     cd4:	b1 80       	ldd	r11, Z+1	; 0x01
     cd6:	36 fe       	sbrs	r3, 6
     cd8:	03 c0       	rjmp	.+6      	; 0xce0 <vfprintf+0x198>
     cda:	69 2d       	mov	r22, r9
     cdc:	70 e0       	ldi	r23, 0x00	; 0
     cde:	02 c0       	rjmp	.+4      	; 0xce4 <vfprintf+0x19c>
     ce0:	6f ef       	ldi	r22, 0xFF	; 255
     ce2:	7f ef       	ldi	r23, 0xFF	; 255
     ce4:	c5 01       	movw	r24, r10
     ce6:	2d d1       	rcall	.+602    	; 0xf42 <strnlen_P>
     ce8:	4c 01       	movw	r8, r24
     cea:	f3 2d       	mov	r31, r3
     cec:	f0 68       	ori	r31, 0x80	; 128
     cee:	3f 2e       	mov	r3, r31
     cf0:	82 01       	movw	r16, r4
     cf2:	33 fc       	sbrc	r3, 3
     cf4:	19 c0       	rjmp	.+50     	; 0xd28 <vfprintf+0x1e0>
     cf6:	82 2d       	mov	r24, r2
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	88 16       	cp	r8, r24
     cfc:	99 06       	cpc	r9, r25
     cfe:	a0 f4       	brcc	.+40     	; 0xd28 <vfprintf+0x1e0>
     d00:	b6 01       	movw	r22, r12
     d02:	80 e2       	ldi	r24, 0x20	; 32
     d04:	90 e0       	ldi	r25, 0x00	; 0
     d06:	33 d1       	rcall	.+614    	; 0xf6e <fputc>
     d08:	2a 94       	dec	r2
     d0a:	f5 cf       	rjmp	.-22     	; 0xcf6 <vfprintf+0x1ae>
     d0c:	f5 01       	movw	r30, r10
     d0e:	37 fc       	sbrc	r3, 7
     d10:	85 91       	lpm	r24, Z+
     d12:	37 fe       	sbrs	r3, 7
     d14:	81 91       	ld	r24, Z+
     d16:	5f 01       	movw	r10, r30
     d18:	b6 01       	movw	r22, r12
     d1a:	90 e0       	ldi	r25, 0x00	; 0
     d1c:	28 d1       	rcall	.+592    	; 0xf6e <fputc>
     d1e:	21 10       	cpse	r2, r1
     d20:	2a 94       	dec	r2
     d22:	21 e0       	ldi	r18, 0x01	; 1
     d24:	82 1a       	sub	r8, r18
     d26:	91 08       	sbc	r9, r1
     d28:	81 14       	cp	r8, r1
     d2a:	91 04       	cpc	r9, r1
     d2c:	79 f7       	brne	.-34     	; 0xd0c <vfprintf+0x1c4>
     d2e:	e1 c0       	rjmp	.+450    	; 0xef2 <vfprintf+0x3aa>
     d30:	84 36       	cpi	r24, 0x64	; 100
     d32:	11 f0       	breq	.+4      	; 0xd38 <vfprintf+0x1f0>
     d34:	89 36       	cpi	r24, 0x69	; 105
     d36:	39 f5       	brne	.+78     	; 0xd86 <vfprintf+0x23e>
     d38:	f8 01       	movw	r30, r16
     d3a:	37 fe       	sbrs	r3, 7
     d3c:	07 c0       	rjmp	.+14     	; 0xd4c <vfprintf+0x204>
     d3e:	60 81       	ld	r22, Z
     d40:	71 81       	ldd	r23, Z+1	; 0x01
     d42:	82 81       	ldd	r24, Z+2	; 0x02
     d44:	93 81       	ldd	r25, Z+3	; 0x03
     d46:	0c 5f       	subi	r16, 0xFC	; 252
     d48:	1f 4f       	sbci	r17, 0xFF	; 255
     d4a:	08 c0       	rjmp	.+16     	; 0xd5c <vfprintf+0x214>
     d4c:	60 81       	ld	r22, Z
     d4e:	71 81       	ldd	r23, Z+1	; 0x01
     d50:	07 2e       	mov	r0, r23
     d52:	00 0c       	add	r0, r0
     d54:	88 0b       	sbc	r24, r24
     d56:	99 0b       	sbc	r25, r25
     d58:	0e 5f       	subi	r16, 0xFE	; 254
     d5a:	1f 4f       	sbci	r17, 0xFF	; 255
     d5c:	f3 2d       	mov	r31, r3
     d5e:	ff 76       	andi	r31, 0x6F	; 111
     d60:	3f 2e       	mov	r3, r31
     d62:	97 ff       	sbrs	r25, 7
     d64:	09 c0       	rjmp	.+18     	; 0xd78 <vfprintf+0x230>
     d66:	90 95       	com	r25
     d68:	80 95       	com	r24
     d6a:	70 95       	com	r23
     d6c:	61 95       	neg	r22
     d6e:	7f 4f       	sbci	r23, 0xFF	; 255
     d70:	8f 4f       	sbci	r24, 0xFF	; 255
     d72:	9f 4f       	sbci	r25, 0xFF	; 255
     d74:	f0 68       	ori	r31, 0x80	; 128
     d76:	3f 2e       	mov	r3, r31
     d78:	2a e0       	ldi	r18, 0x0A	; 10
     d7a:	30 e0       	ldi	r19, 0x00	; 0
     d7c:	a3 01       	movw	r20, r6
     d7e:	33 d1       	rcall	.+614    	; 0xfe6 <__ultoa_invert>
     d80:	88 2e       	mov	r8, r24
     d82:	86 18       	sub	r8, r6
     d84:	44 c0       	rjmp	.+136    	; 0xe0e <vfprintf+0x2c6>
     d86:	85 37       	cpi	r24, 0x75	; 117
     d88:	31 f4       	brne	.+12     	; 0xd96 <vfprintf+0x24e>
     d8a:	23 2d       	mov	r18, r3
     d8c:	2f 7e       	andi	r18, 0xEF	; 239
     d8e:	b2 2e       	mov	r11, r18
     d90:	2a e0       	ldi	r18, 0x0A	; 10
     d92:	30 e0       	ldi	r19, 0x00	; 0
     d94:	25 c0       	rjmp	.+74     	; 0xde0 <vfprintf+0x298>
     d96:	93 2d       	mov	r25, r3
     d98:	99 7f       	andi	r25, 0xF9	; 249
     d9a:	b9 2e       	mov	r11, r25
     d9c:	8f 36       	cpi	r24, 0x6F	; 111
     d9e:	c1 f0       	breq	.+48     	; 0xdd0 <vfprintf+0x288>
     da0:	18 f4       	brcc	.+6      	; 0xda8 <vfprintf+0x260>
     da2:	88 35       	cpi	r24, 0x58	; 88
     da4:	79 f0       	breq	.+30     	; 0xdc4 <vfprintf+0x27c>
     da6:	ae c0       	rjmp	.+348    	; 0xf04 <vfprintf+0x3bc>
     da8:	80 37       	cpi	r24, 0x70	; 112
     daa:	19 f0       	breq	.+6      	; 0xdb2 <vfprintf+0x26a>
     dac:	88 37       	cpi	r24, 0x78	; 120
     dae:	21 f0       	breq	.+8      	; 0xdb8 <vfprintf+0x270>
     db0:	a9 c0       	rjmp	.+338    	; 0xf04 <vfprintf+0x3bc>
     db2:	e9 2f       	mov	r30, r25
     db4:	e0 61       	ori	r30, 0x10	; 16
     db6:	be 2e       	mov	r11, r30
     db8:	b4 fe       	sbrs	r11, 4
     dba:	0d c0       	rjmp	.+26     	; 0xdd6 <vfprintf+0x28e>
     dbc:	fb 2d       	mov	r31, r11
     dbe:	f4 60       	ori	r31, 0x04	; 4
     dc0:	bf 2e       	mov	r11, r31
     dc2:	09 c0       	rjmp	.+18     	; 0xdd6 <vfprintf+0x28e>
     dc4:	34 fe       	sbrs	r3, 4
     dc6:	0a c0       	rjmp	.+20     	; 0xddc <vfprintf+0x294>
     dc8:	29 2f       	mov	r18, r25
     dca:	26 60       	ori	r18, 0x06	; 6
     dcc:	b2 2e       	mov	r11, r18
     dce:	06 c0       	rjmp	.+12     	; 0xddc <vfprintf+0x294>
     dd0:	28 e0       	ldi	r18, 0x08	; 8
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	05 c0       	rjmp	.+10     	; 0xde0 <vfprintf+0x298>
     dd6:	20 e1       	ldi	r18, 0x10	; 16
     dd8:	30 e0       	ldi	r19, 0x00	; 0
     dda:	02 c0       	rjmp	.+4      	; 0xde0 <vfprintf+0x298>
     ddc:	20 e1       	ldi	r18, 0x10	; 16
     dde:	32 e0       	ldi	r19, 0x02	; 2
     de0:	f8 01       	movw	r30, r16
     de2:	b7 fe       	sbrs	r11, 7
     de4:	07 c0       	rjmp	.+14     	; 0xdf4 <vfprintf+0x2ac>
     de6:	60 81       	ld	r22, Z
     de8:	71 81       	ldd	r23, Z+1	; 0x01
     dea:	82 81       	ldd	r24, Z+2	; 0x02
     dec:	93 81       	ldd	r25, Z+3	; 0x03
     dee:	0c 5f       	subi	r16, 0xFC	; 252
     df0:	1f 4f       	sbci	r17, 0xFF	; 255
     df2:	06 c0       	rjmp	.+12     	; 0xe00 <vfprintf+0x2b8>
     df4:	60 81       	ld	r22, Z
     df6:	71 81       	ldd	r23, Z+1	; 0x01
     df8:	80 e0       	ldi	r24, 0x00	; 0
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	0e 5f       	subi	r16, 0xFE	; 254
     dfe:	1f 4f       	sbci	r17, 0xFF	; 255
     e00:	a3 01       	movw	r20, r6
     e02:	f1 d0       	rcall	.+482    	; 0xfe6 <__ultoa_invert>
     e04:	88 2e       	mov	r8, r24
     e06:	86 18       	sub	r8, r6
     e08:	fb 2d       	mov	r31, r11
     e0a:	ff 77       	andi	r31, 0x7F	; 127
     e0c:	3f 2e       	mov	r3, r31
     e0e:	36 fe       	sbrs	r3, 6
     e10:	0d c0       	rjmp	.+26     	; 0xe2c <vfprintf+0x2e4>
     e12:	23 2d       	mov	r18, r3
     e14:	2e 7f       	andi	r18, 0xFE	; 254
     e16:	a2 2e       	mov	r10, r18
     e18:	89 14       	cp	r8, r9
     e1a:	58 f4       	brcc	.+22     	; 0xe32 <vfprintf+0x2ea>
     e1c:	34 fe       	sbrs	r3, 4
     e1e:	0b c0       	rjmp	.+22     	; 0xe36 <vfprintf+0x2ee>
     e20:	32 fc       	sbrc	r3, 2
     e22:	09 c0       	rjmp	.+18     	; 0xe36 <vfprintf+0x2ee>
     e24:	83 2d       	mov	r24, r3
     e26:	8e 7e       	andi	r24, 0xEE	; 238
     e28:	a8 2e       	mov	r10, r24
     e2a:	05 c0       	rjmp	.+10     	; 0xe36 <vfprintf+0x2ee>
     e2c:	b8 2c       	mov	r11, r8
     e2e:	a3 2c       	mov	r10, r3
     e30:	03 c0       	rjmp	.+6      	; 0xe38 <vfprintf+0x2f0>
     e32:	b8 2c       	mov	r11, r8
     e34:	01 c0       	rjmp	.+2      	; 0xe38 <vfprintf+0x2f0>
     e36:	b9 2c       	mov	r11, r9
     e38:	a4 fe       	sbrs	r10, 4
     e3a:	0f c0       	rjmp	.+30     	; 0xe5a <vfprintf+0x312>
     e3c:	fe 01       	movw	r30, r28
     e3e:	e8 0d       	add	r30, r8
     e40:	f1 1d       	adc	r31, r1
     e42:	80 81       	ld	r24, Z
     e44:	80 33       	cpi	r24, 0x30	; 48
     e46:	21 f4       	brne	.+8      	; 0xe50 <vfprintf+0x308>
     e48:	9a 2d       	mov	r25, r10
     e4a:	99 7e       	andi	r25, 0xE9	; 233
     e4c:	a9 2e       	mov	r10, r25
     e4e:	09 c0       	rjmp	.+18     	; 0xe62 <vfprintf+0x31a>
     e50:	a2 fe       	sbrs	r10, 2
     e52:	06 c0       	rjmp	.+12     	; 0xe60 <vfprintf+0x318>
     e54:	b3 94       	inc	r11
     e56:	b3 94       	inc	r11
     e58:	04 c0       	rjmp	.+8      	; 0xe62 <vfprintf+0x31a>
     e5a:	8a 2d       	mov	r24, r10
     e5c:	86 78       	andi	r24, 0x86	; 134
     e5e:	09 f0       	breq	.+2      	; 0xe62 <vfprintf+0x31a>
     e60:	b3 94       	inc	r11
     e62:	a3 fc       	sbrc	r10, 3
     e64:	10 c0       	rjmp	.+32     	; 0xe86 <vfprintf+0x33e>
     e66:	a0 fe       	sbrs	r10, 0
     e68:	06 c0       	rjmp	.+12     	; 0xe76 <vfprintf+0x32e>
     e6a:	b2 14       	cp	r11, r2
     e6c:	80 f4       	brcc	.+32     	; 0xe8e <vfprintf+0x346>
     e6e:	28 0c       	add	r2, r8
     e70:	92 2c       	mov	r9, r2
     e72:	9b 18       	sub	r9, r11
     e74:	0d c0       	rjmp	.+26     	; 0xe90 <vfprintf+0x348>
     e76:	b2 14       	cp	r11, r2
     e78:	58 f4       	brcc	.+22     	; 0xe90 <vfprintf+0x348>
     e7a:	b6 01       	movw	r22, r12
     e7c:	80 e2       	ldi	r24, 0x20	; 32
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	76 d0       	rcall	.+236    	; 0xf6e <fputc>
     e82:	b3 94       	inc	r11
     e84:	f8 cf       	rjmp	.-16     	; 0xe76 <vfprintf+0x32e>
     e86:	b2 14       	cp	r11, r2
     e88:	18 f4       	brcc	.+6      	; 0xe90 <vfprintf+0x348>
     e8a:	2b 18       	sub	r2, r11
     e8c:	02 c0       	rjmp	.+4      	; 0xe92 <vfprintf+0x34a>
     e8e:	98 2c       	mov	r9, r8
     e90:	21 2c       	mov	r2, r1
     e92:	a4 fe       	sbrs	r10, 4
     e94:	0f c0       	rjmp	.+30     	; 0xeb4 <vfprintf+0x36c>
     e96:	b6 01       	movw	r22, r12
     e98:	80 e3       	ldi	r24, 0x30	; 48
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	68 d0       	rcall	.+208    	; 0xf6e <fputc>
     e9e:	a2 fe       	sbrs	r10, 2
     ea0:	16 c0       	rjmp	.+44     	; 0xece <vfprintf+0x386>
     ea2:	a1 fc       	sbrc	r10, 1
     ea4:	03 c0       	rjmp	.+6      	; 0xeac <vfprintf+0x364>
     ea6:	88 e7       	ldi	r24, 0x78	; 120
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	02 c0       	rjmp	.+4      	; 0xeb0 <vfprintf+0x368>
     eac:	88 e5       	ldi	r24, 0x58	; 88
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	b6 01       	movw	r22, r12
     eb2:	0c c0       	rjmp	.+24     	; 0xecc <vfprintf+0x384>
     eb4:	8a 2d       	mov	r24, r10
     eb6:	86 78       	andi	r24, 0x86	; 134
     eb8:	51 f0       	breq	.+20     	; 0xece <vfprintf+0x386>
     eba:	a1 fe       	sbrs	r10, 1
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <vfprintf+0x37a>
     ebe:	8b e2       	ldi	r24, 0x2B	; 43
     ec0:	01 c0       	rjmp	.+2      	; 0xec4 <vfprintf+0x37c>
     ec2:	80 e2       	ldi	r24, 0x20	; 32
     ec4:	a7 fc       	sbrc	r10, 7
     ec6:	8d e2       	ldi	r24, 0x2D	; 45
     ec8:	b6 01       	movw	r22, r12
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	50 d0       	rcall	.+160    	; 0xf6e <fputc>
     ece:	89 14       	cp	r8, r9
     ed0:	30 f4       	brcc	.+12     	; 0xede <vfprintf+0x396>
     ed2:	b6 01       	movw	r22, r12
     ed4:	80 e3       	ldi	r24, 0x30	; 48
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	4a d0       	rcall	.+148    	; 0xf6e <fputc>
     eda:	9a 94       	dec	r9
     edc:	f8 cf       	rjmp	.-16     	; 0xece <vfprintf+0x386>
     ede:	8a 94       	dec	r8
     ee0:	f3 01       	movw	r30, r6
     ee2:	e8 0d       	add	r30, r8
     ee4:	f1 1d       	adc	r31, r1
     ee6:	80 81       	ld	r24, Z
     ee8:	b6 01       	movw	r22, r12
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	40 d0       	rcall	.+128    	; 0xf6e <fputc>
     eee:	81 10       	cpse	r8, r1
     ef0:	f6 cf       	rjmp	.-20     	; 0xede <vfprintf+0x396>
     ef2:	22 20       	and	r2, r2
     ef4:	09 f4       	brne	.+2      	; 0xef8 <vfprintf+0x3b0>
     ef6:	4e ce       	rjmp	.-868    	; 0xb94 <vfprintf+0x4c>
     ef8:	b6 01       	movw	r22, r12
     efa:	80 e2       	ldi	r24, 0x20	; 32
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	37 d0       	rcall	.+110    	; 0xf6e <fputc>
     f00:	2a 94       	dec	r2
     f02:	f7 cf       	rjmp	.-18     	; 0xef2 <vfprintf+0x3aa>
     f04:	f6 01       	movw	r30, r12
     f06:	86 81       	ldd	r24, Z+6	; 0x06
     f08:	97 81       	ldd	r25, Z+7	; 0x07
     f0a:	02 c0       	rjmp	.+4      	; 0xf10 <vfprintf+0x3c8>
     f0c:	8f ef       	ldi	r24, 0xFF	; 255
     f0e:	9f ef       	ldi	r25, 0xFF	; 255
     f10:	2b 96       	adiw	r28, 0x0b	; 11
     f12:	0f b6       	in	r0, 0x3f	; 63
     f14:	f8 94       	cli
     f16:	de bf       	out	0x3e, r29	; 62
     f18:	0f be       	out	0x3f, r0	; 63
     f1a:	cd bf       	out	0x3d, r28	; 61
     f1c:	df 91       	pop	r29
     f1e:	cf 91       	pop	r28
     f20:	1f 91       	pop	r17
     f22:	0f 91       	pop	r16
     f24:	ff 90       	pop	r15
     f26:	ef 90       	pop	r14
     f28:	df 90       	pop	r13
     f2a:	cf 90       	pop	r12
     f2c:	bf 90       	pop	r11
     f2e:	af 90       	pop	r10
     f30:	9f 90       	pop	r9
     f32:	8f 90       	pop	r8
     f34:	7f 90       	pop	r7
     f36:	6f 90       	pop	r6
     f38:	5f 90       	pop	r5
     f3a:	4f 90       	pop	r4
     f3c:	3f 90       	pop	r3
     f3e:	2f 90       	pop	r2
     f40:	08 95       	ret

00000f42 <strnlen_P>:
     f42:	fc 01       	movw	r30, r24
     f44:	05 90       	lpm	r0, Z+
     f46:	61 50       	subi	r22, 0x01	; 1
     f48:	70 40       	sbci	r23, 0x00	; 0
     f4a:	01 10       	cpse	r0, r1
     f4c:	d8 f7       	brcc	.-10     	; 0xf44 <strnlen_P+0x2>
     f4e:	80 95       	com	r24
     f50:	90 95       	com	r25
     f52:	8e 0f       	add	r24, r30
     f54:	9f 1f       	adc	r25, r31
     f56:	08 95       	ret

00000f58 <strnlen>:
     f58:	fc 01       	movw	r30, r24
     f5a:	61 50       	subi	r22, 0x01	; 1
     f5c:	70 40       	sbci	r23, 0x00	; 0
     f5e:	01 90       	ld	r0, Z+
     f60:	01 10       	cpse	r0, r1
     f62:	d8 f7       	brcc	.-10     	; 0xf5a <strnlen+0x2>
     f64:	80 95       	com	r24
     f66:	90 95       	com	r25
     f68:	8e 0f       	add	r24, r30
     f6a:	9f 1f       	adc	r25, r31
     f6c:	08 95       	ret

00000f6e <fputc>:
     f6e:	0f 93       	push	r16
     f70:	1f 93       	push	r17
     f72:	cf 93       	push	r28
     f74:	df 93       	push	r29
     f76:	fb 01       	movw	r30, r22
     f78:	23 81       	ldd	r18, Z+3	; 0x03
     f7a:	21 fd       	sbrc	r18, 1
     f7c:	03 c0       	rjmp	.+6      	; 0xf84 <fputc+0x16>
     f7e:	8f ef       	ldi	r24, 0xFF	; 255
     f80:	9f ef       	ldi	r25, 0xFF	; 255
     f82:	2c c0       	rjmp	.+88     	; 0xfdc <fputc+0x6e>
     f84:	22 ff       	sbrs	r18, 2
     f86:	16 c0       	rjmp	.+44     	; 0xfb4 <fputc+0x46>
     f88:	46 81       	ldd	r20, Z+6	; 0x06
     f8a:	57 81       	ldd	r21, Z+7	; 0x07
     f8c:	24 81       	ldd	r18, Z+4	; 0x04
     f8e:	35 81       	ldd	r19, Z+5	; 0x05
     f90:	42 17       	cp	r20, r18
     f92:	53 07       	cpc	r21, r19
     f94:	44 f4       	brge	.+16     	; 0xfa6 <fputc+0x38>
     f96:	a0 81       	ld	r26, Z
     f98:	b1 81       	ldd	r27, Z+1	; 0x01
     f9a:	9d 01       	movw	r18, r26
     f9c:	2f 5f       	subi	r18, 0xFF	; 255
     f9e:	3f 4f       	sbci	r19, 0xFF	; 255
     fa0:	31 83       	std	Z+1, r19	; 0x01
     fa2:	20 83       	st	Z, r18
     fa4:	8c 93       	st	X, r24
     fa6:	26 81       	ldd	r18, Z+6	; 0x06
     fa8:	37 81       	ldd	r19, Z+7	; 0x07
     faa:	2f 5f       	subi	r18, 0xFF	; 255
     fac:	3f 4f       	sbci	r19, 0xFF	; 255
     fae:	37 83       	std	Z+7, r19	; 0x07
     fb0:	26 83       	std	Z+6, r18	; 0x06
     fb2:	14 c0       	rjmp	.+40     	; 0xfdc <fputc+0x6e>
     fb4:	8b 01       	movw	r16, r22
     fb6:	ec 01       	movw	r28, r24
     fb8:	fb 01       	movw	r30, r22
     fba:	00 84       	ldd	r0, Z+8	; 0x08
     fbc:	f1 85       	ldd	r31, Z+9	; 0x09
     fbe:	e0 2d       	mov	r30, r0
     fc0:	19 95       	eicall
     fc2:	89 2b       	or	r24, r25
     fc4:	e1 f6       	brne	.-72     	; 0xf7e <fputc+0x10>
     fc6:	d8 01       	movw	r26, r16
     fc8:	16 96       	adiw	r26, 0x06	; 6
     fca:	8d 91       	ld	r24, X+
     fcc:	9c 91       	ld	r25, X
     fce:	17 97       	sbiw	r26, 0x07	; 7
     fd0:	01 96       	adiw	r24, 0x01	; 1
     fd2:	17 96       	adiw	r26, 0x07	; 7
     fd4:	9c 93       	st	X, r25
     fd6:	8e 93       	st	-X, r24
     fd8:	16 97       	sbiw	r26, 0x06	; 6
     fda:	ce 01       	movw	r24, r28
     fdc:	df 91       	pop	r29
     fde:	cf 91       	pop	r28
     fe0:	1f 91       	pop	r17
     fe2:	0f 91       	pop	r16
     fe4:	08 95       	ret

00000fe6 <__ultoa_invert>:
     fe6:	fa 01       	movw	r30, r20
     fe8:	aa 27       	eor	r26, r26
     fea:	28 30       	cpi	r18, 0x08	; 8
     fec:	51 f1       	breq	.+84     	; 0x1042 <__EEPROM_REGION_LENGTH__+0x42>
     fee:	20 31       	cpi	r18, 0x10	; 16
     ff0:	81 f1       	breq	.+96     	; 0x1052 <__EEPROM_REGION_LENGTH__+0x52>
     ff2:	e8 94       	clt
     ff4:	6f 93       	push	r22
     ff6:	6e 7f       	andi	r22, 0xFE	; 254
     ff8:	6e 5f       	subi	r22, 0xFE	; 254
     ffa:	7f 4f       	sbci	r23, 0xFF	; 255
     ffc:	8f 4f       	sbci	r24, 0xFF	; 255
     ffe:	9f 4f       	sbci	r25, 0xFF	; 255
    1000:	af 4f       	sbci	r26, 0xFF	; 255
    1002:	b1 e0       	ldi	r27, 0x01	; 1
    1004:	3e d0       	rcall	.+124    	; 0x1082 <__EEPROM_REGION_LENGTH__+0x82>
    1006:	b4 e0       	ldi	r27, 0x04	; 4
    1008:	3c d0       	rcall	.+120    	; 0x1082 <__EEPROM_REGION_LENGTH__+0x82>
    100a:	67 0f       	add	r22, r23
    100c:	78 1f       	adc	r23, r24
    100e:	89 1f       	adc	r24, r25
    1010:	9a 1f       	adc	r25, r26
    1012:	a1 1d       	adc	r26, r1
    1014:	68 0f       	add	r22, r24
    1016:	79 1f       	adc	r23, r25
    1018:	8a 1f       	adc	r24, r26
    101a:	91 1d       	adc	r25, r1
    101c:	a1 1d       	adc	r26, r1
    101e:	6a 0f       	add	r22, r26
    1020:	71 1d       	adc	r23, r1
    1022:	81 1d       	adc	r24, r1
    1024:	91 1d       	adc	r25, r1
    1026:	a1 1d       	adc	r26, r1
    1028:	20 d0       	rcall	.+64     	; 0x106a <__EEPROM_REGION_LENGTH__+0x6a>
    102a:	09 f4       	brne	.+2      	; 0x102e <__EEPROM_REGION_LENGTH__+0x2e>
    102c:	68 94       	set
    102e:	3f 91       	pop	r19
    1030:	2a e0       	ldi	r18, 0x0A	; 10
    1032:	26 9f       	mul	r18, r22
    1034:	11 24       	eor	r1, r1
    1036:	30 19       	sub	r19, r0
    1038:	30 5d       	subi	r19, 0xD0	; 208
    103a:	31 93       	st	Z+, r19
    103c:	de f6       	brtc	.-74     	; 0xff4 <__ultoa_invert+0xe>
    103e:	cf 01       	movw	r24, r30
    1040:	08 95       	ret
    1042:	46 2f       	mov	r20, r22
    1044:	47 70       	andi	r20, 0x07	; 7
    1046:	40 5d       	subi	r20, 0xD0	; 208
    1048:	41 93       	st	Z+, r20
    104a:	b3 e0       	ldi	r27, 0x03	; 3
    104c:	0f d0       	rcall	.+30     	; 0x106c <__EEPROM_REGION_LENGTH__+0x6c>
    104e:	c9 f7       	brne	.-14     	; 0x1042 <__EEPROM_REGION_LENGTH__+0x42>
    1050:	f6 cf       	rjmp	.-20     	; 0x103e <__EEPROM_REGION_LENGTH__+0x3e>
    1052:	46 2f       	mov	r20, r22
    1054:	4f 70       	andi	r20, 0x0F	; 15
    1056:	40 5d       	subi	r20, 0xD0	; 208
    1058:	4a 33       	cpi	r20, 0x3A	; 58
    105a:	18 f0       	brcs	.+6      	; 0x1062 <__EEPROM_REGION_LENGTH__+0x62>
    105c:	49 5d       	subi	r20, 0xD9	; 217
    105e:	31 fd       	sbrc	r19, 1
    1060:	40 52       	subi	r20, 0x20	; 32
    1062:	41 93       	st	Z+, r20
    1064:	02 d0       	rcall	.+4      	; 0x106a <__EEPROM_REGION_LENGTH__+0x6a>
    1066:	a9 f7       	brne	.-22     	; 0x1052 <__EEPROM_REGION_LENGTH__+0x52>
    1068:	ea cf       	rjmp	.-44     	; 0x103e <__EEPROM_REGION_LENGTH__+0x3e>
    106a:	b4 e0       	ldi	r27, 0x04	; 4
    106c:	a6 95       	lsr	r26
    106e:	97 95       	ror	r25
    1070:	87 95       	ror	r24
    1072:	77 95       	ror	r23
    1074:	67 95       	ror	r22
    1076:	ba 95       	dec	r27
    1078:	c9 f7       	brne	.-14     	; 0x106c <__EEPROM_REGION_LENGTH__+0x6c>
    107a:	00 97       	sbiw	r24, 0x00	; 0
    107c:	61 05       	cpc	r22, r1
    107e:	71 05       	cpc	r23, r1
    1080:	08 95       	ret
    1082:	9b 01       	movw	r18, r22
    1084:	ac 01       	movw	r20, r24
    1086:	0a 2e       	mov	r0, r26
    1088:	06 94       	lsr	r0
    108a:	57 95       	ror	r21
    108c:	47 95       	ror	r20
    108e:	37 95       	ror	r19
    1090:	27 95       	ror	r18
    1092:	ba 95       	dec	r27
    1094:	c9 f7       	brne	.-14     	; 0x1088 <__EEPROM_REGION_LENGTH__+0x88>
    1096:	62 0f       	add	r22, r18
    1098:	73 1f       	adc	r23, r19
    109a:	84 1f       	adc	r24, r20
    109c:	95 1f       	adc	r25, r21
    109e:	a0 1d       	adc	r26, r0
    10a0:	08 95       	ret

000010a2 <_exit>:
    10a2:	f8 94       	cli

000010a4 <__stop_program>:
    10a4:	ff cf       	rjmp	.-2      	; 0x10a4 <__stop_program>
