
receive.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800200  00000848  000008dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000848  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000065  00800206  00800206  000008e2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008e2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000914  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000228  00000000  00000000  00000954  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001eaf  00000000  00000000  00000b7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010d8  00000000  00000000  00002a2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000111f  00000000  00000000  00003b03  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000490  00000000  00000000  00004c24  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000aee  00000000  00000000  000050b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000010e6  00000000  00000000  00005ba2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  00006c88  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 e4       	ldi	r30, 0x48	; 72
  fc:	f8 e0       	ldi	r31, 0x08	; 8
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a6 30       	cpi	r26, 0x06	; 6
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a6 e0       	ldi	r26, 0x06	; 6
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ab 36       	cpi	r26, 0x6B	; 107
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	6a d3       	rcall	.+1748   	; 0x7f4 <main>
 120:	91 c3       	rjmp	.+1826   	; 0x844 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <GPIO_setupPinDirection>:
		}
	}
	

	return pin_value;
}
 124:	68 30       	cpi	r22, 0x08	; 8
 126:	08 f0       	brcs	.+2      	; 0x12a <GPIO_setupPinDirection+0x6>
 128:	3b c1       	rjmp	.+630    	; 0x3a0 <GPIO_setupPinDirection+0x27c>
 12a:	8b 30       	cpi	r24, 0x0B	; 11
 12c:	08 f0       	brcs	.+2      	; 0x130 <GPIO_setupPinDirection+0xc>
 12e:	38 c1       	rjmp	.+624    	; 0x3a0 <GPIO_setupPinDirection+0x27c>
 130:	81 11       	cpse	r24, r1
 132:	19 c0       	rjmp	.+50     	; 0x166 <GPIO_setupPinDirection+0x42>
 134:	41 30       	cpi	r20, 0x01	; 1
 136:	59 f4       	brne	.+22     	; 0x14e <GPIO_setupPinDirection+0x2a>
 138:	21 b1       	in	r18, 0x01	; 1
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	02 c0       	rjmp	.+4      	; 0x144 <GPIO_setupPinDirection+0x20>
 140:	88 0f       	add	r24, r24
 142:	99 1f       	adc	r25, r25
 144:	6a 95       	dec	r22
 146:	e2 f7       	brpl	.-8      	; 0x140 <GPIO_setupPinDirection+0x1c>
 148:	82 2b       	or	r24, r18
 14a:	81 b9       	out	0x01, r24	; 1
 14c:	08 95       	ret
 14e:	21 b1       	in	r18, 0x01	; 1
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	02 c0       	rjmp	.+4      	; 0x15a <GPIO_setupPinDirection+0x36>
 156:	88 0f       	add	r24, r24
 158:	99 1f       	adc	r25, r25
 15a:	6a 95       	dec	r22
 15c:	e2 f7       	brpl	.-8      	; 0x156 <GPIO_setupPinDirection+0x32>
 15e:	80 95       	com	r24
 160:	82 23       	and	r24, r18
 162:	81 b9       	out	0x01, r24	; 1
 164:	08 95       	ret
 166:	81 30       	cpi	r24, 0x01	; 1
 168:	c9 f4       	brne	.+50     	; 0x19c <GPIO_setupPinDirection+0x78>
 16a:	41 30       	cpi	r20, 0x01	; 1
 16c:	59 f4       	brne	.+22     	; 0x184 <GPIO_setupPinDirection+0x60>
 16e:	24 b1       	in	r18, 0x04	; 4
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	02 c0       	rjmp	.+4      	; 0x17a <GPIO_setupPinDirection+0x56>
 176:	88 0f       	add	r24, r24
 178:	99 1f       	adc	r25, r25
 17a:	6a 95       	dec	r22
 17c:	e2 f7       	brpl	.-8      	; 0x176 <GPIO_setupPinDirection+0x52>
 17e:	82 2b       	or	r24, r18
 180:	84 b9       	out	0x04, r24	; 4
 182:	08 95       	ret
 184:	24 b1       	in	r18, 0x04	; 4
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	02 c0       	rjmp	.+4      	; 0x190 <GPIO_setupPinDirection+0x6c>
 18c:	88 0f       	add	r24, r24
 18e:	99 1f       	adc	r25, r25
 190:	6a 95       	dec	r22
 192:	e2 f7       	brpl	.-8      	; 0x18c <GPIO_setupPinDirection+0x68>
 194:	80 95       	com	r24
 196:	82 23       	and	r24, r18
 198:	84 b9       	out	0x04, r24	; 4
 19a:	08 95       	ret
 19c:	82 30       	cpi	r24, 0x02	; 2
 19e:	c9 f4       	brne	.+50     	; 0x1d2 <GPIO_setupPinDirection+0xae>
 1a0:	41 30       	cpi	r20, 0x01	; 1
 1a2:	59 f4       	brne	.+22     	; 0x1ba <GPIO_setupPinDirection+0x96>
 1a4:	27 b1       	in	r18, 0x07	; 7
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <GPIO_setupPinDirection+0x8c>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	6a 95       	dec	r22
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <GPIO_setupPinDirection+0x88>
 1b4:	82 2b       	or	r24, r18
 1b6:	87 b9       	out	0x07, r24	; 7
 1b8:	08 95       	ret
 1ba:	27 b1       	in	r18, 0x07	; 7
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <GPIO_setupPinDirection+0xa2>
 1c2:	88 0f       	add	r24, r24
 1c4:	99 1f       	adc	r25, r25
 1c6:	6a 95       	dec	r22
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <GPIO_setupPinDirection+0x9e>
 1ca:	80 95       	com	r24
 1cc:	82 23       	and	r24, r18
 1ce:	87 b9       	out	0x07, r24	; 7
 1d0:	08 95       	ret
 1d2:	83 30       	cpi	r24, 0x03	; 3
 1d4:	c9 f4       	brne	.+50     	; 0x208 <GPIO_setupPinDirection+0xe4>
 1d6:	41 30       	cpi	r20, 0x01	; 1
 1d8:	59 f4       	brne	.+22     	; 0x1f0 <GPIO_setupPinDirection+0xcc>
 1da:	2a b1       	in	r18, 0x0a	; 10
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <GPIO_setupPinDirection+0xc2>
 1e2:	88 0f       	add	r24, r24
 1e4:	99 1f       	adc	r25, r25
 1e6:	6a 95       	dec	r22
 1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <GPIO_setupPinDirection+0xbe>
 1ea:	82 2b       	or	r24, r18
 1ec:	8a b9       	out	0x0a, r24	; 10
 1ee:	08 95       	ret
 1f0:	2a b1       	in	r18, 0x0a	; 10
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	02 c0       	rjmp	.+4      	; 0x1fc <GPIO_setupPinDirection+0xd8>
 1f8:	88 0f       	add	r24, r24
 1fa:	99 1f       	adc	r25, r25
 1fc:	6a 95       	dec	r22
 1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <GPIO_setupPinDirection+0xd4>
 200:	80 95       	com	r24
 202:	82 23       	and	r24, r18
 204:	8a b9       	out	0x0a, r24	; 10
 206:	08 95       	ret
 208:	84 30       	cpi	r24, 0x04	; 4
 20a:	c9 f4       	brne	.+50     	; 0x23e <GPIO_setupPinDirection+0x11a>
 20c:	41 30       	cpi	r20, 0x01	; 1
 20e:	59 f4       	brne	.+22     	; 0x226 <GPIO_setupPinDirection+0x102>
 210:	2d b1       	in	r18, 0x0d	; 13
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	02 c0       	rjmp	.+4      	; 0x21c <GPIO_setupPinDirection+0xf8>
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	6a 95       	dec	r22
 21e:	e2 f7       	brpl	.-8      	; 0x218 <GPIO_setupPinDirection+0xf4>
 220:	82 2b       	or	r24, r18
 222:	8d b9       	out	0x0d, r24	; 13
 224:	08 95       	ret
 226:	2d b1       	in	r18, 0x0d	; 13
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	02 c0       	rjmp	.+4      	; 0x232 <GPIO_setupPinDirection+0x10e>
 22e:	88 0f       	add	r24, r24
 230:	99 1f       	adc	r25, r25
 232:	6a 95       	dec	r22
 234:	e2 f7       	brpl	.-8      	; 0x22e <GPIO_setupPinDirection+0x10a>
 236:	80 95       	com	r24
 238:	82 23       	and	r24, r18
 23a:	8d b9       	out	0x0d, r24	; 13
 23c:	08 95       	ret
 23e:	85 30       	cpi	r24, 0x05	; 5
 240:	c9 f4       	brne	.+50     	; 0x274 <GPIO_setupPinDirection+0x150>
 242:	41 30       	cpi	r20, 0x01	; 1
 244:	59 f4       	brne	.+22     	; 0x25c <GPIO_setupPinDirection+0x138>
 246:	20 b3       	in	r18, 0x10	; 16
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	02 c0       	rjmp	.+4      	; 0x252 <GPIO_setupPinDirection+0x12e>
 24e:	88 0f       	add	r24, r24
 250:	99 1f       	adc	r25, r25
 252:	6a 95       	dec	r22
 254:	e2 f7       	brpl	.-8      	; 0x24e <GPIO_setupPinDirection+0x12a>
 256:	82 2b       	or	r24, r18
 258:	80 bb       	out	0x10, r24	; 16
 25a:	08 95       	ret
 25c:	20 b3       	in	r18, 0x10	; 16
 25e:	81 e0       	ldi	r24, 0x01	; 1
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	02 c0       	rjmp	.+4      	; 0x268 <GPIO_setupPinDirection+0x144>
 264:	88 0f       	add	r24, r24
 266:	99 1f       	adc	r25, r25
 268:	6a 95       	dec	r22
 26a:	e2 f7       	brpl	.-8      	; 0x264 <GPIO_setupPinDirection+0x140>
 26c:	80 95       	com	r24
 26e:	82 23       	and	r24, r18
 270:	80 bb       	out	0x10, r24	; 16
 272:	08 95       	ret
 274:	86 30       	cpi	r24, 0x06	; 6
 276:	c9 f4       	brne	.+50     	; 0x2aa <GPIO_setupPinDirection+0x186>
 278:	41 30       	cpi	r20, 0x01	; 1
 27a:	59 f4       	brne	.+22     	; 0x292 <GPIO_setupPinDirection+0x16e>
 27c:	23 b3       	in	r18, 0x13	; 19
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	02 c0       	rjmp	.+4      	; 0x288 <GPIO_setupPinDirection+0x164>
 284:	88 0f       	add	r24, r24
 286:	99 1f       	adc	r25, r25
 288:	6a 95       	dec	r22
 28a:	e2 f7       	brpl	.-8      	; 0x284 <GPIO_setupPinDirection+0x160>
 28c:	82 2b       	or	r24, r18
 28e:	83 bb       	out	0x13, r24	; 19
 290:	08 95       	ret
 292:	23 b3       	in	r18, 0x13	; 19
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	02 c0       	rjmp	.+4      	; 0x29e <GPIO_setupPinDirection+0x17a>
 29a:	88 0f       	add	r24, r24
 29c:	99 1f       	adc	r25, r25
 29e:	6a 95       	dec	r22
 2a0:	e2 f7       	brpl	.-8      	; 0x29a <GPIO_setupPinDirection+0x176>
 2a2:	80 95       	com	r24
 2a4:	82 23       	and	r24, r18
 2a6:	83 bb       	out	0x13, r24	; 19
 2a8:	08 95       	ret
 2aa:	87 30       	cpi	r24, 0x07	; 7
 2ac:	e9 f4       	brne	.+58     	; 0x2e8 <GPIO_setupPinDirection+0x1c4>
 2ae:	41 30       	cpi	r20, 0x01	; 1
 2b0:	69 f4       	brne	.+26     	; 0x2cc <GPIO_setupPinDirection+0x1a8>
 2b2:	e1 e0       	ldi	r30, 0x01	; 1
 2b4:	f1 e0       	ldi	r31, 0x01	; 1
 2b6:	20 81       	ld	r18, Z
 2b8:	81 e0       	ldi	r24, 0x01	; 1
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	02 c0       	rjmp	.+4      	; 0x2c2 <GPIO_setupPinDirection+0x19e>
 2be:	88 0f       	add	r24, r24
 2c0:	99 1f       	adc	r25, r25
 2c2:	6a 95       	dec	r22
 2c4:	e2 f7       	brpl	.-8      	; 0x2be <GPIO_setupPinDirection+0x19a>
 2c6:	82 2b       	or	r24, r18
 2c8:	80 83       	st	Z, r24
 2ca:	08 95       	ret
 2cc:	e1 e0       	ldi	r30, 0x01	; 1
 2ce:	f1 e0       	ldi	r31, 0x01	; 1
 2d0:	20 81       	ld	r18, Z
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <GPIO_setupPinDirection+0x1b8>
 2d8:	88 0f       	add	r24, r24
 2da:	99 1f       	adc	r25, r25
 2dc:	6a 95       	dec	r22
 2de:	e2 f7       	brpl	.-8      	; 0x2d8 <GPIO_setupPinDirection+0x1b4>
 2e0:	80 95       	com	r24
 2e2:	82 23       	and	r24, r18
 2e4:	80 83       	st	Z, r24
 2e6:	08 95       	ret
 2e8:	88 30       	cpi	r24, 0x08	; 8
 2ea:	e9 f4       	brne	.+58     	; 0x326 <GPIO_setupPinDirection+0x202>
 2ec:	41 30       	cpi	r20, 0x01	; 1
 2ee:	69 f4       	brne	.+26     	; 0x30a <GPIO_setupPinDirection+0x1e6>
 2f0:	e4 e0       	ldi	r30, 0x04	; 4
 2f2:	f1 e0       	ldi	r31, 0x01	; 1
 2f4:	20 81       	ld	r18, Z
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	02 c0       	rjmp	.+4      	; 0x300 <GPIO_setupPinDirection+0x1dc>
 2fc:	88 0f       	add	r24, r24
 2fe:	99 1f       	adc	r25, r25
 300:	6a 95       	dec	r22
 302:	e2 f7       	brpl	.-8      	; 0x2fc <GPIO_setupPinDirection+0x1d8>
 304:	82 2b       	or	r24, r18
 306:	80 83       	st	Z, r24
 308:	08 95       	ret
 30a:	e4 e0       	ldi	r30, 0x04	; 4
 30c:	f1 e0       	ldi	r31, 0x01	; 1
 30e:	20 81       	ld	r18, Z
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	02 c0       	rjmp	.+4      	; 0x31a <GPIO_setupPinDirection+0x1f6>
 316:	88 0f       	add	r24, r24
 318:	99 1f       	adc	r25, r25
 31a:	6a 95       	dec	r22
 31c:	e2 f7       	brpl	.-8      	; 0x316 <GPIO_setupPinDirection+0x1f2>
 31e:	80 95       	com	r24
 320:	82 23       	and	r24, r18
 322:	80 83       	st	Z, r24
 324:	08 95       	ret
 326:	89 30       	cpi	r24, 0x09	; 9
 328:	e9 f4       	brne	.+58     	; 0x364 <GPIO_setupPinDirection+0x240>
 32a:	41 30       	cpi	r20, 0x01	; 1
 32c:	69 f4       	brne	.+26     	; 0x348 <GPIO_setupPinDirection+0x224>
 32e:	e7 e0       	ldi	r30, 0x07	; 7
 330:	f1 e0       	ldi	r31, 0x01	; 1
 332:	20 81       	ld	r18, Z
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	02 c0       	rjmp	.+4      	; 0x33e <GPIO_setupPinDirection+0x21a>
 33a:	88 0f       	add	r24, r24
 33c:	99 1f       	adc	r25, r25
 33e:	6a 95       	dec	r22
 340:	e2 f7       	brpl	.-8      	; 0x33a <GPIO_setupPinDirection+0x216>
 342:	82 2b       	or	r24, r18
 344:	80 83       	st	Z, r24
 346:	08 95       	ret
 348:	e7 e0       	ldi	r30, 0x07	; 7
 34a:	f1 e0       	ldi	r31, 0x01	; 1
 34c:	20 81       	ld	r18, Z
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	02 c0       	rjmp	.+4      	; 0x358 <GPIO_setupPinDirection+0x234>
 354:	88 0f       	add	r24, r24
 356:	99 1f       	adc	r25, r25
 358:	6a 95       	dec	r22
 35a:	e2 f7       	brpl	.-8      	; 0x354 <GPIO_setupPinDirection+0x230>
 35c:	80 95       	com	r24
 35e:	82 23       	and	r24, r18
 360:	80 83       	st	Z, r24
 362:	08 95       	ret
 364:	8a 30       	cpi	r24, 0x0A	; 10
 366:	e1 f4       	brne	.+56     	; 0x3a0 <GPIO_setupPinDirection+0x27c>
 368:	41 30       	cpi	r20, 0x01	; 1
 36a:	69 f4       	brne	.+26     	; 0x386 <GPIO_setupPinDirection+0x262>
 36c:	ea e0       	ldi	r30, 0x0A	; 10
 36e:	f1 e0       	ldi	r31, 0x01	; 1
 370:	20 81       	ld	r18, Z
 372:	81 e0       	ldi	r24, 0x01	; 1
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	02 c0       	rjmp	.+4      	; 0x37c <GPIO_setupPinDirection+0x258>
 378:	88 0f       	add	r24, r24
 37a:	99 1f       	adc	r25, r25
 37c:	6a 95       	dec	r22
 37e:	e2 f7       	brpl	.-8      	; 0x378 <GPIO_setupPinDirection+0x254>
 380:	82 2b       	or	r24, r18
 382:	80 83       	st	Z, r24
 384:	08 95       	ret
 386:	ea e0       	ldi	r30, 0x0A	; 10
 388:	f1 e0       	ldi	r31, 0x01	; 1
 38a:	20 81       	ld	r18, Z
 38c:	81 e0       	ldi	r24, 0x01	; 1
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	02 c0       	rjmp	.+4      	; 0x396 <GPIO_setupPinDirection+0x272>
 392:	88 0f       	add	r24, r24
 394:	99 1f       	adc	r25, r25
 396:	6a 95       	dec	r22
 398:	e2 f7       	brpl	.-8      	; 0x392 <GPIO_setupPinDirection+0x26e>
 39a:	80 95       	com	r24
 39c:	82 23       	and	r24, r18
 39e:	80 83       	st	Z, r24
 3a0:	08 95       	ret

000003a2 <GPIO_writePin>:
 3a2:	68 30       	cpi	r22, 0x08	; 8
 3a4:	08 f0       	brcs	.+2      	; 0x3a8 <GPIO_writePin+0x6>
 3a6:	3b c1       	rjmp	.+630    	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 3a8:	8b 30       	cpi	r24, 0x0B	; 11
 3aa:	08 f0       	brcs	.+2      	; 0x3ae <GPIO_writePin+0xc>
 3ac:	38 c1       	rjmp	.+624    	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 3ae:	81 11       	cpse	r24, r1
 3b0:	19 c0       	rjmp	.+50     	; 0x3e4 <GPIO_writePin+0x42>
 3b2:	41 30       	cpi	r20, 0x01	; 1
 3b4:	59 f4       	brne	.+22     	; 0x3cc <GPIO_writePin+0x2a>
 3b6:	22 b1       	in	r18, 0x02	; 2
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <GPIO_writePin+0x20>
 3be:	88 0f       	add	r24, r24
 3c0:	99 1f       	adc	r25, r25
 3c2:	6a 95       	dec	r22
 3c4:	e2 f7       	brpl	.-8      	; 0x3be <GPIO_writePin+0x1c>
 3c6:	82 2b       	or	r24, r18
 3c8:	82 b9       	out	0x02, r24	; 2
 3ca:	08 95       	ret
 3cc:	22 b1       	in	r18, 0x02	; 2
 3ce:	81 e0       	ldi	r24, 0x01	; 1
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	02 c0       	rjmp	.+4      	; 0x3d8 <GPIO_writePin+0x36>
 3d4:	88 0f       	add	r24, r24
 3d6:	99 1f       	adc	r25, r25
 3d8:	6a 95       	dec	r22
 3da:	e2 f7       	brpl	.-8      	; 0x3d4 <GPIO_writePin+0x32>
 3dc:	80 95       	com	r24
 3de:	82 23       	and	r24, r18
 3e0:	82 b9       	out	0x02, r24	; 2
 3e2:	08 95       	ret
 3e4:	81 30       	cpi	r24, 0x01	; 1
 3e6:	c9 f4       	brne	.+50     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3e8:	41 30       	cpi	r20, 0x01	; 1
 3ea:	59 f4       	brne	.+22     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3ec:	25 b1       	in	r18, 0x05	; 5
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <GPIO_writePin+0x56>
 3f4:	88 0f       	add	r24, r24
 3f6:	99 1f       	adc	r25, r25
 3f8:	6a 95       	dec	r22
 3fa:	e2 f7       	brpl	.-8      	; 0x3f4 <GPIO_writePin+0x52>
 3fc:	82 2b       	or	r24, r18
 3fe:	85 b9       	out	0x05, r24	; 5
 400:	08 95       	ret
 402:	25 b1       	in	r18, 0x05	; 5
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	02 c0       	rjmp	.+4      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 40a:	88 0f       	add	r24, r24
 40c:	99 1f       	adc	r25, r25
 40e:	6a 95       	dec	r22
 410:	e2 f7       	brpl	.-8      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 412:	80 95       	com	r24
 414:	82 23       	and	r24, r18
 416:	85 b9       	out	0x05, r24	; 5
 418:	08 95       	ret
 41a:	82 30       	cpi	r24, 0x02	; 2
 41c:	c9 f4       	brne	.+50     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 41e:	41 30       	cpi	r20, 0x01	; 1
 420:	59 f4       	brne	.+22     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 422:	28 b1       	in	r18, 0x08	; 8
 424:	81 e0       	ldi	r24, 0x01	; 1
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	02 c0       	rjmp	.+4      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 42a:	88 0f       	add	r24, r24
 42c:	99 1f       	adc	r25, r25
 42e:	6a 95       	dec	r22
 430:	e2 f7       	brpl	.-8      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 432:	82 2b       	or	r24, r18
 434:	88 b9       	out	0x08, r24	; 8
 436:	08 95       	ret
 438:	28 b1       	in	r18, 0x08	; 8
 43a:	81 e0       	ldi	r24, 0x01	; 1
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	02 c0       	rjmp	.+4      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 440:	88 0f       	add	r24, r24
 442:	99 1f       	adc	r25, r25
 444:	6a 95       	dec	r22
 446:	e2 f7       	brpl	.-8      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 448:	80 95       	com	r24
 44a:	82 23       	and	r24, r18
 44c:	88 b9       	out	0x08, r24	; 8
 44e:	08 95       	ret
 450:	83 30       	cpi	r24, 0x03	; 3
 452:	c9 f4       	brne	.+50     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 454:	41 30       	cpi	r20, 0x01	; 1
 456:	59 f4       	brne	.+22     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 458:	2b b1       	in	r18, 0x0b	; 11
 45a:	81 e0       	ldi	r24, 0x01	; 1
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	02 c0       	rjmp	.+4      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 460:	88 0f       	add	r24, r24
 462:	99 1f       	adc	r25, r25
 464:	6a 95       	dec	r22
 466:	e2 f7       	brpl	.-8      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 468:	82 2b       	or	r24, r18
 46a:	8b b9       	out	0x0b, r24	; 11
 46c:	08 95       	ret
 46e:	2b b1       	in	r18, 0x0b	; 11
 470:	81 e0       	ldi	r24, 0x01	; 1
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	02 c0       	rjmp	.+4      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 476:	88 0f       	add	r24, r24
 478:	99 1f       	adc	r25, r25
 47a:	6a 95       	dec	r22
 47c:	e2 f7       	brpl	.-8      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 47e:	80 95       	com	r24
 480:	82 23       	and	r24, r18
 482:	8b b9       	out	0x0b, r24	; 11
 484:	08 95       	ret
 486:	84 30       	cpi	r24, 0x04	; 4
 488:	c9 f4       	brne	.+50     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 48a:	41 30       	cpi	r20, 0x01	; 1
 48c:	59 f4       	brne	.+22     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 48e:	2e b1       	in	r18, 0x0e	; 14
 490:	81 e0       	ldi	r24, 0x01	; 1
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	02 c0       	rjmp	.+4      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 496:	88 0f       	add	r24, r24
 498:	99 1f       	adc	r25, r25
 49a:	6a 95       	dec	r22
 49c:	e2 f7       	brpl	.-8      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 49e:	82 2b       	or	r24, r18
 4a0:	8e b9       	out	0x0e, r24	; 14
 4a2:	08 95       	ret
 4a4:	2e b1       	in	r18, 0x0e	; 14
 4a6:	81 e0       	ldi	r24, 0x01	; 1
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	02 c0       	rjmp	.+4      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4ac:	88 0f       	add	r24, r24
 4ae:	99 1f       	adc	r25, r25
 4b0:	6a 95       	dec	r22
 4b2:	e2 f7       	brpl	.-8      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4b4:	80 95       	com	r24
 4b6:	82 23       	and	r24, r18
 4b8:	8e b9       	out	0x0e, r24	; 14
 4ba:	08 95       	ret
 4bc:	85 30       	cpi	r24, 0x05	; 5
 4be:	c9 f4       	brne	.+50     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4c0:	41 30       	cpi	r20, 0x01	; 1
 4c2:	59 f4       	brne	.+22     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4c4:	21 b3       	in	r18, 0x11	; 17
 4c6:	81 e0       	ldi	r24, 0x01	; 1
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	02 c0       	rjmp	.+4      	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4cc:	88 0f       	add	r24, r24
 4ce:	99 1f       	adc	r25, r25
 4d0:	6a 95       	dec	r22
 4d2:	e2 f7       	brpl	.-8      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4d4:	82 2b       	or	r24, r18
 4d6:	81 bb       	out	0x11, r24	; 17
 4d8:	08 95       	ret
 4da:	21 b3       	in	r18, 0x11	; 17
 4dc:	81 e0       	ldi	r24, 0x01	; 1
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	02 c0       	rjmp	.+4      	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4e2:	88 0f       	add	r24, r24
 4e4:	99 1f       	adc	r25, r25
 4e6:	6a 95       	dec	r22
 4e8:	e2 f7       	brpl	.-8      	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4ea:	80 95       	com	r24
 4ec:	82 23       	and	r24, r18
 4ee:	81 bb       	out	0x11, r24	; 17
 4f0:	08 95       	ret
 4f2:	86 30       	cpi	r24, 0x06	; 6
 4f4:	c9 f4       	brne	.+50     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 4f6:	41 30       	cpi	r20, 0x01	; 1
 4f8:	59 f4       	brne	.+22     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 4fa:	24 b3       	in	r18, 0x14	; 20
 4fc:	81 e0       	ldi	r24, 0x01	; 1
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	02 c0       	rjmp	.+4      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 502:	88 0f       	add	r24, r24
 504:	99 1f       	adc	r25, r25
 506:	6a 95       	dec	r22
 508:	e2 f7       	brpl	.-8      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 50a:	82 2b       	or	r24, r18
 50c:	84 bb       	out	0x14, r24	; 20
 50e:	08 95       	ret
 510:	24 b3       	in	r18, 0x14	; 20
 512:	81 e0       	ldi	r24, 0x01	; 1
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	02 c0       	rjmp	.+4      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 518:	88 0f       	add	r24, r24
 51a:	99 1f       	adc	r25, r25
 51c:	6a 95       	dec	r22
 51e:	e2 f7       	brpl	.-8      	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 520:	80 95       	com	r24
 522:	82 23       	and	r24, r18
 524:	84 bb       	out	0x14, r24	; 20
 526:	08 95       	ret
 528:	87 30       	cpi	r24, 0x07	; 7
 52a:	e9 f4       	brne	.+58     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 52c:	41 30       	cpi	r20, 0x01	; 1
 52e:	69 f4       	brne	.+26     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 530:	e2 e0       	ldi	r30, 0x02	; 2
 532:	f1 e0       	ldi	r31, 0x01	; 1
 534:	20 81       	ld	r18, Z
 536:	81 e0       	ldi	r24, 0x01	; 1
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	02 c0       	rjmp	.+4      	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 53c:	88 0f       	add	r24, r24
 53e:	99 1f       	adc	r25, r25
 540:	6a 95       	dec	r22
 542:	e2 f7       	brpl	.-8      	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 544:	82 2b       	or	r24, r18
 546:	80 83       	st	Z, r24
 548:	08 95       	ret
 54a:	e2 e0       	ldi	r30, 0x02	; 2
 54c:	f1 e0       	ldi	r31, 0x01	; 1
 54e:	20 81       	ld	r18, Z
 550:	81 e0       	ldi	r24, 0x01	; 1
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	02 c0       	rjmp	.+4      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 556:	88 0f       	add	r24, r24
 558:	99 1f       	adc	r25, r25
 55a:	6a 95       	dec	r22
 55c:	e2 f7       	brpl	.-8      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 55e:	80 95       	com	r24
 560:	82 23       	and	r24, r18
 562:	80 83       	st	Z, r24
 564:	08 95       	ret
 566:	88 30       	cpi	r24, 0x08	; 8
 568:	e9 f4       	brne	.+58     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 56a:	41 30       	cpi	r20, 0x01	; 1
 56c:	69 f4       	brne	.+26     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 56e:	e5 e0       	ldi	r30, 0x05	; 5
 570:	f1 e0       	ldi	r31, 0x01	; 1
 572:	20 81       	ld	r18, Z
 574:	81 e0       	ldi	r24, 0x01	; 1
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	02 c0       	rjmp	.+4      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 57a:	88 0f       	add	r24, r24
 57c:	99 1f       	adc	r25, r25
 57e:	6a 95       	dec	r22
 580:	e2 f7       	brpl	.-8      	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 582:	82 2b       	or	r24, r18
 584:	80 83       	st	Z, r24
 586:	08 95       	ret
 588:	eb e0       	ldi	r30, 0x0B	; 11
 58a:	f1 e0       	ldi	r31, 0x01	; 1
 58c:	20 81       	ld	r18, Z
 58e:	81 e0       	ldi	r24, 0x01	; 1
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	02 c0       	rjmp	.+4      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 594:	88 0f       	add	r24, r24
 596:	99 1f       	adc	r25, r25
 598:	6a 95       	dec	r22
 59a:	e2 f7       	brpl	.-8      	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 59c:	80 95       	com	r24
 59e:	82 23       	and	r24, r18
 5a0:	80 83       	st	Z, r24
 5a2:	08 95       	ret
 5a4:	89 30       	cpi	r24, 0x09	; 9
 5a6:	e9 f4       	brne	.+58     	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5a8:	41 30       	cpi	r20, 0x01	; 1
 5aa:	69 f4       	brne	.+26     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5ac:	e8 e0       	ldi	r30, 0x08	; 8
 5ae:	f1 e0       	ldi	r31, 0x01	; 1
 5b0:	20 81       	ld	r18, Z
 5b2:	81 e0       	ldi	r24, 0x01	; 1
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	02 c0       	rjmp	.+4      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5b8:	88 0f       	add	r24, r24
 5ba:	99 1f       	adc	r25, r25
 5bc:	6a 95       	dec	r22
 5be:	e2 f7       	brpl	.-8      	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 5c0:	82 2b       	or	r24, r18
 5c2:	80 83       	st	Z, r24
 5c4:	08 95       	ret
 5c6:	e8 e0       	ldi	r30, 0x08	; 8
 5c8:	f1 e0       	ldi	r31, 0x01	; 1
 5ca:	20 81       	ld	r18, Z
 5cc:	81 e0       	ldi	r24, 0x01	; 1
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5d2:	88 0f       	add	r24, r24
 5d4:	99 1f       	adc	r25, r25
 5d6:	6a 95       	dec	r22
 5d8:	e2 f7       	brpl	.-8      	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5da:	80 95       	com	r24
 5dc:	82 23       	and	r24, r18
 5de:	80 83       	st	Z, r24
 5e0:	08 95       	ret
 5e2:	8a 30       	cpi	r24, 0x0A	; 10
 5e4:	e1 f4       	brne	.+56     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 5e6:	41 30       	cpi	r20, 0x01	; 1
 5e8:	69 f4       	brne	.+26     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5ea:	eb e0       	ldi	r30, 0x0B	; 11
 5ec:	f1 e0       	ldi	r31, 0x01	; 1
 5ee:	20 81       	ld	r18, Z
 5f0:	81 e0       	ldi	r24, 0x01	; 1
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	02 c0       	rjmp	.+4      	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5f6:	88 0f       	add	r24, r24
 5f8:	99 1f       	adc	r25, r25
 5fa:	6a 95       	dec	r22
 5fc:	e2 f7       	brpl	.-8      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5fe:	82 2b       	or	r24, r18
 600:	80 83       	st	Z, r24
 602:	08 95       	ret
 604:	eb e0       	ldi	r30, 0x0B	; 11
 606:	f1 e0       	ldi	r31, 0x01	; 1
 608:	20 81       	ld	r18, Z
 60a:	81 e0       	ldi	r24, 0x01	; 1
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	02 c0       	rjmp	.+4      	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 610:	88 0f       	add	r24, r24
 612:	99 1f       	adc	r25, r25
 614:	6a 95       	dec	r22
 616:	e2 f7       	brpl	.-8      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 618:	80 95       	com	r24
 61a:	82 23       	and	r24, r18
 61c:	80 83       	st	Z, r24
 61e:	08 95       	ret

00000620 <GPIO_setupPortDirection>:
{
	/*
	 * Check if the input number is greater than NUM_OF_PORTS value.
	 * In this case the input is not valid port number
	 */
	if(port_num >= NUM_OF_PORTS)
 620:	8b 30       	cpi	r24, 0x0B	; 11
 622:	78 f5       	brcc	.+94     	; 0x682 <GPIO_setupPortDirection+0x62>
		/* Do Nothing */
	}
	else
	{
		/* Setup the port direction as required */
		if(port_num == PORTA_ID)
 624:	81 11       	cpse	r24, r1
 626:	02 c0       	rjmp	.+4      	; 0x62c <GPIO_setupPortDirection+0xc>
		{
			DDRA_REG = direction;
 628:	61 b9       	out	0x01, r22	; 1
 62a:	08 95       	ret
		}
		else if(port_num == PORTB_ID)
 62c:	81 30       	cpi	r24, 0x01	; 1
 62e:	11 f4       	brne	.+4      	; 0x634 <GPIO_setupPortDirection+0x14>
		{
			DDRB_REG = direction;
 630:	64 b9       	out	0x04, r22	; 4
 632:	08 95       	ret
		}
		else if(port_num == PORTC_ID)
 634:	82 30       	cpi	r24, 0x02	; 2
 636:	11 f4       	brne	.+4      	; 0x63c <GPIO_setupPortDirection+0x1c>
		{
			DDRC_REG = direction;
 638:	67 b9       	out	0x07, r22	; 7
 63a:	08 95       	ret
		}
		else if(port_num == PORTD_ID)
 63c:	83 30       	cpi	r24, 0x03	; 3
 63e:	11 f4       	brne	.+4      	; 0x644 <GPIO_setupPortDirection+0x24>
		{
			DDRD_REG = direction;
 640:	6a b9       	out	0x0a, r22	; 10
 642:	08 95       	ret
		}
		else if(port_num == PORTE_ID)
 644:	84 30       	cpi	r24, 0x04	; 4
 646:	11 f4       	brne	.+4      	; 0x64c <GPIO_setupPortDirection+0x2c>
		{
			DDRE_REG = direction;
 648:	6d b9       	out	0x0d, r22	; 13
 64a:	08 95       	ret
		}
		else if(port_num == PORTF_ID)
 64c:	85 30       	cpi	r24, 0x05	; 5
 64e:	11 f4       	brne	.+4      	; 0x654 <GPIO_setupPortDirection+0x34>
		{
			DDRF_REG = direction;
 650:	60 bb       	out	0x10, r22	; 16
 652:	08 95       	ret
		}
		else if(port_num==PORTG_ID)
 654:	86 30       	cpi	r24, 0x06	; 6
 656:	11 f4       	brne	.+4      	; 0x65c <GPIO_setupPortDirection+0x3c>
		{
			DDRG_REG = direction;
 658:	63 bb       	out	0x13, r22	; 19
 65a:	08 95       	ret
		}
		else if(port_num == PORTH_ID)
 65c:	87 30       	cpi	r24, 0x07	; 7
 65e:	19 f4       	brne	.+6      	; 0x666 <GPIO_setupPortDirection+0x46>
		{
			DDRH_REG = direction;
 660:	60 93 01 01 	sts	0x0101, r22	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
 664:	08 95       	ret
		}
		else if(port_num == PORTJ_ID)
 666:	88 30       	cpi	r24, 0x08	; 8
 668:	19 f4       	brne	.+6      	; 0x670 <GPIO_setupPortDirection+0x50>
		{
			DDRJ_REG = direction;
 66a:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
 66e:	08 95       	ret
		}
		else if(port_num == PORTK_ID)
 670:	89 30       	cpi	r24, 0x09	; 9
 672:	19 f4       	brne	.+6      	; 0x67a <GPIO_setupPortDirection+0x5a>
		{
			DDRK_REG = direction;
 674:	60 93 07 01 	sts	0x0107, r22	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 678:	08 95       	ret
		}
		else if(port_num == PORTL_ID)
 67a:	8a 30       	cpi	r24, 0x0A	; 10
 67c:	11 f4       	brne	.+4      	; 0x682 <GPIO_setupPortDirection+0x62>
		{
			DDRL_REG = direction;
 67e:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
 682:	08 95       	ret

00000684 <GPIO_writePort>:
	
	/*
	 * Check if the input number is greater than NUM_OF_PORTS value.
	 * In this case the input is not valid port number
	 */
	if(port_num >= NUM_OF_PORTS)
 684:	8b 30       	cpi	r24, 0x0B	; 11
 686:	78 f5       	brcc	.+94     	; 0x6e6 <GPIO_writePort+0x62>
		/* Do Nothing */
	}
	else
	{
		/* Write the port value as required */
		if(port_num == PORTA_ID)
 688:	81 11       	cpse	r24, r1
 68a:	02 c0       	rjmp	.+4      	; 0x690 <GPIO_writePort+0xc>
		{
			PORTA_REG = value;
 68c:	62 b9       	out	0x02, r22	; 2
 68e:	08 95       	ret
		}
		else if(port_num == PORTB_ID)
 690:	81 30       	cpi	r24, 0x01	; 1
 692:	11 f4       	brne	.+4      	; 0x698 <GPIO_writePort+0x14>
		{
			PORTB_REG = value;
 694:	65 b9       	out	0x05, r22	; 5
 696:	08 95       	ret
		}
		else if(port_num == PORTC_ID)
 698:	82 30       	cpi	r24, 0x02	; 2
 69a:	11 f4       	brne	.+4      	; 0x6a0 <GPIO_writePort+0x1c>
		{
			PORTC_REG = value;
 69c:	68 b9       	out	0x08, r22	; 8
 69e:	08 95       	ret
		}
		else if(port_num == PORTD_ID)
 6a0:	83 30       	cpi	r24, 0x03	; 3
 6a2:	11 f4       	brne	.+4      	; 0x6a8 <GPIO_writePort+0x24>
		{
			PORTD_REG = value;
 6a4:	6b b9       	out	0x0b, r22	; 11
 6a6:	08 95       	ret
		}
		else if(port_num == PORTE_ID)
 6a8:	84 30       	cpi	r24, 0x04	; 4
 6aa:	11 f4       	brne	.+4      	; 0x6b0 <GPIO_writePort+0x2c>
		{
			PORTE_REG = value;
 6ac:	6e b9       	out	0x0e, r22	; 14
 6ae:	08 95       	ret
		}
		else if(port_num == PORTF_ID)
 6b0:	85 30       	cpi	r24, 0x05	; 5
 6b2:	11 f4       	brne	.+4      	; 0x6b8 <GPIO_writePort+0x34>
		{
			PORTF_REG = value;
 6b4:	61 bb       	out	0x11, r22	; 17
 6b6:	08 95       	ret
		}
		else if(port_num == PORTG_ID)
 6b8:	86 30       	cpi	r24, 0x06	; 6
 6ba:	11 f4       	brne	.+4      	; 0x6c0 <GPIO_writePort+0x3c>
		{
			PORTG_REG = value;
 6bc:	64 bb       	out	0x14, r22	; 20
 6be:	08 95       	ret
		}
		else if(port_num == PORTH_ID)
 6c0:	87 30       	cpi	r24, 0x07	; 7
 6c2:	19 f4       	brne	.+6      	; 0x6ca <GPIO_writePort+0x46>
		{
			PORTH_REG = value;
 6c4:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
 6c8:	08 95       	ret
		}
		else if(port_num == PORTJ_ID)
 6ca:	88 30       	cpi	r24, 0x08	; 8
 6cc:	19 f4       	brne	.+6      	; 0x6d4 <GPIO_writePort+0x50>
		{
			PORTJ_REG = value;
 6ce:	60 93 05 01 	sts	0x0105, r22	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
 6d2:	08 95       	ret
		}
		else if(port_num == PORTK_ID)
 6d4:	89 30       	cpi	r24, 0x09	; 9
 6d6:	19 f4       	brne	.+6      	; 0x6de <GPIO_writePort+0x5a>
		{
			PORTK_REG = value;
 6d8:	60 93 08 01 	sts	0x0108, r22	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 6dc:	08 95       	ret
		}
		else if(port_num == PORTL_ID)
 6de:	8a 30       	cpi	r24, 0x0A	; 10
 6e0:	11 f4       	brne	.+4      	; 0x6e6 <GPIO_writePort+0x62>
		{
			PORTL_REG = value;
 6e2:	60 93 0b 01 	sts	0x010B, r22	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
 6e6:	08 95       	ret

000006e8 <LCD_sendCommand>:
/*
 * Description :
 * Send the required command to the screen
 */
void LCD_sendCommand(uint8 command)
{
 6e8:	cf 93       	push	r28
 6ea:	c8 2f       	mov	r28, r24
	GPIO_writePin(LCD_RS_PORT_ID,LCD_RS_PIN_ID,LOGIC_LOW); /* Instruction Mode RS=0 */
 6ec:	40 e0       	ldi	r20, 0x00	; 0
 6ee:	64 e0       	ldi	r22, 0x04	; 4
 6f0:	83 e0       	ldi	r24, 0x03	; 3
 6f2:	57 de       	rcall	.-850    	; 0x3a2 <GPIO_writePin>
	GPIO_writePin(LCD_RW_PORT_ID,LCD_RW_PIN_ID,LOGIC_LOW); /* write data to LCD so RW=0 */
 6f4:	40 e0       	ldi	r20, 0x00	; 0
 6f6:	65 e0       	ldi	r22, 0x05	; 5
 6f8:	83 e0       	ldi	r24, 0x03	; 3
 6fa:	53 de       	rcall	.-858    	; 0x3a2 <GPIO_writePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 6fc:	89 ef       	ldi	r24, 0xF9	; 249
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	01 97       	sbiw	r24, 0x01	; 1
 702:	f1 f7       	brne	.-4      	; 0x700 <LCD_sendCommand+0x18>
 704:	00 c0       	rjmp	.+0      	; 0x706 <LCD_sendCommand+0x1e>
 706:	00 00       	nop
	_delay_ms(1); /* delay for processing Tas = 50ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_HIGH); /* Enable LCD E=1 */
 708:	41 e0       	ldi	r20, 0x01	; 1
 70a:	66 e0       	ldi	r22, 0x06	; 6
 70c:	83 e0       	ldi	r24, 0x03	; 3
 70e:	49 de       	rcall	.-878    	; 0x3a2 <GPIO_writePin>
 710:	89 ef       	ldi	r24, 0xF9	; 249
 712:	90 e0       	ldi	r25, 0x00	; 0
 714:	01 97       	sbiw	r24, 0x01	; 1
 716:	f1 f7       	brne	.-4      	; 0x714 <LCD_sendCommand+0x2c>
 718:	00 c0       	rjmp	.+0      	; 0x71a <LCD_sendCommand+0x32>
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */
	GPIO_writePort(LCD_DATA_PORT_ID,command); /* out the required command to the data bus D0 --> D7 */
 71a:	00 00       	nop
 71c:	6c 2f       	mov	r22, r28
 71e:	82 e0       	ldi	r24, 0x02	; 2
 720:	b1 df       	rcall	.-158    	; 0x684 <GPIO_writePort>
 722:	89 ef       	ldi	r24, 0xF9	; 249
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	01 97       	sbiw	r24, 0x01	; 1
 728:	f1 f7       	brne	.-4      	; 0x726 <LCD_sendCommand+0x3e>
 72a:	00 c0       	rjmp	.+0      	; 0x72c <LCD_sendCommand+0x44>
	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_LOW); /* Disable LCD E=0 */
 72c:	00 00       	nop
 72e:	40 e0       	ldi	r20, 0x00	; 0
 730:	66 e0       	ldi	r22, 0x06	; 6
 732:	83 e0       	ldi	r24, 0x03	; 3
 734:	36 de       	rcall	.-916    	; 0x3a2 <GPIO_writePin>
 736:	89 ef       	ldi	r24, 0xF9	; 249
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	01 97       	sbiw	r24, 0x01	; 1
 73c:	f1 f7       	brne	.-4      	; 0x73a <LCD_sendCommand+0x52>
 73e:	00 c0       	rjmp	.+0      	; 0x740 <LCD_sendCommand+0x58>
 740:	00 00       	nop
	_delay_ms(1); /* delay for processing Th = 13ns */
}
 742:	cf 91       	pop	r28
 744:	08 95       	ret

00000746 <LCD_init>:
 * 2. Setup the LCD Data Mode 4-bits or 8-bits.
 */
void LCD_init(void)
{
	/* Configure the direction for RS, RW and E pins as output pins */
	GPIO_setupPinDirection(LCD_RS_PORT_ID,LCD_RS_PIN_ID,PIN_OUTPUT);
 746:	41 e0       	ldi	r20, 0x01	; 1
 748:	64 e0       	ldi	r22, 0x04	; 4
 74a:	83 e0       	ldi	r24, 0x03	; 3
 74c:	eb dc       	rcall	.-1578   	; 0x124 <GPIO_setupPinDirection>
	GPIO_setupPinDirection(LCD_RW_PORT_ID,LCD_RW_PIN_ID,PIN_OUTPUT);
 74e:	41 e0       	ldi	r20, 0x01	; 1
 750:	65 e0       	ldi	r22, 0x05	; 5
 752:	83 e0       	ldi	r24, 0x03	; 3
 754:	e7 dc       	rcall	.-1586   	; 0x124 <GPIO_setupPinDirection>
	GPIO_setupPinDirection(LCD_E_PORT_ID,LCD_E_PIN_ID,PIN_OUTPUT);
 756:	41 e0       	ldi	r20, 0x01	; 1
 758:	66 e0       	ldi	r22, 0x06	; 6
 75a:	83 e0       	ldi	r24, 0x03	; 3
 75c:	e3 dc       	rcall	.-1594   	; 0x124 <GPIO_setupPinDirection>

	/* Configure the data port as output port */
	GPIO_setupPortDirection(LCD_DATA_PORT_ID,PORT_OUTPUT);
 75e:	6f ef       	ldi	r22, 0xFF	; 255
 760:	82 e0       	ldi	r24, 0x02	; 2
 762:	5e df       	rcall	.-324    	; 0x620 <GPIO_setupPortDirection>

	LCD_sendCommand(LCD_TWO_LINES_EIGHT_BITS_MODE); /* use 2-line lcd + 8-bit Data Mode + 5*7 dot display Mode */
 764:	88 e3       	ldi	r24, 0x38	; 56
 766:	c0 df       	rcall	.-128    	; 0x6e8 <LCD_sendCommand>
	
	LCD_sendCommand(LCD_CURSOR_OFF); /* cursor off */
 768:	8c e0       	ldi	r24, 0x0C	; 12
 76a:	be df       	rcall	.-132    	; 0x6e8 <LCD_sendCommand>
 76c:	81 e0       	ldi	r24, 0x01	; 1
	
	LCD_sendCommand(LCD_CLEAR_COMMAND); /* clear LCD at the beginning */
 76e:	bc cf       	rjmp	.-136    	; 0x6e8 <LCD_sendCommand>
 770:	08 95       	ret

00000772 <LCD_displayCharacter>:
 772:	cf 93       	push	r28
 774:	c8 2f       	mov	r28, r24
 * Description :
 * Display the required character on the screen
 */
void LCD_displayCharacter(uint8 data)
{
	GPIO_writePin(LCD_RS_PORT_ID,LCD_RS_PIN_ID,LOGIC_HIGH); /* Data Mode RS=1 */
 776:	41 e0       	ldi	r20, 0x01	; 1
 778:	64 e0       	ldi	r22, 0x04	; 4
 77a:	83 e0       	ldi	r24, 0x03	; 3
 77c:	12 de       	rcall	.-988    	; 0x3a2 <GPIO_writePin>
	GPIO_writePin(LCD_RW_PORT_ID,LCD_RW_PIN_ID,LOGIC_LOW); /* write data to LCD so RW=0 */
 77e:	40 e0       	ldi	r20, 0x00	; 0
 780:	65 e0       	ldi	r22, 0x05	; 5
 782:	83 e0       	ldi	r24, 0x03	; 3
 784:	0e de       	rcall	.-996    	; 0x3a2 <GPIO_writePin>
 786:	89 ef       	ldi	r24, 0xF9	; 249
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	01 97       	sbiw	r24, 0x01	; 1
 78c:	f1 f7       	brne	.-4      	; 0x78a <LCD_displayCharacter+0x18>
 78e:	00 c0       	rjmp	.+0      	; 0x790 <LCD_displayCharacter+0x1e>
 790:	00 00       	nop
	_delay_ms(1); /* delay for processing Tas = 50ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_HIGH); /* Enable LCD E=1 */
 792:	41 e0       	ldi	r20, 0x01	; 1
 794:	66 e0       	ldi	r22, 0x06	; 6
 796:	83 e0       	ldi	r24, 0x03	; 3
 798:	04 de       	rcall	.-1016   	; 0x3a2 <GPIO_writePin>
 79a:	89 ef       	ldi	r24, 0xF9	; 249
 79c:	90 e0       	ldi	r25, 0x00	; 0
 79e:	01 97       	sbiw	r24, 0x01	; 1
 7a0:	f1 f7       	brne	.-4      	; 0x79e <LCD_displayCharacter+0x2c>
 7a2:	00 c0       	rjmp	.+0      	; 0x7a4 <LCD_displayCharacter+0x32>
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */
	GPIO_writePort(LCD_DATA_PORT_ID,data); /* out the required command to the data bus D0 --> D7 */
 7a4:	00 00       	nop
 7a6:	6c 2f       	mov	r22, r28
 7a8:	82 e0       	ldi	r24, 0x02	; 2
 7aa:	6c df       	rcall	.-296    	; 0x684 <GPIO_writePort>
 7ac:	89 ef       	ldi	r24, 0xF9	; 249
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	01 97       	sbiw	r24, 0x01	; 1
 7b2:	f1 f7       	brne	.-4      	; 0x7b0 <LCD_displayCharacter+0x3e>
 7b4:	00 c0       	rjmp	.+0      	; 0x7b6 <LCD_displayCharacter+0x44>
	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_LOW); /* Disable LCD E=0 */
 7b6:	00 00       	nop
 7b8:	40 e0       	ldi	r20, 0x00	; 0
 7ba:	66 e0       	ldi	r22, 0x06	; 6
 7bc:	83 e0       	ldi	r24, 0x03	; 3
 7be:	f1 dd       	rcall	.-1054   	; 0x3a2 <GPIO_writePin>
 7c0:	89 ef       	ldi	r24, 0xF9	; 249
 7c2:	90 e0       	ldi	r25, 0x00	; 0
 7c4:	01 97       	sbiw	r24, 0x01	; 1
 7c6:	f1 f7       	brne	.-4      	; 0x7c4 <LCD_displayCharacter+0x52>
 7c8:	00 c0       	rjmp	.+0      	; 0x7ca <LCD_displayCharacter+0x58>
 7ca:	00 00       	nop
	_delay_ms(1); /* delay for processing Th = 13ns */
}
 7cc:	cf 91       	pop	r28
 7ce:	08 95       	ret

000007d0 <LCD_displayString>:
/*
 * Description :
 * Display the required string on the screen
 */
void LCD_displayString(const char *Str)
{
 7d0:	0f 93       	push	r16
 7d2:	1f 93       	push	r17
 7d4:	cf 93       	push	r28
 7d6:	8c 01       	movw	r16, r24
	uint8 i = 0;
 7d8:	c0 e0       	ldi	r28, 0x00	; 0
	while(Str[i] != '\0')
 7da:	02 c0       	rjmp	.+4      	; 0x7e0 <LCD_displayString+0x10>
	{
		LCD_displayCharacter(Str[i]);
 7dc:	ca df       	rcall	.-108    	; 0x772 <LCD_displayCharacter>
		i++;
 7de:	cf 5f       	subi	r28, 0xFF	; 255
 * Display the required string on the screen
 */
void LCD_displayString(const char *Str)
{
	uint8 i = 0;
	while(Str[i] != '\0')
 7e0:	f8 01       	movw	r30, r16
 7e2:	ec 0f       	add	r30, r28
 7e4:	f1 1d       	adc	r31, r1
 7e6:	80 81       	ld	r24, Z
 7e8:	81 11       	cpse	r24, r1
 7ea:	f8 cf       	rjmp	.-16     	; 0x7dc <LCD_displayString+0xc>
	{
		LCD_displayCharacter(*Str);
		Str++;
	}		
	*********************************************************/
}
 7ec:	cf 91       	pop	r28
 7ee:	1f 91       	pop	r17
 7f0:	0f 91       	pop	r16
 7f2:	08 95       	ret

000007f4 <main>:

uint8 str[100];
uint8 received;
int main(void)
{
	UART0_init(); // Initialize UART0 communication
 7f4:	09 d0       	rcall	.+18     	; 0x808 <UART0_init>
	LCD_init();
 7f6:	a7 df       	rcall	.-178    	; 0x746 <LCD_init>
 7f8:	80 e0       	ldi	r24, 0x00	; 0
	LCD_displayString("GPS: ");
 7fa:	92 e0       	ldi	r25, 0x02	; 2
 7fc:	e9 df       	rcall	.-46     	; 0x7d0 <LCD_displayString>
	
	
	while(1)
	{
		received = UART0_ReceiveData();
 7fe:	1b d0       	rcall	.+54     	; 0x836 <UART0_ReceiveData>
 800:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <received>
		LCD_displayCharacter((char)received);
 804:	b6 df       	rcall	.-148    	; 0x772 <LCD_displayCharacter>
 806:	fb cf       	rjmp	.-10     	; 0x7fe <main+0xa>

00000808 <UART0_init>:
 808:	81 e0       	ldi	r24, 0x01	; 1

   
void UART0_Send(uint8 data)
 {   
	  while(BIT_IS_CLEAR(UCSR0A,UDRE0));
	  UDR0=data;  
 80a:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
 80e:	82 e6       	ldi	r24, 0x62	; 98
 810:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
 814:	e2 ec       	ldi	r30, 0xC2	; 194
 816:	f0 e0       	ldi	r31, 0x00	; 0
 818:	80 81       	ld	r24, Z
 81a:	88 60       	ori	r24, 0x08	; 8
 81c:	80 83       	st	Z, r24
 81e:	80 81       	ld	r24, Z
 820:	86 60       	ori	r24, 0x06	; 6
 822:	80 83       	st	Z, r24
 824:	e1 ec       	ldi	r30, 0xC1	; 193
 826:	f0 e0       	ldi	r31, 0x00	; 0
 828:	80 81       	ld	r24, Z
 82a:	80 61       	ori	r24, 0x10	; 16
 82c:	80 83       	st	Z, r24
 82e:	80 81       	ld	r24, Z
 830:	88 60       	ori	r24, 0x08	; 8
 832:	80 83       	st	Z, r24
 834:	08 95       	ret

00000836 <UART0_ReceiveData>:
 }
   
uint8 UART0_ReceiveData(void)
 {
	while(BIT_IS_CLEAR(UCSR0A,RXC0));
 836:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 83a:	88 23       	and	r24, r24
 83c:	e4 f7       	brge	.-8      	; 0x836 <UART0_ReceiveData>
	  return UDR0;
 83e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 }
 842:	08 95       	ret

00000844 <_exit>:
 844:	f8 94       	cli

00000846 <__stop_program>:
 846:	ff cf       	rjmp	.-2      	; 0x846 <__stop_program>
