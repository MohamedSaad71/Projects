
uarttest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800200  0000093e  000009b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000093e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000009c8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009f8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  00000a38  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000176d  00000000  00000000  00000b18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000f29  00000000  00000000  00002285  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c72  00000000  00000000  000031ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001c8  00000000  00000000  00003e20  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000007d7  00000000  00000000  00003fe8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000e35  00000000  00000000  000047bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  000055f4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	86 c0       	rjmp	.+268    	; 0x112 <__bad_interrupt>
   6:	00 00       	nop
   8:	84 c0       	rjmp	.+264    	; 0x112 <__bad_interrupt>
   a:	00 00       	nop
   c:	82 c0       	rjmp	.+260    	; 0x112 <__bad_interrupt>
   e:	00 00       	nop
  10:	80 c0       	rjmp	.+256    	; 0x112 <__bad_interrupt>
  12:	00 00       	nop
  14:	7e c0       	rjmp	.+252    	; 0x112 <__bad_interrupt>
  16:	00 00       	nop
  18:	7c c0       	rjmp	.+248    	; 0x112 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	7a c0       	rjmp	.+244    	; 0x112 <__bad_interrupt>
  1e:	00 00       	nop
  20:	78 c0       	rjmp	.+240    	; 0x112 <__bad_interrupt>
  22:	00 00       	nop
  24:	76 c0       	rjmp	.+236    	; 0x112 <__bad_interrupt>
  26:	00 00       	nop
  28:	74 c0       	rjmp	.+232    	; 0x112 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	72 c0       	rjmp	.+228    	; 0x112 <__bad_interrupt>
  2e:	00 00       	nop
  30:	70 c0       	rjmp	.+224    	; 0x112 <__bad_interrupt>
  32:	00 00       	nop
  34:	6e c0       	rjmp	.+220    	; 0x112 <__bad_interrupt>
  36:	00 00       	nop
  38:	6c c0       	rjmp	.+216    	; 0x112 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	6a c0       	rjmp	.+212    	; 0x112 <__bad_interrupt>
  3e:	00 00       	nop
  40:	68 c0       	rjmp	.+208    	; 0x112 <__bad_interrupt>
  42:	00 00       	nop
  44:	66 c0       	rjmp	.+204    	; 0x112 <__bad_interrupt>
  46:	00 00       	nop
  48:	64 c0       	rjmp	.+200    	; 0x112 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	62 c0       	rjmp	.+196    	; 0x112 <__bad_interrupt>
  4e:	00 00       	nop
  50:	60 c0       	rjmp	.+192    	; 0x112 <__bad_interrupt>
  52:	00 00       	nop
  54:	5e c0       	rjmp	.+188    	; 0x112 <__bad_interrupt>
  56:	00 00       	nop
  58:	5c c0       	rjmp	.+184    	; 0x112 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	5a c0       	rjmp	.+180    	; 0x112 <__bad_interrupt>
  5e:	00 00       	nop
  60:	58 c0       	rjmp	.+176    	; 0x112 <__bad_interrupt>
  62:	00 00       	nop
  64:	56 c0       	rjmp	.+172    	; 0x112 <__bad_interrupt>
  66:	00 00       	nop
  68:	54 c0       	rjmp	.+168    	; 0x112 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	52 c0       	rjmp	.+164    	; 0x112 <__bad_interrupt>
  6e:	00 00       	nop
  70:	50 c0       	rjmp	.+160    	; 0x112 <__bad_interrupt>
  72:	00 00       	nop
  74:	4e c0       	rjmp	.+156    	; 0x112 <__bad_interrupt>
  76:	00 00       	nop
  78:	4c c0       	rjmp	.+152    	; 0x112 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	4a c0       	rjmp	.+148    	; 0x112 <__bad_interrupt>
  7e:	00 00       	nop
  80:	48 c0       	rjmp	.+144    	; 0x112 <__bad_interrupt>
  82:	00 00       	nop
  84:	46 c0       	rjmp	.+140    	; 0x112 <__bad_interrupt>
  86:	00 00       	nop
  88:	44 c0       	rjmp	.+136    	; 0x112 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	42 c0       	rjmp	.+132    	; 0x112 <__bad_interrupt>
  8e:	00 00       	nop
  90:	40 c0       	rjmp	.+128    	; 0x112 <__bad_interrupt>
  92:	00 00       	nop
  94:	3e c0       	rjmp	.+124    	; 0x112 <__bad_interrupt>
  96:	00 00       	nop
  98:	3c c0       	rjmp	.+120    	; 0x112 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	3a c0       	rjmp	.+116    	; 0x112 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	38 c0       	rjmp	.+112    	; 0x112 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	36 c0       	rjmp	.+108    	; 0x112 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	34 c0       	rjmp	.+104    	; 0x112 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	32 c0       	rjmp	.+100    	; 0x112 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	30 c0       	rjmp	.+96     	; 0x112 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	2e c0       	rjmp	.+92     	; 0x112 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	2c c0       	rjmp	.+88     	; 0x112 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	2a c0       	rjmp	.+84     	; 0x112 <__bad_interrupt>
  be:	00 00       	nop
  c0:	28 c0       	rjmp	.+80     	; 0x112 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	26 c0       	rjmp	.+76     	; 0x112 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	24 c0       	rjmp	.+72     	; 0x112 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	22 c0       	rjmp	.+68     	; 0x112 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	20 c0       	rjmp	.+64     	; 0x112 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	1e c0       	rjmp	.+60     	; 0x112 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	1c c0       	rjmp	.+56     	; 0x112 <__bad_interrupt>
  da:	00 00       	nop
  dc:	1a c0       	rjmp	.+52     	; 0x112 <__bad_interrupt>
  de:	00 00       	nop
  e0:	18 c0       	rjmp	.+48     	; 0x112 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee e3       	ldi	r30, 0x3E	; 62
  fc:	f9 e0       	ldi	r31, 0x09	; 9
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a6 31       	cpi	r26, 0x16	; 22
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	cc d3       	rcall	.+1944   	; 0x8a8 <main>
 110:	14 c4       	rjmp	.+2088   	; 0x93a <_exit>

00000112 <__bad_interrupt>:
 112:	76 cf       	rjmp	.-276    	; 0x0 <__vectors>

00000114 <GPIO_setupPinDirection>:
 114:	68 30       	cpi	r22, 0x08	; 8
 116:	08 f0       	brcs	.+2      	; 0x11a <GPIO_setupPinDirection+0x6>
 118:	3b c1       	rjmp	.+630    	; 0x390 <GPIO_setupPinDirection+0x27c>
 11a:	8b 30       	cpi	r24, 0x0B	; 11
 11c:	08 f0       	brcs	.+2      	; 0x120 <GPIO_setupPinDirection+0xc>
 11e:	38 c1       	rjmp	.+624    	; 0x390 <GPIO_setupPinDirection+0x27c>
 120:	81 11       	cpse	r24, r1
 122:	19 c0       	rjmp	.+50     	; 0x156 <GPIO_setupPinDirection+0x42>
 124:	41 30       	cpi	r20, 0x01	; 1
 126:	59 f4       	brne	.+22     	; 0x13e <GPIO_setupPinDirection+0x2a>
 128:	21 b1       	in	r18, 0x01	; 1
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	02 c0       	rjmp	.+4      	; 0x134 <GPIO_setupPinDirection+0x20>
 130:	88 0f       	add	r24, r24
 132:	99 1f       	adc	r25, r25
 134:	6a 95       	dec	r22
 136:	e2 f7       	brpl	.-8      	; 0x130 <GPIO_setupPinDirection+0x1c>
 138:	82 2b       	or	r24, r18
 13a:	81 b9       	out	0x01, r24	; 1
 13c:	08 95       	ret
 13e:	21 b1       	in	r18, 0x01	; 1
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	02 c0       	rjmp	.+4      	; 0x14a <GPIO_setupPinDirection+0x36>
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	6a 95       	dec	r22
 14c:	e2 f7       	brpl	.-8      	; 0x146 <GPIO_setupPinDirection+0x32>
 14e:	80 95       	com	r24
 150:	82 23       	and	r24, r18
 152:	81 b9       	out	0x01, r24	; 1
 154:	08 95       	ret
 156:	81 30       	cpi	r24, 0x01	; 1
 158:	c9 f4       	brne	.+50     	; 0x18c <GPIO_setupPinDirection+0x78>
 15a:	41 30       	cpi	r20, 0x01	; 1
 15c:	59 f4       	brne	.+22     	; 0x174 <GPIO_setupPinDirection+0x60>
 15e:	24 b1       	in	r18, 0x04	; 4
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	02 c0       	rjmp	.+4      	; 0x16a <GPIO_setupPinDirection+0x56>
 166:	88 0f       	add	r24, r24
 168:	99 1f       	adc	r25, r25
 16a:	6a 95       	dec	r22
 16c:	e2 f7       	brpl	.-8      	; 0x166 <GPIO_setupPinDirection+0x52>
 16e:	82 2b       	or	r24, r18
 170:	84 b9       	out	0x04, r24	; 4
 172:	08 95       	ret
 174:	24 b1       	in	r18, 0x04	; 4
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	02 c0       	rjmp	.+4      	; 0x180 <GPIO_setupPinDirection+0x6c>
 17c:	88 0f       	add	r24, r24
 17e:	99 1f       	adc	r25, r25
 180:	6a 95       	dec	r22
 182:	e2 f7       	brpl	.-8      	; 0x17c <GPIO_setupPinDirection+0x68>
 184:	80 95       	com	r24
 186:	82 23       	and	r24, r18
 188:	84 b9       	out	0x04, r24	; 4
 18a:	08 95       	ret
 18c:	82 30       	cpi	r24, 0x02	; 2
 18e:	c9 f4       	brne	.+50     	; 0x1c2 <GPIO_setupPinDirection+0xae>
 190:	41 30       	cpi	r20, 0x01	; 1
 192:	59 f4       	brne	.+22     	; 0x1aa <GPIO_setupPinDirection+0x96>
 194:	27 b1       	in	r18, 0x07	; 7
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <GPIO_setupPinDirection+0x8c>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <GPIO_setupPinDirection+0x88>
 1a4:	82 2b       	or	r24, r18
 1a6:	87 b9       	out	0x07, r24	; 7
 1a8:	08 95       	ret
 1aa:	27 b1       	in	r18, 0x07	; 7
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <GPIO_setupPinDirection+0xa2>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <GPIO_setupPinDirection+0x9e>
 1ba:	80 95       	com	r24
 1bc:	82 23       	and	r24, r18
 1be:	87 b9       	out	0x07, r24	; 7
 1c0:	08 95       	ret
 1c2:	83 30       	cpi	r24, 0x03	; 3
 1c4:	c9 f4       	brne	.+50     	; 0x1f8 <GPIO_setupPinDirection+0xe4>
 1c6:	41 30       	cpi	r20, 0x01	; 1
 1c8:	59 f4       	brne	.+22     	; 0x1e0 <GPIO_setupPinDirection+0xcc>
 1ca:	2a b1       	in	r18, 0x0a	; 10
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <GPIO_setupPinDirection+0xc2>
 1d2:	88 0f       	add	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	6a 95       	dec	r22
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <GPIO_setupPinDirection+0xbe>
 1da:	82 2b       	or	r24, r18
 1dc:	8a b9       	out	0x0a, r24	; 10
 1de:	08 95       	ret
 1e0:	2a b1       	in	r18, 0x0a	; 10
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <GPIO_setupPinDirection+0xd8>
 1e8:	88 0f       	add	r24, r24
 1ea:	99 1f       	adc	r25, r25
 1ec:	6a 95       	dec	r22
 1ee:	e2 f7       	brpl	.-8      	; 0x1e8 <GPIO_setupPinDirection+0xd4>
 1f0:	80 95       	com	r24
 1f2:	82 23       	and	r24, r18
 1f4:	8a b9       	out	0x0a, r24	; 10
 1f6:	08 95       	ret
 1f8:	84 30       	cpi	r24, 0x04	; 4
 1fa:	c9 f4       	brne	.+50     	; 0x22e <GPIO_setupPinDirection+0x11a>
 1fc:	41 30       	cpi	r20, 0x01	; 1
 1fe:	59 f4       	brne	.+22     	; 0x216 <GPIO_setupPinDirection+0x102>
 200:	2d b1       	in	r18, 0x0d	; 13
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 c0       	rjmp	.+4      	; 0x20c <GPIO_setupPinDirection+0xf8>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	6a 95       	dec	r22
 20e:	e2 f7       	brpl	.-8      	; 0x208 <GPIO_setupPinDirection+0xf4>
 210:	82 2b       	or	r24, r18
 212:	8d b9       	out	0x0d, r24	; 13
 214:	08 95       	ret
 216:	2d b1       	in	r18, 0x0d	; 13
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 c0       	rjmp	.+4      	; 0x222 <GPIO_setupPinDirection+0x10e>
 21e:	88 0f       	add	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	6a 95       	dec	r22
 224:	e2 f7       	brpl	.-8      	; 0x21e <GPIO_setupPinDirection+0x10a>
 226:	80 95       	com	r24
 228:	82 23       	and	r24, r18
 22a:	8d b9       	out	0x0d, r24	; 13
 22c:	08 95       	ret
 22e:	85 30       	cpi	r24, 0x05	; 5
 230:	c9 f4       	brne	.+50     	; 0x264 <GPIO_setupPinDirection+0x150>
 232:	41 30       	cpi	r20, 0x01	; 1
 234:	59 f4       	brne	.+22     	; 0x24c <GPIO_setupPinDirection+0x138>
 236:	20 b3       	in	r18, 0x10	; 16
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	02 c0       	rjmp	.+4      	; 0x242 <GPIO_setupPinDirection+0x12e>
 23e:	88 0f       	add	r24, r24
 240:	99 1f       	adc	r25, r25
 242:	6a 95       	dec	r22
 244:	e2 f7       	brpl	.-8      	; 0x23e <GPIO_setupPinDirection+0x12a>
 246:	82 2b       	or	r24, r18
 248:	80 bb       	out	0x10, r24	; 16
 24a:	08 95       	ret
 24c:	20 b3       	in	r18, 0x10	; 16
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	02 c0       	rjmp	.+4      	; 0x258 <GPIO_setupPinDirection+0x144>
 254:	88 0f       	add	r24, r24
 256:	99 1f       	adc	r25, r25
 258:	6a 95       	dec	r22
 25a:	e2 f7       	brpl	.-8      	; 0x254 <GPIO_setupPinDirection+0x140>
 25c:	80 95       	com	r24
 25e:	82 23       	and	r24, r18
 260:	80 bb       	out	0x10, r24	; 16
 262:	08 95       	ret
 264:	86 30       	cpi	r24, 0x06	; 6
 266:	c9 f4       	brne	.+50     	; 0x29a <GPIO_setupPinDirection+0x186>
 268:	41 30       	cpi	r20, 0x01	; 1
 26a:	59 f4       	brne	.+22     	; 0x282 <GPIO_setupPinDirection+0x16e>
 26c:	23 b3       	in	r18, 0x13	; 19
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	02 c0       	rjmp	.+4      	; 0x278 <GPIO_setupPinDirection+0x164>
 274:	88 0f       	add	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	6a 95       	dec	r22
 27a:	e2 f7       	brpl	.-8      	; 0x274 <GPIO_setupPinDirection+0x160>
 27c:	82 2b       	or	r24, r18
 27e:	83 bb       	out	0x13, r24	; 19
 280:	08 95       	ret
 282:	23 b3       	in	r18, 0x13	; 19
 284:	81 e0       	ldi	r24, 0x01	; 1
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	02 c0       	rjmp	.+4      	; 0x28e <GPIO_setupPinDirection+0x17a>
 28a:	88 0f       	add	r24, r24
 28c:	99 1f       	adc	r25, r25
 28e:	6a 95       	dec	r22
 290:	e2 f7       	brpl	.-8      	; 0x28a <GPIO_setupPinDirection+0x176>
 292:	80 95       	com	r24
 294:	82 23       	and	r24, r18
 296:	83 bb       	out	0x13, r24	; 19
 298:	08 95       	ret
 29a:	87 30       	cpi	r24, 0x07	; 7
 29c:	e9 f4       	brne	.+58     	; 0x2d8 <GPIO_setupPinDirection+0x1c4>
 29e:	41 30       	cpi	r20, 0x01	; 1
 2a0:	69 f4       	brne	.+26     	; 0x2bc <GPIO_setupPinDirection+0x1a8>
 2a2:	e1 e0       	ldi	r30, 0x01	; 1
 2a4:	f1 e0       	ldi	r31, 0x01	; 1
 2a6:	20 81       	ld	r18, Z
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	02 c0       	rjmp	.+4      	; 0x2b2 <GPIO_setupPinDirection+0x19e>
 2ae:	88 0f       	add	r24, r24
 2b0:	99 1f       	adc	r25, r25
 2b2:	6a 95       	dec	r22
 2b4:	e2 f7       	brpl	.-8      	; 0x2ae <GPIO_setupPinDirection+0x19a>
 2b6:	82 2b       	or	r24, r18
 2b8:	80 83       	st	Z, r24
 2ba:	08 95       	ret
 2bc:	e1 e0       	ldi	r30, 0x01	; 1
 2be:	f1 e0       	ldi	r31, 0x01	; 1
 2c0:	20 81       	ld	r18, Z
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	02 c0       	rjmp	.+4      	; 0x2cc <GPIO_setupPinDirection+0x1b8>
 2c8:	88 0f       	add	r24, r24
 2ca:	99 1f       	adc	r25, r25
 2cc:	6a 95       	dec	r22
 2ce:	e2 f7       	brpl	.-8      	; 0x2c8 <GPIO_setupPinDirection+0x1b4>
 2d0:	80 95       	com	r24
 2d2:	82 23       	and	r24, r18
 2d4:	80 83       	st	Z, r24
 2d6:	08 95       	ret
 2d8:	88 30       	cpi	r24, 0x08	; 8
 2da:	e9 f4       	brne	.+58     	; 0x316 <GPIO_setupPinDirection+0x202>
 2dc:	41 30       	cpi	r20, 0x01	; 1
 2de:	69 f4       	brne	.+26     	; 0x2fa <GPIO_setupPinDirection+0x1e6>
 2e0:	e4 e0       	ldi	r30, 0x04	; 4
 2e2:	f1 e0       	ldi	r31, 0x01	; 1
 2e4:	20 81       	ld	r18, Z
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <GPIO_setupPinDirection+0x1dc>
 2ec:	88 0f       	add	r24, r24
 2ee:	99 1f       	adc	r25, r25
 2f0:	6a 95       	dec	r22
 2f2:	e2 f7       	brpl	.-8      	; 0x2ec <GPIO_setupPinDirection+0x1d8>
 2f4:	82 2b       	or	r24, r18
 2f6:	80 83       	st	Z, r24
 2f8:	08 95       	ret
 2fa:	e4 e0       	ldi	r30, 0x04	; 4
 2fc:	f1 e0       	ldi	r31, 0x01	; 1
 2fe:	20 81       	ld	r18, Z
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	02 c0       	rjmp	.+4      	; 0x30a <GPIO_setupPinDirection+0x1f6>
 306:	88 0f       	add	r24, r24
 308:	99 1f       	adc	r25, r25
 30a:	6a 95       	dec	r22
 30c:	e2 f7       	brpl	.-8      	; 0x306 <GPIO_setupPinDirection+0x1f2>
 30e:	80 95       	com	r24
 310:	82 23       	and	r24, r18
 312:	80 83       	st	Z, r24
 314:	08 95       	ret
 316:	89 30       	cpi	r24, 0x09	; 9
 318:	e9 f4       	brne	.+58     	; 0x354 <GPIO_setupPinDirection+0x240>
 31a:	41 30       	cpi	r20, 0x01	; 1
 31c:	69 f4       	brne	.+26     	; 0x338 <GPIO_setupPinDirection+0x224>
 31e:	e7 e0       	ldi	r30, 0x07	; 7
 320:	f1 e0       	ldi	r31, 0x01	; 1
 322:	20 81       	ld	r18, Z
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	02 c0       	rjmp	.+4      	; 0x32e <GPIO_setupPinDirection+0x21a>
 32a:	88 0f       	add	r24, r24
 32c:	99 1f       	adc	r25, r25
 32e:	6a 95       	dec	r22
 330:	e2 f7       	brpl	.-8      	; 0x32a <GPIO_setupPinDirection+0x216>
 332:	82 2b       	or	r24, r18
 334:	80 83       	st	Z, r24
 336:	08 95       	ret
 338:	e7 e0       	ldi	r30, 0x07	; 7
 33a:	f1 e0       	ldi	r31, 0x01	; 1
 33c:	20 81       	ld	r18, Z
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	02 c0       	rjmp	.+4      	; 0x348 <GPIO_setupPinDirection+0x234>
 344:	88 0f       	add	r24, r24
 346:	99 1f       	adc	r25, r25
 348:	6a 95       	dec	r22
 34a:	e2 f7       	brpl	.-8      	; 0x344 <GPIO_setupPinDirection+0x230>
 34c:	80 95       	com	r24
 34e:	82 23       	and	r24, r18
 350:	80 83       	st	Z, r24
 352:	08 95       	ret
 354:	8a 30       	cpi	r24, 0x0A	; 10
 356:	e1 f4       	brne	.+56     	; 0x390 <GPIO_setupPinDirection+0x27c>
 358:	41 30       	cpi	r20, 0x01	; 1
 35a:	69 f4       	brne	.+26     	; 0x376 <GPIO_setupPinDirection+0x262>
 35c:	ea e0       	ldi	r30, 0x0A	; 10
 35e:	f1 e0       	ldi	r31, 0x01	; 1
 360:	20 81       	ld	r18, Z
 362:	81 e0       	ldi	r24, 0x01	; 1
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	02 c0       	rjmp	.+4      	; 0x36c <GPIO_setupPinDirection+0x258>
 368:	88 0f       	add	r24, r24
 36a:	99 1f       	adc	r25, r25
 36c:	6a 95       	dec	r22
 36e:	e2 f7       	brpl	.-8      	; 0x368 <GPIO_setupPinDirection+0x254>
 370:	82 2b       	or	r24, r18
 372:	80 83       	st	Z, r24
 374:	08 95       	ret
 376:	ea e0       	ldi	r30, 0x0A	; 10
 378:	f1 e0       	ldi	r31, 0x01	; 1
 37a:	20 81       	ld	r18, Z
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	90 e0       	ldi	r25, 0x00	; 0
 380:	02 c0       	rjmp	.+4      	; 0x386 <GPIO_setupPinDirection+0x272>
 382:	88 0f       	add	r24, r24
 384:	99 1f       	adc	r25, r25
 386:	6a 95       	dec	r22
 388:	e2 f7       	brpl	.-8      	; 0x382 <GPIO_setupPinDirection+0x26e>
 38a:	80 95       	com	r24
 38c:	82 23       	and	r24, r18
 38e:	80 83       	st	Z, r24
 390:	08 95       	ret

00000392 <GPIO_writePin>:
 392:	68 30       	cpi	r22, 0x08	; 8
 394:	08 f0       	brcs	.+2      	; 0x398 <GPIO_writePin+0x6>
 396:	3b c1       	rjmp	.+630    	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 398:	8b 30       	cpi	r24, 0x0B	; 11
 39a:	08 f0       	brcs	.+2      	; 0x39e <GPIO_writePin+0xc>
 39c:	38 c1       	rjmp	.+624    	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 39e:	81 11       	cpse	r24, r1
 3a0:	19 c0       	rjmp	.+50     	; 0x3d4 <GPIO_writePin+0x42>
 3a2:	41 30       	cpi	r20, 0x01	; 1
 3a4:	59 f4       	brne	.+22     	; 0x3bc <GPIO_writePin+0x2a>
 3a6:	22 b1       	in	r18, 0x02	; 2
 3a8:	81 e0       	ldi	r24, 0x01	; 1
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <GPIO_writePin+0x20>
 3ae:	88 0f       	add	r24, r24
 3b0:	99 1f       	adc	r25, r25
 3b2:	6a 95       	dec	r22
 3b4:	e2 f7       	brpl	.-8      	; 0x3ae <GPIO_writePin+0x1c>
 3b6:	82 2b       	or	r24, r18
 3b8:	82 b9       	out	0x02, r24	; 2
 3ba:	08 95       	ret
 3bc:	22 b1       	in	r18, 0x02	; 2
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	02 c0       	rjmp	.+4      	; 0x3c8 <GPIO_writePin+0x36>
 3c4:	88 0f       	add	r24, r24
 3c6:	99 1f       	adc	r25, r25
 3c8:	6a 95       	dec	r22
 3ca:	e2 f7       	brpl	.-8      	; 0x3c4 <GPIO_writePin+0x32>
 3cc:	80 95       	com	r24
 3ce:	82 23       	and	r24, r18
 3d0:	82 b9       	out	0x02, r24	; 2
 3d2:	08 95       	ret
 3d4:	81 30       	cpi	r24, 0x01	; 1
 3d6:	c9 f4       	brne	.+50     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3d8:	41 30       	cpi	r20, 0x01	; 1
 3da:	59 f4       	brne	.+22     	; 0x3f2 <GPIO_writePin+0x60>
 3dc:	25 b1       	in	r18, 0x05	; 5
 3de:	81 e0       	ldi	r24, 0x01	; 1
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <GPIO_writePin+0x56>
 3e4:	88 0f       	add	r24, r24
 3e6:	99 1f       	adc	r25, r25
 3e8:	6a 95       	dec	r22
 3ea:	e2 f7       	brpl	.-8      	; 0x3e4 <GPIO_writePin+0x52>
 3ec:	82 2b       	or	r24, r18
 3ee:	85 b9       	out	0x05, r24	; 5
 3f0:	08 95       	ret
 3f2:	25 b1       	in	r18, 0x05	; 5
 3f4:	81 e0       	ldi	r24, 0x01	; 1
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	02 c0       	rjmp	.+4      	; 0x3fe <GPIO_writePin+0x6c>
 3fa:	88 0f       	add	r24, r24
 3fc:	99 1f       	adc	r25, r25
 3fe:	6a 95       	dec	r22
 400:	e2 f7       	brpl	.-8      	; 0x3fa <GPIO_writePin+0x68>
 402:	80 95       	com	r24
 404:	82 23       	and	r24, r18
 406:	85 b9       	out	0x05, r24	; 5
 408:	08 95       	ret
 40a:	82 30       	cpi	r24, 0x02	; 2
 40c:	c9 f4       	brne	.+50     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 40e:	41 30       	cpi	r20, 0x01	; 1
 410:	59 f4       	brne	.+22     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 412:	28 b1       	in	r18, 0x08	; 8
 414:	81 e0       	ldi	r24, 0x01	; 1
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	02 c0       	rjmp	.+4      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 41a:	88 0f       	add	r24, r24
 41c:	99 1f       	adc	r25, r25
 41e:	6a 95       	dec	r22
 420:	e2 f7       	brpl	.-8      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 422:	82 2b       	or	r24, r18
 424:	88 b9       	out	0x08, r24	; 8
 426:	08 95       	ret
 428:	28 b1       	in	r18, 0x08	; 8
 42a:	81 e0       	ldi	r24, 0x01	; 1
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	02 c0       	rjmp	.+4      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 430:	88 0f       	add	r24, r24
 432:	99 1f       	adc	r25, r25
 434:	6a 95       	dec	r22
 436:	e2 f7       	brpl	.-8      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 438:	80 95       	com	r24
 43a:	82 23       	and	r24, r18
 43c:	88 b9       	out	0x08, r24	; 8
 43e:	08 95       	ret
 440:	83 30       	cpi	r24, 0x03	; 3
 442:	c9 f4       	brne	.+50     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 444:	41 30       	cpi	r20, 0x01	; 1
 446:	59 f4       	brne	.+22     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 448:	2b b1       	in	r18, 0x0b	; 11
 44a:	81 e0       	ldi	r24, 0x01	; 1
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	02 c0       	rjmp	.+4      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 450:	88 0f       	add	r24, r24
 452:	99 1f       	adc	r25, r25
 454:	6a 95       	dec	r22
 456:	e2 f7       	brpl	.-8      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 458:	82 2b       	or	r24, r18
 45a:	8b b9       	out	0x0b, r24	; 11
 45c:	08 95       	ret
 45e:	2b b1       	in	r18, 0x0b	; 11
 460:	81 e0       	ldi	r24, 0x01	; 1
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	02 c0       	rjmp	.+4      	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 466:	88 0f       	add	r24, r24
 468:	99 1f       	adc	r25, r25
 46a:	6a 95       	dec	r22
 46c:	e2 f7       	brpl	.-8      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 46e:	80 95       	com	r24
 470:	82 23       	and	r24, r18
 472:	8b b9       	out	0x0b, r24	; 11
 474:	08 95       	ret
 476:	84 30       	cpi	r24, 0x04	; 4
 478:	c9 f4       	brne	.+50     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 47a:	41 30       	cpi	r20, 0x01	; 1
 47c:	59 f4       	brne	.+22     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 47e:	2e b1       	in	r18, 0x0e	; 14
 480:	81 e0       	ldi	r24, 0x01	; 1
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	02 c0       	rjmp	.+4      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 486:	88 0f       	add	r24, r24
 488:	99 1f       	adc	r25, r25
 48a:	6a 95       	dec	r22
 48c:	e2 f7       	brpl	.-8      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 48e:	82 2b       	or	r24, r18
 490:	8e b9       	out	0x0e, r24	; 14
 492:	08 95       	ret
 494:	2e b1       	in	r18, 0x0e	; 14
 496:	81 e0       	ldi	r24, 0x01	; 1
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	02 c0       	rjmp	.+4      	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 49c:	88 0f       	add	r24, r24
 49e:	99 1f       	adc	r25, r25
 4a0:	6a 95       	dec	r22
 4a2:	e2 f7       	brpl	.-8      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 4a4:	80 95       	com	r24
 4a6:	82 23       	and	r24, r18
 4a8:	8e b9       	out	0x0e, r24	; 14
 4aa:	08 95       	ret
 4ac:	85 30       	cpi	r24, 0x05	; 5
 4ae:	c9 f4       	brne	.+50     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4b0:	41 30       	cpi	r20, 0x01	; 1
 4b2:	59 f4       	brne	.+22     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4b4:	21 b3       	in	r18, 0x11	; 17
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4bc:	88 0f       	add	r24, r24
 4be:	99 1f       	adc	r25, r25
 4c0:	6a 95       	dec	r22
 4c2:	e2 f7       	brpl	.-8      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4c4:	82 2b       	or	r24, r18
 4c6:	81 bb       	out	0x11, r24	; 17
 4c8:	08 95       	ret
 4ca:	21 b3       	in	r18, 0x11	; 17
 4cc:	81 e0       	ldi	r24, 0x01	; 1
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	02 c0       	rjmp	.+4      	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4d2:	88 0f       	add	r24, r24
 4d4:	99 1f       	adc	r25, r25
 4d6:	6a 95       	dec	r22
 4d8:	e2 f7       	brpl	.-8      	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4da:	80 95       	com	r24
 4dc:	82 23       	and	r24, r18
 4de:	81 bb       	out	0x11, r24	; 17
 4e0:	08 95       	ret
 4e2:	86 30       	cpi	r24, 0x06	; 6
 4e4:	c9 f4       	brne	.+50     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 4e6:	41 30       	cpi	r20, 0x01	; 1
 4e8:	59 f4       	brne	.+22     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4ea:	24 b3       	in	r18, 0x14	; 20
 4ec:	81 e0       	ldi	r24, 0x01	; 1
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	02 c0       	rjmp	.+4      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4f2:	88 0f       	add	r24, r24
 4f4:	99 1f       	adc	r25, r25
 4f6:	6a 95       	dec	r22
 4f8:	e2 f7       	brpl	.-8      	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4fa:	82 2b       	or	r24, r18
 4fc:	84 bb       	out	0x14, r24	; 20
 4fe:	08 95       	ret
 500:	24 b3       	in	r18, 0x14	; 20
 502:	81 e0       	ldi	r24, 0x01	; 1
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	02 c0       	rjmp	.+4      	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 508:	88 0f       	add	r24, r24
 50a:	99 1f       	adc	r25, r25
 50c:	6a 95       	dec	r22
 50e:	e2 f7       	brpl	.-8      	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 510:	80 95       	com	r24
 512:	82 23       	and	r24, r18
 514:	84 bb       	out	0x14, r24	; 20
 516:	08 95       	ret
 518:	87 30       	cpi	r24, 0x07	; 7
 51a:	e9 f4       	brne	.+58     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 51c:	41 30       	cpi	r20, 0x01	; 1
 51e:	69 f4       	brne	.+26     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 520:	e2 e0       	ldi	r30, 0x02	; 2
 522:	f1 e0       	ldi	r31, 0x01	; 1
 524:	20 81       	ld	r18, Z
 526:	81 e0       	ldi	r24, 0x01	; 1
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	02 c0       	rjmp	.+4      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 52c:	88 0f       	add	r24, r24
 52e:	99 1f       	adc	r25, r25
 530:	6a 95       	dec	r22
 532:	e2 f7       	brpl	.-8      	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 534:	82 2b       	or	r24, r18
 536:	80 83       	st	Z, r24
 538:	08 95       	ret
 53a:	e2 e0       	ldi	r30, 0x02	; 2
 53c:	f1 e0       	ldi	r31, 0x01	; 1
 53e:	20 81       	ld	r18, Z
 540:	81 e0       	ldi	r24, 0x01	; 1
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	02 c0       	rjmp	.+4      	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 546:	88 0f       	add	r24, r24
 548:	99 1f       	adc	r25, r25
 54a:	6a 95       	dec	r22
 54c:	e2 f7       	brpl	.-8      	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 54e:	80 95       	com	r24
 550:	82 23       	and	r24, r18
 552:	80 83       	st	Z, r24
 554:	08 95       	ret
 556:	88 30       	cpi	r24, 0x08	; 8
 558:	e9 f4       	brne	.+58     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 55a:	41 30       	cpi	r20, 0x01	; 1
 55c:	69 f4       	brne	.+26     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 55e:	e5 e0       	ldi	r30, 0x05	; 5
 560:	f1 e0       	ldi	r31, 0x01	; 1
 562:	20 81       	ld	r18, Z
 564:	81 e0       	ldi	r24, 0x01	; 1
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	02 c0       	rjmp	.+4      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 56a:	88 0f       	add	r24, r24
 56c:	99 1f       	adc	r25, r25
 56e:	6a 95       	dec	r22
 570:	e2 f7       	brpl	.-8      	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 572:	82 2b       	or	r24, r18
 574:	80 83       	st	Z, r24
 576:	08 95       	ret
 578:	eb e0       	ldi	r30, 0x0B	; 11
 57a:	f1 e0       	ldi	r31, 0x01	; 1
 57c:	20 81       	ld	r18, Z
 57e:	81 e0       	ldi	r24, 0x01	; 1
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	02 c0       	rjmp	.+4      	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 584:	88 0f       	add	r24, r24
 586:	99 1f       	adc	r25, r25
 588:	6a 95       	dec	r22
 58a:	e2 f7       	brpl	.-8      	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 58c:	80 95       	com	r24
 58e:	82 23       	and	r24, r18
 590:	80 83       	st	Z, r24
 592:	08 95       	ret
 594:	89 30       	cpi	r24, 0x09	; 9
 596:	e9 f4       	brne	.+58     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 598:	41 30       	cpi	r20, 0x01	; 1
 59a:	69 f4       	brne	.+26     	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 59c:	e8 e0       	ldi	r30, 0x08	; 8
 59e:	f1 e0       	ldi	r31, 0x01	; 1
 5a0:	20 81       	ld	r18, Z
 5a2:	81 e0       	ldi	r24, 0x01	; 1
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	02 c0       	rjmp	.+4      	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 5a8:	88 0f       	add	r24, r24
 5aa:	99 1f       	adc	r25, r25
 5ac:	6a 95       	dec	r22
 5ae:	e2 f7       	brpl	.-8      	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 5b0:	82 2b       	or	r24, r18
 5b2:	80 83       	st	Z, r24
 5b4:	08 95       	ret
 5b6:	e8 e0       	ldi	r30, 0x08	; 8
 5b8:	f1 e0       	ldi	r31, 0x01	; 1
 5ba:	20 81       	ld	r18, Z
 5bc:	81 e0       	ldi	r24, 0x01	; 1
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	02 c0       	rjmp	.+4      	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5c2:	88 0f       	add	r24, r24
 5c4:	99 1f       	adc	r25, r25
 5c6:	6a 95       	dec	r22
 5c8:	e2 f7       	brpl	.-8      	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 5ca:	80 95       	com	r24
 5cc:	82 23       	and	r24, r18
 5ce:	80 83       	st	Z, r24
 5d0:	08 95       	ret
 5d2:	8a 30       	cpi	r24, 0x0A	; 10
 5d4:	e1 f4       	brne	.+56     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 5d6:	41 30       	cpi	r20, 0x01	; 1
 5d8:	69 f4       	brne	.+26     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5da:	eb e0       	ldi	r30, 0x0B	; 11
 5dc:	f1 e0       	ldi	r31, 0x01	; 1
 5de:	20 81       	ld	r18, Z
 5e0:	81 e0       	ldi	r24, 0x01	; 1
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5e6:	88 0f       	add	r24, r24
 5e8:	99 1f       	adc	r25, r25
 5ea:	6a 95       	dec	r22
 5ec:	e2 f7       	brpl	.-8      	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5ee:	82 2b       	or	r24, r18
 5f0:	80 83       	st	Z, r24
 5f2:	08 95       	ret
 5f4:	eb e0       	ldi	r30, 0x0B	; 11
 5f6:	f1 e0       	ldi	r31, 0x01	; 1
 5f8:	20 81       	ld	r18, Z
 5fa:	81 e0       	ldi	r24, 0x01	; 1
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	02 c0       	rjmp	.+4      	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 600:	88 0f       	add	r24, r24
 602:	99 1f       	adc	r25, r25
 604:	6a 95       	dec	r22
 606:	e2 f7       	brpl	.-8      	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 608:	80 95       	com	r24
 60a:	82 23       	and	r24, r18
 60c:	80 83       	st	Z, r24
 60e:	08 95       	ret

00000610 <GPIO_setupPortDirection>:
 610:	8b 30       	cpi	r24, 0x0B	; 11
 612:	78 f5       	brcc	.+94     	; 0x672 <GPIO_setupPortDirection+0x62>
 614:	81 11       	cpse	r24, r1
 616:	02 c0       	rjmp	.+4      	; 0x61c <GPIO_setupPortDirection+0xc>
 618:	61 b9       	out	0x01, r22	; 1
 61a:	08 95       	ret
 61c:	81 30       	cpi	r24, 0x01	; 1
 61e:	11 f4       	brne	.+4      	; 0x624 <GPIO_setupPortDirection+0x14>
 620:	64 b9       	out	0x04, r22	; 4
 622:	08 95       	ret
 624:	82 30       	cpi	r24, 0x02	; 2
 626:	11 f4       	brne	.+4      	; 0x62c <GPIO_setupPortDirection+0x1c>
 628:	67 b9       	out	0x07, r22	; 7
 62a:	08 95       	ret
 62c:	83 30       	cpi	r24, 0x03	; 3
 62e:	11 f4       	brne	.+4      	; 0x634 <GPIO_setupPortDirection+0x24>
 630:	6a b9       	out	0x0a, r22	; 10
 632:	08 95       	ret
 634:	84 30       	cpi	r24, 0x04	; 4
 636:	11 f4       	brne	.+4      	; 0x63c <GPIO_setupPortDirection+0x2c>
 638:	6d b9       	out	0x0d, r22	; 13
 63a:	08 95       	ret
 63c:	85 30       	cpi	r24, 0x05	; 5
 63e:	11 f4       	brne	.+4      	; 0x644 <GPIO_setupPortDirection+0x34>
 640:	60 bb       	out	0x10, r22	; 16
 642:	08 95       	ret
 644:	86 30       	cpi	r24, 0x06	; 6
 646:	11 f4       	brne	.+4      	; 0x64c <GPIO_setupPortDirection+0x3c>
 648:	63 bb       	out	0x13, r22	; 19
 64a:	08 95       	ret
 64c:	87 30       	cpi	r24, 0x07	; 7
 64e:	19 f4       	brne	.+6      	; 0x656 <GPIO_setupPortDirection+0x46>
 650:	60 93 01 01 	sts	0x0101, r22	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
 654:	08 95       	ret
 656:	88 30       	cpi	r24, 0x08	; 8
 658:	19 f4       	brne	.+6      	; 0x660 <GPIO_setupPortDirection+0x50>
 65a:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
 65e:	08 95       	ret
 660:	89 30       	cpi	r24, 0x09	; 9
 662:	19 f4       	brne	.+6      	; 0x66a <GPIO_setupPortDirection+0x5a>
 664:	60 93 07 01 	sts	0x0107, r22	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 668:	08 95       	ret
 66a:	8a 30       	cpi	r24, 0x0A	; 10
 66c:	11 f4       	brne	.+4      	; 0x672 <GPIO_setupPortDirection+0x62>
 66e:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
 672:	08 95       	ret

00000674 <GPIO_writePort>:
 674:	8b 30       	cpi	r24, 0x0B	; 11
 676:	78 f5       	brcc	.+94     	; 0x6d6 <GPIO_writePort+0x62>
 678:	81 11       	cpse	r24, r1
 67a:	02 c0       	rjmp	.+4      	; 0x680 <GPIO_writePort+0xc>
 67c:	62 b9       	out	0x02, r22	; 2
 67e:	08 95       	ret
 680:	81 30       	cpi	r24, 0x01	; 1
 682:	11 f4       	brne	.+4      	; 0x688 <GPIO_writePort+0x14>
 684:	65 b9       	out	0x05, r22	; 5
 686:	08 95       	ret
 688:	82 30       	cpi	r24, 0x02	; 2
 68a:	11 f4       	brne	.+4      	; 0x690 <GPIO_writePort+0x1c>
 68c:	68 b9       	out	0x08, r22	; 8
 68e:	08 95       	ret
 690:	83 30       	cpi	r24, 0x03	; 3
 692:	11 f4       	brne	.+4      	; 0x698 <GPIO_writePort+0x24>
 694:	6b b9       	out	0x0b, r22	; 11
 696:	08 95       	ret
 698:	84 30       	cpi	r24, 0x04	; 4
 69a:	11 f4       	brne	.+4      	; 0x6a0 <GPIO_writePort+0x2c>
 69c:	6e b9       	out	0x0e, r22	; 14
 69e:	08 95       	ret
 6a0:	85 30       	cpi	r24, 0x05	; 5
 6a2:	11 f4       	brne	.+4      	; 0x6a8 <GPIO_writePort+0x34>
 6a4:	61 bb       	out	0x11, r22	; 17
 6a6:	08 95       	ret
 6a8:	86 30       	cpi	r24, 0x06	; 6
 6aa:	11 f4       	brne	.+4      	; 0x6b0 <GPIO_writePort+0x3c>
 6ac:	64 bb       	out	0x14, r22	; 20
 6ae:	08 95       	ret
 6b0:	87 30       	cpi	r24, 0x07	; 7
 6b2:	19 f4       	brne	.+6      	; 0x6ba <GPIO_writePort+0x46>
 6b4:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
 6b8:	08 95       	ret
 6ba:	88 30       	cpi	r24, 0x08	; 8
 6bc:	19 f4       	brne	.+6      	; 0x6c4 <GPIO_writePort+0x50>
 6be:	60 93 05 01 	sts	0x0105, r22	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
 6c2:	08 95       	ret
 6c4:	89 30       	cpi	r24, 0x09	; 9
 6c6:	19 f4       	brne	.+6      	; 0x6ce <GPIO_writePort+0x5a>
 6c8:	60 93 08 01 	sts	0x0108, r22	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 6cc:	08 95       	ret
 6ce:	8a 30       	cpi	r24, 0x0A	; 10
 6d0:	11 f4       	brne	.+4      	; 0x6d6 <GPIO_writePort+0x62>
 6d2:	60 93 0b 01 	sts	0x010B, r22	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
 6d6:	08 95       	ret

000006d8 <LCD_sendCommand>:
/*
 * Description :
 * Send the required command to the screen
 */
void LCD_sendCommand(uint8 command)
{
 6d8:	cf 93       	push	r28
 6da:	c8 2f       	mov	r28, r24
	GPIO_writePin(LCD_RS_PORT_ID,LCD_RS_PIN_ID,LOGIC_LOW); /* Instruction Mode RS=0 */
 6dc:	40 e0       	ldi	r20, 0x00	; 0
 6de:	64 e0       	ldi	r22, 0x04	; 4
 6e0:	83 e0       	ldi	r24, 0x03	; 3
 6e2:	57 de       	rcall	.-850    	; 0x392 <GPIO_writePin>
	GPIO_writePin(LCD_RW_PORT_ID,LCD_RW_PIN_ID,LOGIC_LOW); /* write data to LCD so RW=0 */
 6e4:	40 e0       	ldi	r20, 0x00	; 0
 6e6:	65 e0       	ldi	r22, 0x05	; 5
 6e8:	83 e0       	ldi	r24, 0x03	; 3
 6ea:	53 de       	rcall	.-858    	; 0x392 <GPIO_writePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 6ec:	89 ef       	ldi	r24, 0xF9	; 249
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	01 97       	sbiw	r24, 0x01	; 1
 6f2:	f1 f7       	brne	.-4      	; 0x6f0 <LCD_sendCommand+0x18>
 6f4:	00 c0       	rjmp	.+0      	; 0x6f6 <LCD_sendCommand+0x1e>
 6f6:	00 00       	nop
	_delay_ms(1); /* delay for processing Tas = 50ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_HIGH); /* Enable LCD E=1 */
 6f8:	41 e0       	ldi	r20, 0x01	; 1
 6fa:	66 e0       	ldi	r22, 0x06	; 6
 6fc:	83 e0       	ldi	r24, 0x03	; 3
 6fe:	49 de       	rcall	.-878    	; 0x392 <GPIO_writePin>
 700:	89 ef       	ldi	r24, 0xF9	; 249
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	01 97       	sbiw	r24, 0x01	; 1
 706:	f1 f7       	brne	.-4      	; 0x704 <LCD_sendCommand+0x2c>
 708:	00 c0       	rjmp	.+0      	; 0x70a <LCD_sendCommand+0x32>
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */
	GPIO_writePort(LCD_DATA_PORT_ID,command); /* out the required command to the data bus D0 --> D7 */
 70a:	00 00       	nop
 70c:	6c 2f       	mov	r22, r28
 70e:	82 e0       	ldi	r24, 0x02	; 2
 710:	b1 df       	rcall	.-158    	; 0x674 <GPIO_writePort>
 712:	89 ef       	ldi	r24, 0xF9	; 249
 714:	90 e0       	ldi	r25, 0x00	; 0
 716:	01 97       	sbiw	r24, 0x01	; 1
 718:	f1 f7       	brne	.-4      	; 0x716 <LCD_sendCommand+0x3e>
 71a:	00 c0       	rjmp	.+0      	; 0x71c <LCD_sendCommand+0x44>
	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_LOW); /* Disable LCD E=0 */
 71c:	00 00       	nop
 71e:	40 e0       	ldi	r20, 0x00	; 0
 720:	66 e0       	ldi	r22, 0x06	; 6
 722:	83 e0       	ldi	r24, 0x03	; 3
 724:	36 de       	rcall	.-916    	; 0x392 <GPIO_writePin>
 726:	89 ef       	ldi	r24, 0xF9	; 249
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	01 97       	sbiw	r24, 0x01	; 1
 72c:	f1 f7       	brne	.-4      	; 0x72a <LCD_sendCommand+0x52>
 72e:	00 c0       	rjmp	.+0      	; 0x730 <LCD_sendCommand+0x58>
 730:	00 00       	nop
	_delay_ms(1); /* delay for processing Th = 13ns */
}
 732:	cf 91       	pop	r28
 734:	08 95       	ret

00000736 <LCD_init>:
 * 2. Setup the LCD Data Mode 4-bits or 8-bits.
 */
void LCD_init(void)
{
	/* Configure the direction for RS, RW and E pins as output pins */
	GPIO_setupPinDirection(LCD_RS_PORT_ID,LCD_RS_PIN_ID,PIN_OUTPUT);
 736:	41 e0       	ldi	r20, 0x01	; 1
 738:	64 e0       	ldi	r22, 0x04	; 4
 73a:	83 e0       	ldi	r24, 0x03	; 3
 73c:	eb dc       	rcall	.-1578   	; 0x114 <GPIO_setupPinDirection>
	GPIO_setupPinDirection(LCD_RW_PORT_ID,LCD_RW_PIN_ID,PIN_OUTPUT);
 73e:	41 e0       	ldi	r20, 0x01	; 1
 740:	65 e0       	ldi	r22, 0x05	; 5
 742:	83 e0       	ldi	r24, 0x03	; 3
 744:	e7 dc       	rcall	.-1586   	; 0x114 <GPIO_setupPinDirection>
	GPIO_setupPinDirection(LCD_E_PORT_ID,LCD_E_PIN_ID,PIN_OUTPUT);
 746:	41 e0       	ldi	r20, 0x01	; 1
 748:	66 e0       	ldi	r22, 0x06	; 6
 74a:	83 e0       	ldi	r24, 0x03	; 3
 74c:	e3 dc       	rcall	.-1594   	; 0x114 <GPIO_setupPinDirection>

	/* Configure the data port as output port */
	GPIO_setupPortDirection(LCD_DATA_PORT_ID,PORT_OUTPUT);
 74e:	6f ef       	ldi	r22, 0xFF	; 255
 750:	82 e0       	ldi	r24, 0x02	; 2
 752:	5e df       	rcall	.-324    	; 0x610 <GPIO_setupPortDirection>

	LCD_sendCommand(LCD_TWO_LINES_EIGHT_BITS_MODE); /* use 2-line lcd + 8-bit Data Mode + 5*7 dot display Mode */
 754:	88 e3       	ldi	r24, 0x38	; 56
 756:	c0 df       	rcall	.-128    	; 0x6d8 <LCD_sendCommand>
	
	LCD_sendCommand(LCD_CURSOR_OFF); /* cursor off */
 758:	8c e0       	ldi	r24, 0x0C	; 12
 75a:	be df       	rcall	.-132    	; 0x6d8 <LCD_sendCommand>
 75c:	81 e0       	ldi	r24, 0x01	; 1
	
	LCD_sendCommand(LCD_CLEAR_COMMAND); /* clear LCD at the beginning */
 75e:	bc cf       	rjmp	.-136    	; 0x6d8 <LCD_sendCommand>
 760:	08 95       	ret

00000762 <LCD_displayCharacter>:
 762:	cf 93       	push	r28
 764:	c8 2f       	mov	r28, r24
 * Description :
 * Display the required character on the screen
 */
void LCD_displayCharacter(uint8 data)
{
	GPIO_writePin(LCD_RS_PORT_ID,LCD_RS_PIN_ID,LOGIC_HIGH); /* Data Mode RS=1 */
 766:	41 e0       	ldi	r20, 0x01	; 1
 768:	64 e0       	ldi	r22, 0x04	; 4
 76a:	83 e0       	ldi	r24, 0x03	; 3
 76c:	12 de       	rcall	.-988    	; 0x392 <GPIO_writePin>
	GPIO_writePin(LCD_RW_PORT_ID,LCD_RW_PIN_ID,LOGIC_LOW); /* write data to LCD so RW=0 */
 76e:	40 e0       	ldi	r20, 0x00	; 0
 770:	65 e0       	ldi	r22, 0x05	; 5
 772:	83 e0       	ldi	r24, 0x03	; 3
 774:	0e de       	rcall	.-996    	; 0x392 <GPIO_writePin>
 776:	89 ef       	ldi	r24, 0xF9	; 249
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	01 97       	sbiw	r24, 0x01	; 1
 77c:	f1 f7       	brne	.-4      	; 0x77a <LCD_displayCharacter+0x18>
 77e:	00 c0       	rjmp	.+0      	; 0x780 <LCD_displayCharacter+0x1e>
 780:	00 00       	nop
	_delay_ms(1); /* delay for processing Tas = 50ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_HIGH); /* Enable LCD E=1 */
 782:	41 e0       	ldi	r20, 0x01	; 1
 784:	66 e0       	ldi	r22, 0x06	; 6
 786:	83 e0       	ldi	r24, 0x03	; 3
 788:	04 de       	rcall	.-1016   	; 0x392 <GPIO_writePin>
 78a:	89 ef       	ldi	r24, 0xF9	; 249
 78c:	90 e0       	ldi	r25, 0x00	; 0
 78e:	01 97       	sbiw	r24, 0x01	; 1
 790:	f1 f7       	brne	.-4      	; 0x78e <LCD_displayCharacter+0x2c>
 792:	00 c0       	rjmp	.+0      	; 0x794 <LCD_displayCharacter+0x32>
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */
	GPIO_writePort(LCD_DATA_PORT_ID,data); /* out the required command to the data bus D0 --> D7 */
 794:	00 00       	nop
 796:	6c 2f       	mov	r22, r28
 798:	82 e0       	ldi	r24, 0x02	; 2
 79a:	6c df       	rcall	.-296    	; 0x674 <GPIO_writePort>
 79c:	89 ef       	ldi	r24, 0xF9	; 249
 79e:	90 e0       	ldi	r25, 0x00	; 0
 7a0:	01 97       	sbiw	r24, 0x01	; 1
 7a2:	f1 f7       	brne	.-4      	; 0x7a0 <LCD_displayCharacter+0x3e>
 7a4:	00 c0       	rjmp	.+0      	; 0x7a6 <LCD_displayCharacter+0x44>
	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_LOW); /* Disable LCD E=0 */
 7a6:	00 00       	nop
 7a8:	40 e0       	ldi	r20, 0x00	; 0
 7aa:	66 e0       	ldi	r22, 0x06	; 6
 7ac:	83 e0       	ldi	r24, 0x03	; 3
 7ae:	f1 dd       	rcall	.-1054   	; 0x392 <GPIO_writePin>
 7b0:	89 ef       	ldi	r24, 0xF9	; 249
 7b2:	90 e0       	ldi	r25, 0x00	; 0
 7b4:	01 97       	sbiw	r24, 0x01	; 1
 7b6:	f1 f7       	brne	.-4      	; 0x7b4 <LCD_displayCharacter+0x52>
 7b8:	00 c0       	rjmp	.+0      	; 0x7ba <LCD_displayCharacter+0x58>
 7ba:	00 00       	nop
	_delay_ms(1); /* delay for processing Th = 13ns */
}
 7bc:	cf 91       	pop	r28
 7be:	08 95       	ret

000007c0 <LCD_displayString>:
/*
 * Description :
 * Display the required string on the screen
 */
void LCD_displayString(const char *Str)
{
 7c0:	0f 93       	push	r16
 7c2:	1f 93       	push	r17
 7c4:	cf 93       	push	r28
 7c6:	8c 01       	movw	r16, r24
	uint8 i = 0;
 7c8:	c0 e0       	ldi	r28, 0x00	; 0
	while(Str[i] != '\0')
 7ca:	02 c0       	rjmp	.+4      	; 0x7d0 <LCD_displayString+0x10>
	{
		LCD_displayCharacter(Str[i]);
 7cc:	ca df       	rcall	.-108    	; 0x762 <LCD_displayCharacter>
		i++;
 7ce:	cf 5f       	subi	r28, 0xFF	; 255
 * Display the required string on the screen
 */
void LCD_displayString(const char *Str)
{
	uint8 i = 0;
	while(Str[i] != '\0')
 7d0:	f8 01       	movw	r30, r16
 7d2:	ec 0f       	add	r30, r28
 7d4:	f1 1d       	adc	r31, r1
 7d6:	80 81       	ld	r24, Z
 7d8:	81 11       	cpse	r24, r1
 7da:	f8 cf       	rjmp	.-16     	; 0x7cc <LCD_displayString+0xc>
	{
		LCD_displayCharacter(*Str);
		Str++;
	}		
	*********************************************************/
}
 7dc:	cf 91       	pop	r28
 7de:	1f 91       	pop	r17
 7e0:	0f 91       	pop	r16
 7e2:	08 95       	ret

000007e4 <LCD_moveCursor>:
void LCD_moveCursor(uint8 row,uint8 col)
{
	uint8 lcd_memory_address;
	
	/* Calculate the required address in the LCD DDRAM */
	switch(row)
 7e4:	81 30       	cpi	r24, 0x01	; 1
 7e6:	31 f0       	breq	.+12     	; 0x7f4 <LCD_moveCursor+0x10>
 7e8:	70 f0       	brcs	.+28     	; 0x806 <LCD_moveCursor+0x22>
 7ea:	82 30       	cpi	r24, 0x02	; 2
 7ec:	31 f0       	breq	.+12     	; 0x7fa <LCD_moveCursor+0x16>
 7ee:	83 30       	cpi	r24, 0x03	; 3
 7f0:	39 f0       	breq	.+14     	; 0x800 <LCD_moveCursor+0x1c>
 7f2:	0a c0       	rjmp	.+20     	; 0x808 <LCD_moveCursor+0x24>
	{
		case 0:
			lcd_memory_address=col;
				break;
		case 1:
			lcd_memory_address=col+0x40;
 7f4:	90 e4       	ldi	r25, 0x40	; 64
 7f6:	96 0f       	add	r25, r22
				break;
 7f8:	07 c0       	rjmp	.+14     	; 0x808 <LCD_moveCursor+0x24>
		case 2:
			lcd_memory_address=col+0x10;
 7fa:	90 e1       	ldi	r25, 0x10	; 16
 7fc:	96 0f       	add	r25, r22
				break;
 7fe:	04 c0       	rjmp	.+8      	; 0x808 <LCD_moveCursor+0x24>
		case 3:
			lcd_memory_address=col+0x50;
 800:	90 e5       	ldi	r25, 0x50	; 80
 802:	96 0f       	add	r25, r22
				break;
 804:	01 c0       	rjmp	.+2      	; 0x808 <LCD_moveCursor+0x24>
	
	/* Calculate the required address in the LCD DDRAM */
	switch(row)
	{
		case 0:
			lcd_memory_address=col;
 806:	96 2f       	mov	r25, r22
		case 3:
			lcd_memory_address=col+0x50;
				break;
	}					
	/* Move the LCD cursor to this specific address */
	LCD_sendCommand(lcd_memory_address | LCD_SET_CURSOR_LOCATION);
 808:	89 2f       	mov	r24, r25
 80a:	80 68       	ori	r24, 0x80	; 128
 80c:	65 cf       	rjmp	.-310    	; 0x6d8 <LCD_sendCommand>
 80e:	08 95       	ret

00000810 <UART_init>:

unsigned char UART_RxChar()
{
	while ((UCSR0A & (1 << RXC0)) == 0);/* Wait till data is received */
	return(UDR0);			/* Return the byte*/
}
 810:	e1 ec       	ldi	r30, 0xC1	; 193
 812:	f0 e0       	ldi	r31, 0x00	; 0
 814:	20 81       	ld	r18, Z
 816:	28 61       	ori	r18, 0x18	; 24
 818:	20 83       	st	Z, r18
 81a:	e2 ec       	ldi	r30, 0xC2	; 194
 81c:	f0 e0       	ldi	r31, 0x00	; 0
 81e:	20 81       	ld	r18, Z
 820:	2e 60       	ori	r18, 0x0E	; 14
 822:	20 83       	st	Z, r18
 824:	dc 01       	movw	r26, r24
 826:	cb 01       	movw	r24, r22
 828:	88 0f       	add	r24, r24
 82a:	99 1f       	adc	r25, r25
 82c:	aa 1f       	adc	r26, r26
 82e:	bb 1f       	adc	r27, r27
 830:	88 0f       	add	r24, r24
 832:	99 1f       	adc	r25, r25
 834:	aa 1f       	adc	r26, r26
 836:	bb 1f       	adc	r27, r27
 838:	9c 01       	movw	r18, r24
 83a:	ad 01       	movw	r20, r26
 83c:	22 0f       	add	r18, r18
 83e:	33 1f       	adc	r19, r19
 840:	44 1f       	adc	r20, r20
 842:	55 1f       	adc	r21, r21
 844:	22 0f       	add	r18, r18
 846:	33 1f       	adc	r19, r19
 848:	44 1f       	adc	r20, r20
 84a:	55 1f       	adc	r21, r21
 84c:	60 e0       	ldi	r22, 0x00	; 0
 84e:	72 e1       	ldi	r23, 0x12	; 18
 850:	8a e7       	ldi	r24, 0x7A	; 122
 852:	90 e0       	ldi	r25, 0x00	; 0
 854:	50 d0       	rcall	.+160    	; 0x8f6 <__udivmodsi4>
 856:	8f ef       	ldi	r24, 0xFF	; 255
 858:	82 0f       	add	r24, r18
 85a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
 85e:	da 01       	movw	r26, r20
 860:	c9 01       	movw	r24, r18
 862:	01 97       	sbiw	r24, 0x01	; 1
 864:	a1 09       	sbc	r26, r1
 866:	b1 09       	sbc	r27, r1
 868:	89 2f       	mov	r24, r25
 86a:	9a 2f       	mov	r25, r26
 86c:	ab 2f       	mov	r26, r27
 86e:	bb 27       	eor	r27, r27
 870:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
 874:	08 95       	ret

00000876 <UART_TxChar>:

void UART_TxChar(char ch)
{
	while (! (UCSR0A & (1<<UDRE0)));	/* Wait for empty transmit buffer*/
 876:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 87a:	95 ff       	sbrs	r25, 5
 87c:	fc cf       	rjmp	.-8      	; 0x876 <UART_TxChar>
	UDR0 = ch ;
 87e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 882:	08 95       	ret

00000884 <UART_SendString>:
}

void UART_SendString(char *str)
{
 884:	0f 93       	push	r16
 886:	1f 93       	push	r17
 888:	cf 93       	push	r28
 88a:	8c 01       	movw	r16, r24
	unsigned char j=0;
 88c:	c0 e0       	ldi	r28, 0x00	; 0
	
	while (str[j]!=0)		/* Send string till null */
 88e:	02 c0       	rjmp	.+4      	; 0x894 <UART_SendString+0x10>
	{
		UART_TxChar(str[j]);
 890:	f2 df       	rcall	.-28     	; 0x876 <UART_TxChar>
		j++;
 892:	cf 5f       	subi	r28, 0xFF	; 255

void UART_SendString(char *str)
{
	unsigned char j=0;
	
	while (str[j]!=0)		/* Send string till null */
 894:	f8 01       	movw	r30, r16
 896:	ec 0f       	add	r30, r28
 898:	f1 1d       	adc	r31, r1
 89a:	80 81       	ld	r24, Z
 89c:	81 11       	cpse	r24, r1
 89e:	f8 cf       	rjmp	.-16     	; 0x890 <UART_SendString+0xc>
	{
		UART_TxChar(str[j]);
		j++;
	}
}
 8a0:	cf 91       	pop	r28
 8a2:	1f 91       	pop	r17
 8a4:	0f 91       	pop	r16
 8a6:	08 95       	ret

000008a8 <main>:

int main()
{
 8a8:	cf 93       	push	r28
 8aa:	df 93       	push	r29
 8ac:	cd b7       	in	r28, 0x3d	; 61
 8ae:	de b7       	in	r29, 0x3e	; 62
 8b0:	28 97       	sbiw	r28, 0x08	; 8
 8b2:	0f b6       	in	r0, 0x3f	; 63
 8b4:	f8 94       	cli
 8b6:	de bf       	out	0x3e, r29	; 62
 8b8:	0f be       	out	0x3f, r0	; 63
 8ba:	cd bf       	out	0x3d, r28	; 61
	char c;
	UART_init(9600);
 8bc:	60 e8       	ldi	r22, 0x80	; 128
 8be:	75 e2       	ldi	r23, 0x25	; 37
 8c0:	80 e0       	ldi	r24, 0x00	; 0
 8c2:	90 e0       	ldi	r25, 0x00	; 0
 8c4:	a5 df       	rcall	.-182    	; 0x810 <UART_init>
	LCD_init();
 8c6:	37 df       	rcall	.-402    	; 0x736 <LCD_init>
 8c8:	88 e0       	ldi	r24, 0x08	; 8
	char s[]="Mohamed";
 8ca:	ee e0       	ldi	r30, 0x0E	; 14
 8cc:	f2 e0       	ldi	r31, 0x02	; 2
 8ce:	de 01       	movw	r26, r28
 8d0:	11 96       	adiw	r26, 0x01	; 1
 8d2:	01 90       	ld	r0, Z+
 8d4:	0d 92       	st	X+, r0
 8d6:	8a 95       	dec	r24
 8d8:	e1 f7       	brne	.-8      	; 0x8d2 <main+0x2a>
 8da:	80 e0       	ldi	r24, 0x00	; 0
	UART_SendString("\n\t Echo Test ");
 8dc:	92 e0       	ldi	r25, 0x02	; 2
 8de:	d2 df       	rcall	.-92     	; 0x884 <UART_SendString>
 8e0:	8e 01       	movw	r16, r28
	while(1)
	{
		
		
		UART_TxChar(s);
 8e2:	0f 5f       	subi	r16, 0xFF	; 255
 8e4:	1f 4f       	sbci	r17, 0xFF	; 255
 8e6:	80 2f       	mov	r24, r16
 8e8:	c6 df       	rcall	.-116    	; 0x876 <UART_TxChar>
		
		LCD_moveCursor(0,0);
 8ea:	60 e0       	ldi	r22, 0x00	; 0
 8ec:	80 e0       	ldi	r24, 0x00	; 0
 8ee:	7a df       	rcall	.-268    	; 0x7e4 <LCD_moveCursor>
		LCD_displayString(s);
 8f0:	c8 01       	movw	r24, r16
 8f2:	66 df       	rcall	.-308    	; 0x7c0 <LCD_displayString>
 8f4:	f5 cf       	rjmp	.-22     	; 0x8e0 <main+0x38>

000008f6 <__udivmodsi4>:
 8f6:	a1 e2       	ldi	r26, 0x21	; 33
 8f8:	1a 2e       	mov	r1, r26
 8fa:	aa 1b       	sub	r26, r26
 8fc:	bb 1b       	sub	r27, r27
 8fe:	fd 01       	movw	r30, r26
 900:	0d c0       	rjmp	.+26     	; 0x91c <__udivmodsi4_ep>

00000902 <__udivmodsi4_loop>:
 902:	aa 1f       	adc	r26, r26
 904:	bb 1f       	adc	r27, r27
 906:	ee 1f       	adc	r30, r30
 908:	ff 1f       	adc	r31, r31
 90a:	a2 17       	cp	r26, r18
 90c:	b3 07       	cpc	r27, r19
 90e:	e4 07       	cpc	r30, r20
 910:	f5 07       	cpc	r31, r21
 912:	20 f0       	brcs	.+8      	; 0x91c <__udivmodsi4_ep>
 914:	a2 1b       	sub	r26, r18
 916:	b3 0b       	sbc	r27, r19
 918:	e4 0b       	sbc	r30, r20
 91a:	f5 0b       	sbc	r31, r21

0000091c <__udivmodsi4_ep>:
 91c:	66 1f       	adc	r22, r22
 91e:	77 1f       	adc	r23, r23
 920:	88 1f       	adc	r24, r24
 922:	99 1f       	adc	r25, r25
 924:	1a 94       	dec	r1
 926:	69 f7       	brne	.-38     	; 0x902 <__udivmodsi4_loop>
 928:	60 95       	com	r22
 92a:	70 95       	com	r23
 92c:	80 95       	com	r24
 92e:	90 95       	com	r25
 930:	9b 01       	movw	r18, r22
 932:	ac 01       	movw	r20, r24
 934:	bd 01       	movw	r22, r26
 936:	cf 01       	movw	r24, r30
 938:	08 95       	ret

0000093a <_exit>:
 93a:	f8 94       	cli

0000093c <__stop_program>:
 93c:	ff cf       	rjmp	.-2      	; 0x93c <__stop_program>
